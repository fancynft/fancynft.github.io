{"version":3,"sources":["pages/NftHeroesPage.js","components/Page.js","helpers/Media.ts","components/ScrollToTopOnMount.js","components/Seo.js","components/HeaderDesktop.js","components/HeaderMobile.js","components/Footer.js","components/Link/EtherscanLink.tsx","store/selectors.js","store/actions.js","../node_modules/bignumber.js/bignumber.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js"],"names":["hot","module","useEagerConnect","context","useActiveWeb3React","library","account","chainId","getNftContract","active","withSigner","provider","getSigner","Contract","FancyNftHeroesS1Address","nftHeroesAbi","getInvestorsPoolContract","InvestorsPoolAddress","InvestorsPoolAbi","getReferralTreeContract","ReferralTreeAddress","ReferralTreeAbi","useState","nullAddress","owner","setOwner","maxSupply","setMaxSupply","totalSupply","setTotalSupply","airdropMintsTotalLimit","setAirdropMintsTotalLimit","presaleMintsTotalLimit","setPresaleMintsTotalLimit","privsaleMintsTotalLimit","setPrivsaleMintsTotalLimit","airdropMintsTotal","setAirdropMintsTotal","presaleMintsTotal","setPresaleMintsTotal","privsaleMintsTotal","setPrivsaleMintsTotal","saleMintsTotal","setSaleMintsTotal","airdropMintsLimit","setAirdropMintsLimit","presaleMintsLimit","setPresaleMintsLimit","privsaleMintsLimit","setPrivsaleMintsLimit","saleMintsLimit","setSaleMintsLimit","balance","setBalance","investorRate","setInvestorRate","mints","setMints","airdropMints","setAirdropMints","presaleMints","setPresaleMints","privsaleMints","setPrivsaleMints","saleMints","setSaleMints","isAirdropWhitelisted","setAirdropWhitelisted","isPresaleWhitelisted","setPresaleWhitelisted","isPrivsaleWhitelisted","setPrivsaleWhitelisted","isAirdropActive","setAirdropActive","isPresaleActive","setPresaleActive","isPrivsaleActive","setPrivsaleActive","isSaleActive","setSaleActive","airdropStartTime","setAirdropStartTime","presaleStartTime","setPresaleStartTime","privsaleStartTime","setPrivsaleStartTime","saleStartTime","setSaleStartTime","presalePrice","setPresalePrice","privsalePrice","setPrivsalePrice","salePrice","setSalePrice","amount","BigNumber","from","initialRewardRate","reward","claimedReward","investorInfo","setInvestorInfo","totalStaked","historicalRewardRate","iPoolState","setIPoolState","investorsTotalRewards","setInvestorsTotalRewards","investorsUnclaimedRewards","setInvestorsUnclaimedRewards","investorsShare","gt","utils","formatUnits","mul","div","id","referrer","referralsCount","createdAt","refInfo","setRefInfo","referralLink","window","location","hostname","toNumber","parentId","useSelector","S","getParentId","dispatch","useDispatch","refId","setRefId","useEffect","a","A","setParentId","contractReferralTree","accounts","refParrentInfo","setInitDone","updating","setUpdating","update","contract","contractIPool","state","stakers","unrewarded","sub","shr","formatEther","unclaimed","add","MAX_SUPPLY","parseInt","toString","presaleValue","privsaleValue","saleValue","balanceOf","investorsRateOf","mintsOf","airdropWhitelist","presaleWhitelist","privsaleWhitelist","console","error","blockNumber","setBlockNumber","time","setTime","on","Date","now","intervalId","setInterval","clearInterval","isOwner","onlyOwner","toast","Error","setAirdropWhitelist","setPresaleWhitelist","setPrivsaleWhitelist","onChangeWhitelist","e","name","value","stringToList","string","list","temp","split","i","addr","trim","push","doTx","promiseTx","tx","info","hash","wait","success","addToAirdropWhitelist","addToPresaleWhitelist","addToPrivsaleWhitelist","airdropStartTimeValue","setAirdropStartTimeValue","presaleStartTimeValue","setPresaleStartTimeValue","privsaleStartTimeValue","setPrivsaleStartTimeValue","saleStartTimeValue","setSaleStartTimeValue","onChangeStartTimeValue","setupAirdropStartTime","setupPresaleStartTime","setupPrivsaleStartTime","setupSaleStartTime","airdropMintTotalLimitValue","setAirdropMintTotalLimitValue","presaleMintTotalLimitValue","setPresaleMintTotalLimitValue","privsaleMintTotalLimitValue","setPrivsaleMintTotalLimitValue","onChangeMintTotalLimitValue","setupAirdropMintTotalLimit","setupPresaleMintTotalLimit","setupPrivsaleMintTotalLimit","airdropMintLimitValue","setAirdropMintLimitValue","presaleMintLimitValue","setPresaleMintLimitValue","privsaleMintLimitValue","setPrivsaleMintLimitValue","saleMintLimitValue","setSaleMintLimitValue","onChangeMintLimitValue","setupAirdropMintLimit","setupPresaleMintLimit","setupPrivsaleMintLimit","setupSaleMintLimit","presalePriceValue","setPresalePriceValue","privsalePriceValue","setPrivsalePriceValue","salePriceValue","setSalePriceValue","onChangePriceValue","setupPresalePrice","parseEther","setupPrivsalePrice","setupSalePrice","mintAirdropCount","setMintAirdropCount","mintPresaleCount","setMintPresaleCount","mintPrivsaleCount","setMintPrivsaleCount","mintSaleCount","setMintSaleCount","onChangeMintCount","mintAirdrop","estimateGas","estimation","gasLimit","mintPresale","mintPrivsale","mintSale","claimInvestorsRewards","claimReward","refJoin","join","title","as","Content","displayType","thousandSeparator","Subheader","address","href","onClick","copy","suffix","token","circular","color","celled","compact","Header","Row","HeaderCell","Body","positive","negative","Cell","ribbon","moment","fromNow","Input","label","type","required","onChange","disabled","primary","min","step","description","meta","children","isMobile","useMediaPredicate","mobileBreakpoint","style","minHeight","ScrollToTopOnMount","scrollTo","metaDescription","defaultTitle","appName","htmlAttributes","lang","titleTemplate","undefined","content","property","concat","triedEager","openWalletConnectModal","useModal","open","openWalletAccountModal","accountShort","substring","length","fixed","size","inverted","Item","header","Link","to","routerPaths","main","NavLink","heroes","items","mixer","marketplace","lottery","staking","farming","position","appChain","sidebarOpened","setSidebarOpened","Pushable","Menu","animation","onHide","vertical","visible","Pusher","dimmed","textAlign","pointing","divided","stackable","Column","width","link","contacts","faq","LinkExternal","projectTwitter","section","getFullYear","horizontal","projectEmail","terms","privacy","EtherscanLink","props","globalObject","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","n","coeffToString","s","z","j","r","charCodeAt","slice","compare","x","y","b","xc","c","yc","k","l","intCheck","max","String","isOdd","toExponential","str","charAt","toFixedPoint","len","zs","clone","configObject","convertBase","parseNumeric","P","prototype","constructor","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","ALPHABET","alphabetHasNormalDecimalDigits","v","alphabet","caseChanged","isNum","this","_isBigNumber","test","indexOf","replace","search","round","DEBUG","toUpperCase","toLowerCase","format","rm","c0","ne","maxOrMin","args","method","m","call","normalise","pop","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","obj","p","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","arguments","lt","minimum","random","pow2_53","random53bitInt","dp","rand","Uint32Array","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","pow","multiply","base","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","toJSON","define","TableBody","className","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","handledProps","defaultProps","propTypes","TableCell","collapsing","icon","selectable","singleLine","verticalAlign","warning","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","isNil","Icon","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","useValueAndKey","TableRow","cellAs","cells","_map","cell","Table","attached","basic","columns","definition","footerRow","headerRow","headerRows","padded","renderBodyRow","sortable","striped","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement","data","index","Footer"],"mappings":"mdAqgCeA,wBAAIC,EAAJD,EAt+Bf,WACqBE,cAAnB,IACMC,EAAUC,cACRC,EAAsCF,EAAtCE,QAAkBC,GAAoBH,EAA7BI,QAA6BJ,EAApBG,SAEpBE,GAFwCL,EAAXM,OAEZ,WAAyB,IAAxBC,EAAuB,wDACzCC,EAAWN,EAEf,OADIK,IAAYC,EAAWN,EAAQO,aAC5B,IAAIC,IAASC,IAAyBC,EAAcJ,KAEvDK,EAA2B,WAAyB,IAAxBN,EAAuB,wDACnDC,EAAWN,EAEf,OADIK,IAAYC,EAAWN,EAAQO,aAC5B,IAAIC,IAASI,IAAsBC,EAAkBP,IAExDQ,EAA0B,WAAyB,IAAxBT,EAAuB,wDAClDC,EAAWN,EAEf,OADIK,IAAYC,EAAWN,EAAQO,aAC5B,IAAIC,IAASO,IAAqBC,EAAiBV,IAlBrC,EAsBGW,mBAASC,KAtBZ,mBAsBhBC,EAtBgB,KAsBTC,EAtBS,OAyBWH,mBAAS,KAzBpB,mBAyBhBI,EAzBgB,KAyBLC,EAzBK,OA0BeL,mBAAS,KA1BxB,mBA0BhBM,EA1BgB,KA0BHC,EA1BG,OA6BqCP,mBAAS,KA7B9C,mBA6BhBQ,EA7BgB,KA6BQC,EA7BR,OA8BqCT,mBAAS,KA9B9C,oBA8BhBU,GA9BgB,MA8BQC,GA9BR,SA+BuCX,mBAAS,KA/BhD,qBA+BhBY,GA/BgB,MA+BSC,GA/BT,SAkC2Bb,mBAAS,KAlCpC,qBAkChBc,GAlCgB,MAkCGC,GAlCH,SAmC2Bf,mBAAS,KAnCpC,qBAmChBgB,GAnCgB,MAmCGC,GAnCH,SAoC6BjB,mBAAS,KApCtC,qBAoChBkB,GApCgB,MAoCIC,GApCJ,SAqCqBnB,mBAAS,KArC9B,qBAqChBoB,GArCgB,MAqCAC,GArCA,SAwC2BrB,mBAAS,KAxCpC,qBAwChBsB,GAxCgB,MAwCGC,GAxCH,SAyC2BvB,mBAAS,KAzCpC,qBAyChBwB,GAzCgB,MAyCGC,GAzCH,SA0C6BzB,mBAAS,KA1CtC,qBA0ChB0B,GA1CgB,MA0CIC,GA1CJ,SA2CqB3B,mBAAS,KA3C9B,qBA2ChB4B,GA3CgB,MA2CAC,GA3CA,SA8CO7B,mBAAS,KA9ChB,qBA8ChB8B,GA9CgB,MA8CPC,GA9CO,SA+CiB/B,mBAAS,KA/C1B,qBA+ChBgC,GA/CgB,MA+CFC,GA/CE,SAgDGjC,mBAAS,KAhDZ,qBAgDhBkC,GAhDgB,MAgDTC,GAhDS,SAiDiBnC,mBAAS,KAjD1B,qBAiDhBoC,GAjDgB,MAiDFC,GAjDE,SAkDiBrC,mBAAS,KAlD1B,qBAkDhBsC,GAlDgB,MAkDFC,GAlDE,SAmDmBvC,mBAAS,KAnD5B,qBAmDhBwC,GAnDgB,MAmDDC,GAnDC,SAoDWzC,mBAAS,KApDpB,qBAoDhB0C,GApDgB,MAoDLC,GApDK,SAuD+B3C,oBAAS,GAvDxC,qBAuDhB4C,GAvDgB,MAuDMC,GAvDN,SAwD+B7C,oBAAS,GAxDxC,qBAwDhB8C,GAxDgB,MAwDMC,GAxDN,SAyDiC/C,oBAAS,GAzD1C,qBAyDhBgD,GAzDgB,MAyDOC,GAzDP,SA4DqBjD,oBAAS,GA5D9B,qBA4DhBkD,GA5DgB,MA4DCC,GA5DD,SA6DqBnD,oBAAS,GA7D9B,qBA6DhBoD,GA7DgB,MA6DCC,GA7DD,SA8DuBrD,oBAAS,GA9DhC,qBA8DhBsD,GA9DgB,MA8DEC,GA9DF,SA+DevD,oBAAS,GA/DxB,qBA+DhBwD,GA/DgB,MA+DFC,GA/DE,SAkEyBzD,mBAAS,GAlElC,qBAkEhB0D,GAlEgB,MAkEEC,GAlEF,SAmEyB3D,mBAAS,GAnElC,qBAmEhB4D,GAnEgB,MAmEEC,GAnEF,SAoE2B7D,mBAAS,GApEpC,qBAoEhB8D,GApEgB,MAoEGC,GApEH,SAqEmB/D,mBAAS,GArE5B,qBAqEhBgE,GArEgB,MAqEDC,GArEC,SAwEiBjE,mBAAS,KAxE1B,qBAwEhBkE,GAxEgB,MAwEFC,GAxEE,SAyEmBnE,mBAAS,KAzE5B,qBAyEhBoE,GAzEgB,MAyEDC,GAzEC,SA0EWrE,mBAAS,KA1EpB,qBA0EhBsE,GA1EgB,MA0ELC,GA1EK,SA4EiBvE,mBAAS,CAC/CwE,OAAQC,IAAUC,KAAK,GACvBC,kBAAmBF,IAAUC,KAAK,GAClCE,OAAQH,IAAUC,KAAK,GACvBG,cAAeJ,IAAUC,KAAK,KAhFT,qBA4EhBI,GA5EgB,MA4EFC,GA5EE,SAkFa/E,mBAAS,CAC3CgF,YAAaP,IAAUC,KAAK,GAC5BO,qBAAsBR,IAAUC,KAAK,KApFhB,qBAkFhBQ,GAlFgB,MAkFJC,GAlFI,SAsFmCnF,mBAAS,KAtF5C,qBAsFhBoF,GAtFgB,MAsFOC,GAtFP,SAuF2CrF,mBAAS,KAvFpD,qBAuFhBsF,GAvFgB,MAuFWC,GAvFX,MAwFnBC,GAAiB,IACjBV,GAAaN,OAAOiB,GAAG,MAAQP,GAAWF,YAAYS,GAAG,OAC3DD,GAAiBE,QAAMC,YACrBb,GAAaN,OAAOoB,IAAI,YAAYC,IAAIX,GAAWF,aACnD,IA5FmB,OAiGOhF,mBAAS,CACrC8F,GAAIrB,IAAUC,KAAK,GACnBqB,SAAU,GACVC,eAAgBvB,IAAUC,KAAK,GAC/BE,OAAQH,IAAUC,KAAK,GACvBuB,UAAWxB,IAAUC,KAAK,KAtGL,qBAiGhBwB,GAjGgB,MAiGPC,GAjGO,MAwGjBC,GAAY,kBAAcC,OAAOC,SAASC,SAA9B,eAA6CL,GAAQJ,GAAGU,YAMpEC,GAAWC,YAAYC,IAAMC,aAC7BC,GAAWC,cA/GM,GAgHG9G,mBAAS,GAhHZ,qBAgHhB+G,GAhHgB,MAgHTC,GAhHS,MAiHvBC,oBAAS,sBAAC,8BAAAC,EAAA,yDAGsB,IAA1BhB,GAAQJ,GAAGU,WAHP,gBAKFC,KACFO,GAASP,IACTI,GAASM,IAAMC,YAAYX,MAPvB,8BAWAY,EAAuBxH,IAXvB,SAYuBwH,EAAqBC,SAASpB,GAAQH,UAZ7D,OAYAwB,EAZA,OAaNP,GAASO,EAAezB,GAAGU,YAC3BK,GAASM,IAAMC,YAAYG,EAAezB,GAAGU,aAdvC,4CAgBP,CAACN,GAASO,KAjIU,OAqISzG,oBAAS,GArIlB,qBAqINwH,IArIM,gBAsISxH,oBAAS,GAtIlB,qBAsIhByH,GAtIgB,MAsINC,GAtIM,MAuIjBC,GAAM,uCAAG,gHAAAT,EAAA,0DACTO,GADS,wDAEbC,IAAY,GAFC,SAILE,EAAW1I,IACX2I,EAAgBnI,IAChB2H,EAAuBxH,IANlB,SAQWwH,EAAqBC,SAAStI,GARzC,cAQLkH,EARK,OASXC,GAAWD,GATA,UAWc2B,EAAcC,QAX5B,eAWL5C,EAXK,OAYXC,GAAcD,GAZH,UAagB2C,EAAcE,QAAQ/I,GAbtC,eAaL8F,EAbK,OAcXC,GAAgBD,GACVkD,EAAa9C,EAAWD,qBAAqBgD,IAAInD,EAAaH,mBACjEiB,IAAId,EAAaN,QACjB0D,IAAI,IACP7C,GAAyBK,QAAMyC,YAAYH,IACrCI,EAAYtD,EAAaF,OAC5ByD,IAAIL,GACJC,IAAInD,EAAaD,eACpBU,GAA6BG,QAAMyC,YAAYC,IAtBpC,UA0BSR,EAAS1H,QA1BlB,eA0BLA,EA1BK,OA2BXC,EAASD,GA3BE,UA8Ba0H,EAASU,aA9BtB,eA8BLlI,EA9BK,OA+BXC,EAAakI,SAASnI,EAAUoI,aA/BrB,UAgCeZ,EAAStH,cAhCxB,eAgCLA,EAhCK,OAiCXC,EAAegI,SAASjI,EAAYkI,aAjCzB,UAoC0BZ,EAASpH,yBApCnC,eAoCLA,EApCK,OAqCXC,EAA0B8H,SAAS/H,EAAuBgI,aArC/C,UAsC0BZ,EAASlH,yBAtCnC,eAsCLA,EAtCK,OAuCXC,GAA0B4H,SAAS7H,EAAuB8H,aAvC/C,UAwC2BZ,EAAShH,0BAxCpC,eAwCLA,EAxCK,OAyCXC,GAA2B0H,SAAS3H,EAAwB4H,aAzCjD,UA4CqBZ,EAAS9G,oBA5C9B,eA4CLA,EA5CK,OA6CXC,GAAqBwH,SAASzH,EAAkB0H,aA7CrC,UA8CqBZ,EAAS5G,oBA9C9B,eA8CLA,EA9CK,OA+CXC,GAAqBsH,SAASvH,EAAkBwH,aA/CrC,UAgDsBZ,EAAS1G,qBAhD/B,eAgDLA,EAhDK,OAiDXC,GAAsBoH,SAASrH,EAAmBsH,aAjDvC,UAkDkBZ,EAASxG,iBAlD3B,eAkDLA,EAlDK,OAmDXC,GAAkBkH,SAASnH,EAAeoH,aAnD/B,UAsDqBZ,EAAStG,oBAtD9B,eAsDLA,EAtDK,OAuDXC,GAAqBgH,SAASjH,EAAkBkH,aAvDrC,UAwDqBZ,EAASpG,oBAxD9B,eAwDLA,EAxDK,OAyDXC,GAAqB8G,SAAS/G,EAAkBgH,aAzDrC,UA0DsBZ,EAASlG,qBA1D/B,eA0DLA,EA1DK,OA2DXC,GAAsB4G,SAAS7G,EAAmB8G,aA3DvC,UA4DkBZ,EAAShG,iBA5D3B,eA4DLA,EA5DK,OA6DXC,GAAkB0G,SAAS3G,EAAe4G,aA7D/B,UAgEmBZ,EAAS1E,kBAhE5B,eAgELA,EAhEK,OAiEXC,GAAiBD,GAjEN,UAkEmB0E,EAASxE,kBAlE5B,eAkELA,EAlEK,OAmEXC,GAAiBD,GAnEN,UAoEoBwE,EAAStE,mBApE7B,eAoELA,EApEK,OAqEXC,GAAkBD,GArEP,UAsEgBsE,EAASpE,eAtEzB,eAsELA,EAtEK,OAuEXC,GAAcD,GAvEH,UA0EoBoE,EAASlE,mBA1E7B,eA0ELA,EA1EK,OA2EXC,GAAoBD,EAAiB8C,YA3E1B,WA4EoBoB,EAAShE,mBA5E7B,gBA4ELA,EA5EK,OA6EXC,GAAoBD,EAAiB4C,YA7E1B,WA8EqBoB,EAAS9D,oBA9E9B,gBA8ELA,EA9EK,OA+EXC,GAAqBD,EAAkB0C,YA/E5B,WAgFiBoB,EAAS5D,gBAhF1B,gBAgFLA,EAhFK,OAiFXC,GAAiBD,EAAcwC,YAjFpB,WAoFgBoB,EAASa,aAAa,GApFtC,gBAoFLvE,EApFK,OAqFXC,GACEuB,QAAMyC,YAAYjE,EAAasE,aAtFtB,WAwFiBZ,EAASc,cAAc,GAxFxC,gBAwFLtE,EAxFK,OAyFXC,GACEqB,QAAMyC,YAAY/D,EAAcoE,aA1FvB,WA4FaZ,EAASe,UAAU,GA5FhC,YA4FLrE,EA5FK,OA6FXC,GACEmB,QAAMyC,YAAY7D,EAAUkE,cAG1BxJ,EAjGO,oCAmGa4I,EAASgB,UAAU5J,GAnGhC,gBAmGH8C,EAnGG,OAoGTC,GAAWwG,SAASzG,EAAQ0G,aApGnB,WAqGkBZ,EAASiB,gBAAgB7J,GArG3C,gBAqGHgD,EArGG,OAsGTC,GAAgByD,QAAMyC,YAAYnG,EAAawG,aAtGtC,WAwGWZ,EAASkB,QAAQ9J,GAxG5B,gBAwGHkD,EAxGG,OAyGTC,GAASoG,SAASrG,EAAMsG,aAzGf,WA0GkBZ,EAASxF,aAAapD,GA1GxC,gBA0GHoD,EA1GG,OA2GTC,GAAgBkG,SAASnG,EAAaoG,aA3G7B,WA4GkBZ,EAAStF,aAAatD,GA5GxC,gBA4GHsD,EA5GG,OA6GTC,GAAgBgG,SAASjG,EAAakG,aA7G7B,WA8GmBZ,EAASpF,cAAcxD,GA9G1C,gBA8GHwD,EA9GG,OA+GTC,GAAiB8F,SAAS/F,EAAcgG,aA/G/B,WAgHeZ,EAASlF,UAAU1D,GAhHlC,gBAgHH0D,EAhHG,OAiHTC,GAAa4F,SAAS7F,EAAU8F,aAjHvB,WAoH0BZ,EAASmB,iBAAiB/J,GApHpD,gBAoHH4D,EApHG,OAqHTC,GAAsBD,GArHb,WAsH0BgF,EAASoB,iBAAiBhK,GAtHpD,gBAsHH8D,EAtHG,OAuHTC,GAAsBD,GAvHb,WAwH2B8E,EAASqB,kBAAkBjK,GAxHtD,SAwHHgE,EAxHG,OAyHTC,GAAuBD,GAzHd,0BA4HTjB,GAAW,GACXE,GAAgB,KAGhBE,GAAS,KACTE,GAAgB,KAChBE,GAAgB,KAChBE,GAAiB,KACjBE,GAAa,KAGbE,IAAsB,GACtBE,IAAsB,GACtBE,IAAuB,GAzId,8DA4IKiG,QAAQC,MAAR,MA5IL,SA6Ib3B,IAAY,GACZE,IAAY,GA9IC,4DAAH,qDAvIW,GAwRe1H,oBAAU,GAxRzB,qBAwRhBoJ,GAxRgB,MAwRHC,GAxRG,SAyRCrJ,mBAAS,GAzRV,qBAyRhBsJ,GAzRgB,MAyRVC,GAzRU,MA0RvBtC,qBAAU,WACJlI,GACFA,EAAQyK,GAAG,SAAS,SAACJ,GACnBC,GAAeD,GACfzB,QAIJ4B,GAAQE,KAAKC,OACb,IAAMC,EAAaC,aAAY,WAC7BL,GAAQE,KAAKC,SACZ,KAEH,OAAO,WACLG,cAAcF,MAEf,IACH1C,qBAAU,WACJlI,GACFA,EAAQyK,GAAG,SAAS,SAACJ,GACnBC,GAAeD,GACfzB,UAGH,CAAC5I,IAEJkI,qBAAU,cACP,CAACqC,KAKJ,IAAMQ,GAAU,WACd,OAAI9K,IAAYkB,GAKZ6J,GAAY,WAChB,IAAKD,KAEH,MADAE,IAAMb,MAAM,aACN,IAAIc,MAAM,cAnUG,GA0UyBjK,mBAAS,IA1UlC,qBA0UhB+I,GA1UgB,MA0UEmB,GA1UF,SA2UyBlK,mBAAS,IA3UlC,qBA2UhBgJ,GA3UgB,MA2UEmB,GA3UF,SA4U2BnK,mBAAS,IA5UpC,qBA4UhBiJ,GA5UgB,MA4UGmB,GA5UH,MA6UjBC,GAAoB,SAACC,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACpC,OAAQD,GACN,IAAK,mBAAoBL,GAAoBM,GAAQ,MACrD,IAAK,mBAAoBL,GAAoBK,GAAQ,MACrD,IAAK,oBAAqBJ,GAAqBI,KAI7CC,GAAe,SAACC,GACpB,IAAMC,EAAO,GACPC,EAAOF,EAAOG,MAAM,KAC1B,IAAK,IAAIC,KAAKF,EAAM,CAClB,IAAIG,EAAOH,EAAKE,GAAGE,OACfD,GAAiB,KAATA,GACVJ,EAAKM,KAAKF,GAEd,OAAOJ,GAEHO,GAAI,uCAAG,WAAOC,GAAP,eAAAjE,EAAA,+EAEQiE,EAFR,UAEHC,EAFG,+DAITpB,IAAMqB,KAAK,kBAAmBD,EAAGE,MAJxB,SAKHF,EAAGG,KAAK,GALL,OAMTvB,IAAMwB,QAAQ,eAAgBJ,EAAGE,MANxB,kDAQTpC,QAAQC,MAAR,MACAa,IAAMb,MAAM,cATH,0DAAH,sDAYJsC,GAAqB,uCAAG,4BAAAvE,EAAA,sDAC5B6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAAS6D,sBAAsBhB,GAAa1B,MAHrB,2CAAH,qDAKrB2C,GAAqB,uCAAG,4BAAAxE,EAAA,sDAC5B6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAAS8D,sBAAsBjB,GAAazB,MAHrB,2CAAH,qDAKrB2C,GAAsB,uCAAG,4BAAAzE,EAAA,sDAC7B6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAAS+D,uBAAuBlB,GAAaxB,MAHrB,2CAAH,qDArXL,GA8XmCjJ,mBAAS,KA9X5C,qBA8XhB4L,GA9XgB,MA8XOC,GA9XP,SA+XmC7L,mBAAS,KA/X5C,qBA+XhB8L,GA/XgB,MA+XOC,GA/XP,SAgYqC/L,mBAAS,KAhY9C,qBAgYhBgM,GAhYgB,MAgYQC,GAhYR,SAiY6BjM,mBAAS,KAjYtC,qBAiYhBkM,GAjYgB,MAiYIC,GAjYJ,MAkYjBC,GAAyB,SAAC9B,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzC,OAAQD,GACN,IAAK,wBAAyBsB,GAAyBrB,GAAQ,MAC/D,IAAK,wBAAyBuB,GAAyBvB,GAAQ,MAC/D,IAAK,yBAA0ByB,GAA0BzB,GAAQ,MACjE,IAAK,qBAAsB2B,GAAsB3B,KAI/C6B,GAAqB,uCAAG,4BAAAnF,EAAA,sDAC5B6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAASjE,oBAAoBiI,KAHN,2CAAH,qDAMrBU,GAAqB,uCAAG,4BAAApF,EAAA,sDAC5B6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAAS/D,oBAAoBiI,KAHN,2CAAH,qDAMrBS,GAAsB,uCAAG,4BAAArF,EAAA,sDAC7B6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAAS7D,qBAAqBiI,KAHN,2CAAH,qDAMtBQ,GAAkB,uCAAG,4BAAAtF,EAAA,sDACzB6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAAS3D,iBAAiBiI,KAHN,2CAAH,qDA7ZD,GAsa6ClM,mBAAS,KAtatD,qBAsahByM,GAtagB,MAsaYC,GAtaZ,SAua6C1M,mBAAS,KAvatD,qBAuahB2M,GAvagB,MAuaYC,GAvaZ,SAwa+C5M,mBAAS,KAxaxD,qBAwahB6M,GAxagB,MAwaaC,GAxab,MAyajBC,GAA8B,SAACzC,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC9C,OAAQD,GACN,IAAK,6BAA8BmC,GAA8BlC,GAAQ,MACzE,IAAK,6BAA8BoC,GAA8BpC,GAAQ,MACzE,IAAK,8BAA+BsC,GAA+BtC,KAIjEwC,GAA0B,uCAAG,4BAAA9F,EAAA,sDACjC6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAASnH,0BAA0BgM,KACxCC,GAA8B,KAJG,2CAAH,qDAM1BO,GAA0B,uCAAG,4BAAA/F,EAAA,sDACjC6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAASjH,0BAA0BgM,KACxCC,GAA8B,KAJG,2CAAH,qDAM1BM,GAA2B,uCAAG,4BAAAhG,EAAA,sDAClC6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAAS/G,2BAA2BgM,KACzCC,GAA+B,KAJG,2CAAH,qDA7bV,GAucmC9M,mBAAS,KAvc5C,qBAuchBmN,GAvcgB,MAucOC,GAvcP,SAwcmCpN,mBAAS,KAxc5C,qBAwchBqN,GAxcgB,MAwcOC,GAxcP,SAycqCtN,mBAAS,KAzc9C,qBAychBuN,GAzcgB,MAycQC,GAzcR,SA0c6BxN,mBAAS,KA1ctC,qBA0chByN,GA1cgB,MA0cIC,GA1cJ,MA2cjBC,GAAyB,SAACrD,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzC,OAAQD,GACN,IAAK,wBAAyB6C,GAAyB5C,GAAQ,MAC/D,IAAK,wBAAyB8C,GAAyB9C,GAAQ,MAC/D,IAAK,yBAA0BgD,GAA0BhD,GAAQ,MACjE,IAAK,qBAAsBkD,GAAsBlD,KAI/CoD,GAAqB,uCAAG,4BAAA1G,EAAA,sDAC5B6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAASrG,qBAAqB4L,KACnCC,GAAyB,KAJG,2CAAH,qDAMrBS,GAAqB,uCAAG,4BAAA3G,EAAA,sDAC5B6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAASnG,qBAAqB4L,KACnCC,GAAyB,KAJG,2CAAH,qDAMrBQ,GAAsB,uCAAG,4BAAA5G,EAAA,sDAC7B6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAASjG,sBAAsB4L,KACpCC,GAA0B,KAJG,2CAAH,qDAMtBO,GAAkB,uCAAG,4BAAA7G,EAAA,sDACzB6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAAS/F,kBAAkB4L,KAChCC,GAAsB,KAJG,2CAAH,qDAteD,GAgf2B1N,mBAAS,KAhfpC,qBAgfhBgO,GAhfgB,MAgfGC,GAhfH,SAif6BjO,mBAAS,KAjftC,qBAifhBkO,GAjfgB,MAifIC,GAjfJ,SAkfqBnO,mBAAS,KAlf9B,qBAkfhBoO,GAlfgB,MAkfAC,GAlfA,MAmfjBC,GAAqB,SAAChE,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACrC,OAAQD,GACN,IAAK,oBAAqB0D,GAAqBzD,GAAQ,MACvD,IAAK,qBAAsB2D,GAAsB3D,GAAQ,MACzD,IAAK,iBAAkB6D,GAAkB7D,KAIvC+D,GAAiB,uCAAG,4BAAArH,EAAA,sDACxB6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAASzD,gBAAgBuB,QAAM8I,WAAWR,MAC/CC,GAAqB,KAJG,2CAAH,qDAMjBQ,GAAkB,uCAAG,4BAAAvH,EAAA,sDACzB6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAASvD,iBAAiBqB,QAAM8I,WAAWN,MAChDC,GAAsB,KAJG,2CAAH,qDAMlBO,GAAc,uCAAG,4BAAAxH,EAAA,sDACrB6C,KACMnC,EAAW1I,GAAe,GAChCgM,GAAKtD,EAASrD,aAAamB,QAAM8I,WAAWJ,MAC5CC,GAAkB,KAJG,2CAAH,qDAvgBG,GAihByBrO,mBAAS,KAjhBlC,qBAihBhB2O,GAjhBgB,MAihBEC,GAjhBF,SAkhByB5O,mBAAS,KAlhBlC,qBAkhBhB6O,GAlhBgB,MAkhBEC,GAlhBF,SAmhB2B9O,mBAAS,KAnhBpC,qBAmhBhB+O,GAnhBgB,MAmhBGC,GAnhBH,SAohBmBhP,mBAAS,KAphB5B,qBAohBhBiP,GAphBgB,MAohBDC,GAphBC,MAqhBjBC,GAAoB,SAAC7E,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACpC,OAAQD,GACN,IAAK,mBAAoBqE,GAAoBpE,GAAQ,MACrD,IAAK,mBAAoBsE,GAAoBtE,GAAQ,MACrD,IAAK,oBAAqBwE,GAAqBxE,GAAQ,MACvD,IAAK,gBAAiB0E,GAAiB1E,KAIrC4E,GAAW,uCAAG,8BAAAlI,EAAA,6DACZU,EAAW1I,GAAe,GADd,SAEO0I,EAASyH,YAAYD,YAAYT,GAAkB5H,IAF1D,cAEZuI,EAFY,gBAGZpE,GAAKtD,EAASwH,YAAYT,GAAkB5H,GAAO,CAAEwI,SAAUD,EAAW1J,IAAI,KAAKC,IAAI,QAH3E,2CAAH,qDAOX2J,GAAW,uCAAG,gCAAAtI,EAAA,6DACZU,EAAW1I,GAAe,GADd,SAEE0I,EAASa,aAAaoG,IAFxB,cAEZrE,EAFY,gBAGO5C,EAASyH,YAAYG,YAAYX,GAAkB9H,GAAO,CAAEyD,MAAOA,IAH1E,cAGZ8E,EAHY,gBAIZpE,GAAKtD,EAAS4H,YAAYX,GAAkB9H,GAAO,CACvDyD,MAAOA,EACP+E,SAAUD,EAAW1J,IAAI,KAAKC,IAAI,QANlB,2CAAH,qDAWX4J,GAAY,uCAAG,gCAAAvI,EAAA,6DACbU,EAAW1I,GAAe,GADb,SAEC0I,EAASc,cAAcqG,IAFxB,cAEbvE,EAFa,gBAGM5C,EAASyH,YAAYI,aAAaV,GAAmBhI,GAAO,CAAEyD,MAAOA,IAH3E,OAGb8E,EAHa,OAInBpE,GAAKtD,EAAS6H,aAAaV,GAAmBhI,GAAO,CACnDyD,MAAOA,EACP+E,SAAUD,EAAW1J,IAAI,KAAKC,IAAI,QANjB,2CAAH,qDAWZ6J,GAAQ,uCAAG,gCAAAxI,EAAA,6DACTU,EAAW1I,GAAe,GADjB,SAEK0I,EAASe,UAAUsG,IAFxB,cAETzE,EAFS,gBAGU5C,EAASyH,YAAYK,SAAST,GAAelI,GAAO,CAAEyD,MAAOA,IAHvE,cAGT8E,EAHS,gBAITpE,GAAKtD,EAAS8H,SAAST,GAAelI,GAAO,CACjDyD,MAAOA,EACP+E,SAAUD,EAAW1J,IAAI,KAAKC,IAAI,QANrB,2CAAH,qDAaR8J,GAAqB,uCAAG,4BAAAzI,EAAA,6DACtBU,EAAWlI,GAAyB,GADd,SAEtBwL,GAAKtD,EAASgI,eAFQ,OAG5BrK,GAA6B,KAHD,2CAAH,qDAMrBsK,GAAO,uCAAG,4BAAA3I,EAAA,6DACRG,EAAuBxH,GAAwB,GADvC,SAERqL,GAAK7D,EAAqByI,KAAK/I,KAFvB,2CAAH,qDAKb,OACE,cAAC,IAAD,CAAMgJ,MAAO,SAAb,SACE,eAAC,IAAD,WACE,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,GAAG,KAAX,SACE,eAAC,IAAOC,QAAR,sBACU,cAAC,IAAD,CAAQzF,MAAOlK,EACrB4P,YAAY,OAAOC,mBAAiB,IAFxC,IAE4C,cAAC,IAAD,CAAQ3F,MAAOpK,EACrD8P,YAAY,OAAOC,mBAAiB,IAH1C,IAIE,eAAC,IAAOC,UAAR,WACE,mDAAqB,cAAC,IAAD,CAAeC,QAAS7Q,IAAxB,SAAkDA,SACvE,0CAAY,cAAC,IAAD,CAAe6Q,QAASnQ,EAAxB,SAAgCA,OAC5C,+CAAiB,cAAC,IAAD,CAAQsK,MAAOpB,GAC9B8G,YAAY,OAAOC,mBAAiB,iBAQ9C,eAAC,IAAD,WACE,cAAC,IAAD,CAAQH,GAAG,KAAX,kBACA,gDAAmBjJ,MACnB,4CAAc,cAAC,IAAD,CAAesJ,QAASrR,EAAxB,SAAkCA,OAC/CkH,GAAQJ,GAAGU,WAAa,GAAK,qCAC5B,kDAAoB,cAAC,IAAD,CAAc8J,KAAMlK,GAApB,SAAmCA,KAAvD,IAAoF,cAAC,IAAD,CAAQmK,QArgB5E,WACxBC,IAAKpK,IACL4D,IAAMqB,KAAK,0BAmgBiF,qBACpF,qDAAuB,cAAC,IAAD,CAAQb,MAAO9E,QAAMyC,YAAYjC,GAAQtB,QAAS6L,OAAO,OAAOP,YAAY,OAAOC,mBAAiB,UAElG,IAA1BjK,GAAQJ,GAAGU,YACV,8BAAK,cAAC,IAAD,CAAQ+J,QAASV,GAAjB,wCAEP,gDAAkB,cAAC,IAAD,CAAea,MAAK,UAAKlR,IAAL,cAAkCR,GAAtD,SAAiE,cAAC,IAAD,CAAQwL,MAAO1I,GAASoO,YAAY,OAAOC,mBAAiB,SAC/I,0CAAY,cAAC,IAAD,CAAQ3F,MAAOtI,GAAOgO,YAAY,OAAOC,mBAAiB,OACtE,mDAAsB,IACR,IAAVjO,IAAgB,cAAC,IAAD,CAAOyO,UAAQ,EAACC,MAAM,MAAtB,kBAChB1O,IAAS,GAAKA,GAAQ,IAAO,cAAC,IAAD,CAAOyO,UAAQ,EAACC,MAAM,OAAtB,eAC7B1O,IAAS,IAAMA,GAAQ,KAAQ,cAAC,IAAD,CAAOyO,UAAQ,EAACC,MAAM,OAAtB,eAC/B1O,IAAS,KAAOA,GAAQ,KAAQ,cAAC,IAAD,CAAOyO,UAAQ,EAACC,MAAM,OAAtB,eAChC1O,GAAQ,KAAQ,cAAC,IAAD,CAAOyO,UAAQ,EAACC,MAAM,OAAtB,kBAEpB,kDAAoB,cAAC,IAAD,CAAQpG,MAAOxI,GAAckO,YAAY,OAAOC,mBAAiB,OACrF,mDAAqB,cAAC,IAAD,CAAQ3F,MAAOhF,GAAgBiL,OAAO,KAAKP,YAAY,OAAOC,mBAAiB,OACpG,mDAAqB,cAAC,IAAD,CAAQ3F,MAAOpF,GAAuBqL,OAAO,OAAOP,YAAY,OAAOC,mBAAiB,OAC7G,uDAAyB,cAAC,IAAD,CAAQ3F,MAAOlF,GAA2BmL,OAAO,OAAOP,YAAY,OAAOC,mBAAiB,IAArH,IAAyH,cAAC,IAAD,CAAQI,QAASZ,GAAjB,sBACzH,eAAC,IAAD,CAAOkB,QAAM,EAACC,SAAO,EAArB,UACE,cAAC,IAAMC,OAAP,UACE,eAAC,IAAMC,IAAP,WACE,cAAC,IAAMC,WAAP,6BACA,cAAC,IAAMA,WAAP,4BACA,cAAC,IAAMA,WAAP,yBAIJ,eAAC,IAAMC,KAAP,WACE,eAAC,IAAMF,IAAP,CAAWG,SAAUjP,IAAS,EAAGkP,SAAoB,IAAVlP,GAA3C,UACE,cAAC,IAAMmP,KAAP,UAAcnP,IAAS,GAAKA,GAAQ,GAAM,cAAC,IAAD,CAAOoP,QAAM,EAACV,MAAM,OAApB,oBAA4C,WACtF,cAAC,IAAMS,KAAP,gBACA,cAAC,IAAMA,KAAP,UAAa,iBAEf,eAAC,IAAML,IAAP,CAAWG,SAAUjP,IAAS,GAAIkP,SAAUlP,GAAQ,GAApD,UACE,cAAC,IAAMmP,KAAP,UAAcnP,IAAS,IAAMA,GAAQ,IAAO,cAAC,IAAD,CAAOoP,QAAM,EAACV,MAAM,OAApB,oBAA4C,WACxF,cAAC,IAAMS,KAAP,gBACA,cAAC,IAAMA,KAAP,UAAa,uBAEf,eAAC,IAAML,IAAP,CAAWG,SAAUjP,IAAS,IAAKkP,SAAUlP,GAAQ,IAArD,UACE,cAAC,IAAMmP,KAAP,UAAcnP,IAAS,KAAOA,GAAQ,IAAO,cAAC,IAAD,CAAOoP,QAAM,EAACV,MAAM,OAApB,oBAA4C,WACzF,cAAC,IAAMS,KAAP,gBACA,cAAC,IAAMA,KAAP,UAAa,wBAEf,eAAC,IAAML,IAAP,CAAWG,SAAUjP,IAAS,IAAKkP,SAAUlP,GAAQ,IAArD,UACE,cAAC,IAAMmP,KAAP,UAAcnP,IAAS,IAAO,cAAC,IAAD,CAAOoP,QAAM,EAACV,MAAM,OAApB,oBAA4C,WAC1E,cAAC,IAAMS,KAAP,gBACA,cAAC,IAAMA,KAAP,UAAa,4BAOrB,eAAC,IAAD,WACE,eAAC,IAAD,CAAQrB,GAAG,KAAX,sBACY9M,GAAkB,UAAY,OAD1C,IAEE,eAAC,IAAOkN,UAAR,WACE,8BAAMxN,GAAuB,cAAgB,oBAC7C,+CAAkBc,GAAlB,KAAsC6N,IAAO7N,GAAkB,KAAK8N,UAApE,OACA,gDAAkB,cAAC,IAAD,CAAQhH,MAAO1J,GAAmBoP,YAAY,OAAOC,mBAAiB,OACxF,sDAAwB,cAAC,IAAD,CAAQ3F,MAAOhK,EAAwB0P,YAAY,OAAOC,mBAAiB,OACnG,0CAAY,cAAC,IAAD,CAAQ3F,MAAOpI,GAAc8N,YAAY,OAAOC,mBAAiB,OAC7E,gDAAkB,cAAC,IAAD,CAAQ3F,MAAOlJ,GAAmB4O,YAAY,OAAOC,mBAAiB,aAG5F,eAAC,IAAD,WACE,cAAC,IAAKsB,MAAN,CACElH,KAAK,mBAAmBmH,MAAO,eAAgBC,KAAK,OAAOC,UAAQ,EACnEpH,MAAOzB,GAAkB8I,SAAUxH,GACnCyH,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAS9E,GACjBqG,UAAWhI,KAFb,iCAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,wBAAwBmH,MAAO,aAAcC,KAAK,SAASC,UAAQ,EACxEpH,MAAOoB,GAAuBiG,SAAUzF,GACxC0F,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAASlE,GACjByF,UAAWhI,KAFb,+BAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,6BAA6BmH,MAAO,mBAAoBC,KAAK,SAASC,UAAQ,EACnFpH,MAAOiC,GAA4BoF,SAAU9E,GAC7C+E,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAASvD,GACjB8E,UAAWhI,KAFb,qCAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,wBAAwBmH,MAAO,aAAcC,KAAK,SAASC,UAAQ,EACxEpH,MAAO2C,GAAuB0E,SAAUlE,GACxCmE,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAS3C,GACjBkE,UAAWhI,KAFb,+BAKF,cAAC,IAAD,IAGA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,mBAAmBmH,MAAO,QAASC,KAAK,SAASK,IAAI,IAAIC,KAAK,IAAIL,UAAQ,EAC/EpH,MAAOmE,GAAkBkD,SAAU1C,GACnC2C,UAAW5O,KAAoBN,KAEjC,cAAC,IAAD,CACEmP,SAAO,EAACxB,QAASnB,GACjB0C,UAAW5O,KAAoBN,IAAuD,IAA/B2F,SAASoG,IAFlE,wBAQJ,eAAC,IAAD,WACE,eAAC,IAAD,CAAQqB,GAAG,KAAX,sBACY5M,GAAkB,UAAY,OAD1C,IAEE,eAAC,IAAOgN,UAAR,WACE,8BAAMtN,GAAuB,cAAgB,oBAC7C,+CAAkBc,GAAlB,KAAsC2N,IAAO3N,GAAkB,KAAK4N,UAApE,OACA,gDAAkB,cAAC,IAAD,CAAQhH,MAAOxJ,GAAmBkP,YAAY,OAAOC,mBAAiB,OACxF,sDAAwB,cAAC,IAAD,CAAQ3F,MAAO9J,GAAwBwP,YAAY,OAAOC,mBAAiB,OACnG,0CAAY,cAAC,IAAD,CAAQ3F,MAAOlI,GAAc4N,YAAY,OAAOC,mBAAiB,OAC7E,gDAAkB,cAAC,IAAD,CAAQ3F,MAAOhJ,GAAmB0O,YAAY,OAAOC,mBAAiB,OACxF,0CAAY,cAAC,IAAD,CAAQ3F,MAAOtG,GAAcuM,OAAO,OAAOP,YAAY,OAAOC,mBAAiB,aAG/F,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAKsB,MAAN,CACElH,KAAK,mBAAmBmH,MAAO,eAAgBC,KAAK,OAAOC,UAAQ,EACnEpH,MAAOxB,GAAkB6I,SAAUxH,GACnCyH,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAS7E,GACjBoG,UAAWhI,KAFb,iCAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,wBAAwBmH,MAAO,aAAcC,KAAK,SAASC,UAAQ,EACxEpH,MAAOsB,GAAuB+F,SAAUzF,GACxC0F,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAASjE,GACjBwF,UAAWhI,KAFb,+BAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,6BAA6BmH,MAAO,mBAAoBC,KAAK,SAASC,UAAQ,EACnFpH,MAAOmC,GAA4BkF,SAAU9E,GAC7C+E,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAStD,GACjB6E,UAAWhI,KAFb,qCAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,wBAAwBmH,MAAO,aAAcC,KAAK,SAASC,UAAQ,EACxEpH,MAAO6C,GAAuBwE,SAAUlE,GACxCmE,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAS1C,GACjBiE,UAAWhI,KAFb,+BAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,oBAAoBmH,MAAO,YAAaC,KAAK,SAASC,UAAQ,EACnEpH,MAAOwD,GAAmB6D,SAAUvD,GACpCwD,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAShC,GACjBuD,UAAWhI,KAFb,0BAKF,cAAC,IAAD,IAGA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,mBAAmBmH,MAAO,QAASC,KAAK,SAASK,IAAI,IAAIC,KAAK,IAAIL,UAAQ,EAC/EpH,MAAOqE,GAAkBgD,SAAU1C,GACnC2C,UAAW1O,KAAoBN,KAEjC,cAAC,IAAD,CACEiP,SAAO,EAACxB,QAASf,GACjBsC,UAAW1O,KAAoBN,IAAuD,IAA/ByF,SAASsG,IAFlE,wBAQJ,eAAC,IAAD,WACE,eAAC,IAAD,CAAQmB,GAAG,KAAX,uBACa1M,GAAmB,UAAY,OAD5C,IAEE,eAAC,IAAO8M,UAAR,WACE,8BAAMpN,GAAwB,cAAgB,oBAC9C,+CAAkBc,GAAlB,KAAuCyN,IAAOzN,GAAmB,KAAK0N,UAAtE,OACA,gDAAkB,cAAC,IAAD,CAAQhH,MAAOtJ,GAAoBgP,YAAY,OAAOC,mBAAiB,OACzF,sDAAwB,cAAC,IAAD,CAAQ3F,MAAO5J,GAAyBsP,YAAY,OAAOC,mBAAiB,OACpG,0CAAY,cAAC,IAAD,CAAQ3F,MAAOhI,GAAe0N,YAAY,OAAOC,mBAAiB,OAC9E,gDAAkB,cAAC,IAAD,CAAQ3F,MAAO9I,GAAoBwO,YAAY,OAAOC,mBAAiB,OACzF,0CAAY,cAAC,IAAD,CAAQ3F,MAAOpG,GAAeqM,OAAO,OAAOP,YAAY,OAAOC,mBAAiB,aAGhG,eAAC,IAAD,WACE,cAAC,IAAKsB,MAAN,CACElH,KAAK,oBAAoBmH,MAAO,eAAgBC,KAAK,OAAOC,UAAQ,EACpEpH,MAAOvB,GAAmB4I,SAAUxH,GACpCyH,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAS5E,GACjBmG,UAAWhI,KAFb,iCAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,yBAAyBmH,MAAO,aAAcC,KAAK,SAASC,UAAQ,EACzEpH,MAAOwB,GAAwB6F,SAAUzF,GACzC0F,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAShE,GACjBuF,UAAWhI,KAFb,+BAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,8BAA8BmH,MAAO,mBAAoBC,KAAK,SAASC,UAAQ,EACpFpH,MAAOqC,GAA6BgF,SAAU9E,GAC9C+E,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAASrD,GACjB4E,UAAWhI,KAFb,qCAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,yBAAyBmH,MAAO,aAAcC,KAAK,SAASC,UAAQ,EACzEpH,MAAO+C,GAAwBsE,SAAUlE,GACzCmE,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAASzC,GACjBgE,UAAWhI,KAFb,+BAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,qBAAqBmH,MAAO,YAAaC,KAAK,SAASC,UAAQ,EACpEpH,MAAO0D,GAAoB2D,SAAUvD,GACrCwD,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAS9B,GACjBqD,UAAWhI,KAFb,0BAKF,cAAC,IAAD,IAGA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,oBAAoBmH,MAAO,QAASC,KAAK,SAASK,IAAI,IAAIC,KAAK,IAAIL,UAAQ,EAChFpH,MAAOuE,GAAmB8C,SAAU1C,GACpC2C,UAAWxO,KAAqBN,KAElC,cAAC,IAAD,CACE+O,SAAO,EAACxB,QAASd,GACjBqC,UAAWxO,KAAqBN,IAAyD,IAAhCuF,SAASwG,IAFpE,wBAQJ,eAAC,IAAD,WACE,eAAC,IAAD,CAAQiB,GAAG,KAAX,mBACSxM,GAAe,UAAY,OADpC,IAEE,eAAC,IAAO4M,UAAR,WACE,+CAAkBpM,GAAlB,KAAmCuN,IAAOvN,GAAe,KAAKwN,UAA9D,OACA,gDAAkB,cAAC,IAAD,CAAQhH,MAAOpJ,GAAgB8O,YAAY,OAAOC,mBAAiB,OACrF,0CAAY,cAAC,IAAD,CAAQ3F,MAAO9H,GAAWwN,YAAY,OAAOC,mBAAiB,OAC1E,gDAAkB,cAAC,IAAD,CAAQ3F,MAAO5I,GAAgBsO,YAAY,OAAOC,mBAAiB,OACrF,0CAAY,cAAC,IAAD,CAAQ3F,MAAOlG,GAAWmM,OAAO,OAAOP,YAAY,OAAOC,mBAAiB,aAG5F,eAAC,IAAD,WACE,cAAC,IAAKsB,MAAN,CACElH,KAAK,qBAAqBmH,MAAO,aAAcC,KAAK,SAASC,UAAQ,EACrEpH,MAAO0B,GAAoB2F,SAAUzF,GACrC0F,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAS/D,GACjBsF,UAAWhI,KAFb,+BAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,qBAAqBmH,MAAO,aAAcC,KAAK,SAASC,UAAQ,EACrEpH,MAAOiD,GAAoBoE,SAAUlE,GACrCmE,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAASxC,GACjB+D,UAAWhI,KAFb,+BAKF,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,iBAAiBmH,MAAO,YAAaC,KAAK,SAASC,UAAQ,EAChEpH,MAAO4D,GAAgByD,SAAUvD,GACjCwD,UAAWhI,OAEb,cAAC,IAAD,CACEiI,SAAO,EAACxB,QAAS7B,GACjBoD,UAAWhI,KAFb,0BAKF,cAAC,IAAD,IAGA,eAAC,IAAD,WACE,cAAC,IAAK2H,MAAN,CACElH,KAAK,gBAAgBmH,MAAO,QAASC,KAAK,SAASK,IAAI,IAAIC,KAAK,IAAIL,UAAQ,EAC5EpH,MAAOyE,GAAe4C,SAAU1C,GAChC2C,UAAWtO,KAEb,cAAC,IAAD,CACEuO,SAAO,EAACxB,QAASb,GACjBoC,UAAWtO,IAA4C,IAA5B+E,SAAS0G,IAFtC,iC,uDCz/BZ,mGA0CevQ,kBAAIC,EAAJD,EA7Bf,YAAuD,IAAvCqR,EAAsC,EAAtCA,MAAOmC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAClCC,EAAWC,4BAAkBC,KAEnC,OACE,qCACE,cAAC,IAAD,IACA,cAAC,IAAD,CACExC,MAAOA,EACPmC,YAAaA,EACbC,KAAMA,GAAc,MAGpBE,GAAY,qCACZ,cAAC,IAAD,IACA,sBAAMG,MAAO,CAAEC,UAAW,SAA1B,SACGL,OAIJC,GAAY,cAAC,IAAD,UACX,sBAAMG,MAAO,CAAEC,UAAW,SAA1B,SACGL,MAGL,cAAC,IAAD,Y,sDCrCN,kCAAO,IAAMG,EAAmB,sB,iCCAhC,6CAIe,SAASG,IAKtB,OAJAzL,qBAAU,WACRZ,OAAOsM,SAAS,EAAG,KAClB,IAEI,O,kCCTT,qDA6DejU,kBAAIC,EAAJD,EAtDf,YAA6C,IAA9BqR,EAA6B,EAA7BA,MAAOmC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,KAC3BS,EAAkBV,EAClBW,EAAeC,IAGrB,OACE,cAAC,IAAD,CACEC,eAAgB,CACdC,KAAM,MAGRjD,MAAOA,EACP8C,aAAcA,EACdI,cAAeJ,EAAY,eAAWA,QAAiBK,EAEvDf,KAAM,CACJ,CACE5H,KAAK,cACL4I,QAASP,GAEX,CACEQ,SAAS,WACTD,QAASpD,GAEX,CACEqD,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACE5I,KAAK,eACL4I,QAAQ,WAEV,CACE5I,KAAK,kBACL4I,QAAoB,IAEtB,CACE5I,KAAK,gBACL4I,QAASpD,GAEX,CACExF,KAAK,sBACL4I,QAASP,IAEXS,OAAOlB,U,uDCvDf,yGAoDezT,kBAAIC,EAAJD,EAzCf,WACE,IAAM4U,EAAa1U,cACbC,EAAUC,cACRG,EAA6BJ,EAA7BI,QAASD,EAAoBH,EAApBG,QAASG,EAAWN,EAAXM,OACZoU,EAA2BC,YAAS,sBAA1CC,KACMC,EAA2BF,YAAS,sBAA1CC,KAEFE,EAAe3U,EAAO,UACrBA,EAAQ4U,UAAU,EAAG,GADA,cACQ5U,EAAQ4U,UAAU5U,EAAQ6U,OAAS,IACnE,iBAEJ,OACE,cAAC,IAAD,CAAS7D,GAAI,SAAb,SACE,cAAC,IAAD,CAAM8D,MAAM,MAAMC,KAAK,QAAQC,UAAQ,EAAvC,SACE,eAAC,IAAD,WACE,cAAC,IAAKC,KAAN,CAAWC,QAAM,EAAClE,GAAImE,IAAMC,GAAIC,IAAYC,KAA5C,SAAmDxB,MACnD,cAAC,IAAKmB,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYG,OAAxC,oBACA,cAAC,IAAKP,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYI,MAAxC,mBACA,cAAC,IAAKR,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYK,MAAxC,mBACA,cAAC,IAAKT,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYM,YAAxC,yBACA,cAAC,IAAKV,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYO,QAAxC,qBAEA,cAAC,IAAKX,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYQ,QAAxC,qBACA,cAAC,IAAKZ,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYS,QAAxC,qBAEA,cAAC,IAAKb,KAAN,CACEc,SAAS,QACTvC,MAAO,CAAE5B,MAAO3R,IAAY+V,IAAW,QAAU,OACjDzE,QAAU+C,GAAcnU,GAAUH,EAC9B0U,EACAH,EALN,SAQGI,gB,4LCiCEjV,kBAAIC,EAAJD,EAlEf,YAAqC,IAAb0T,EAAY,EAAZA,SAAY,EACQpS,oBAAS,GADjB,mBAC3BiV,EAD2B,KACZC,EADY,KAG5B5B,EAAa1U,cACbC,EAAUC,cACRG,EAA6BJ,EAA7BI,QAASD,EAAoBH,EAApBG,QAASG,EAAWN,EAAXM,OAEZoU,EAA2BC,YAAS,sBAA1CC,KACMC,EAA2BF,YAAS,sBAA1CC,KACFE,EAAe3U,EAAO,UACrBA,EAAQ4U,UAAU,EAAG,GADA,cACQ5U,EAAQ4U,UAAU5U,EAAQ6U,OAAS,IACnE,iBAGJ,OACE,eAAC,IAAQsB,SAAT,WACE,eAAC,IAAD,CACEnF,GAAIoF,IACJC,UAAU,UACVrB,UAAQ,EACRsB,OAAQ,kBAAMJ,GAAiB,IAC/BK,UAAQ,EACRC,QAASP,EANX,UAQE,cAAC,IAAKhB,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYG,OAAxC,oBACA,cAAC,IAAKP,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYI,MAAxC,mBACA,cAAC,IAAKR,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYK,MAAxC,mBACA,cAAC,IAAKT,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYM,YAAxC,yBACA,cAAC,IAAKV,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYO,QAAxC,qBAEA,cAAC,IAAKX,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYQ,QAAxC,qBACA,cAAC,IAAKZ,KAAN,CAAWjE,GAAIuE,IAASH,GAAIC,IAAYS,QAAxC,wBAGF,eAAC,IAAQW,OAAT,CAAgBC,OAAQT,EAAxB,UACE,cAAC,IAAD,CACEjF,GAAI,SACJgE,UAAQ,EACR2B,UAAU,SACVJ,UAAQ,EAJV,SAME,cAAC,IAAD,CAAMzB,MAAM,MAAMC,KAAK,QAAQ6B,UAAQ,EAAC5B,UAAQ,EAAhD,SACE,eAAC,IAAD,WACE,cAAC,IAAKC,KAAN,CAAW1D,QAAS,kBAAM2E,GAAiB,IAA3C,SACE,cAAC,IAAD,CAAM3K,KAAK,cAEb,cAAC,IAAK0J,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYC,KAArC,SAA4CxB,MAE5C,cAAC,IAAKmB,KAAN,CACEc,SAAS,QACTvC,MAAO,CAAE5B,MAAO3R,IAAY+V,IAAW,QAAU,OACjDzE,QAAU+C,GAAcnU,GAAUH,EAC9B0U,EACAH,EALN,SAOEI,WAKPvB,a,uDCvET,4HAkEe1T,kBAAIC,EAAJD,EAxDf,WACE,OACE,cAAC,IAAD,CAASsR,GAAI,SAAUgE,UAAQ,EAACuB,UAAQ,EAAxC,SACE,eAAC,IAAD,CAAWI,UAAU,SAArB,UACE,cAAC,IAAD,CAAME,SAAO,EAAC7B,UAAQ,EAAC8B,WAAS,EAAhC,SACE,eAAC,IAAK9E,IAAN,WACE,eAAC,IAAK+E,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC,IAAD,CAAQhC,UAAQ,EAAChE,GAAG,KAApB,kBACA,eAAC,IAAD,CAAMiG,MAAI,EAACjC,UAAQ,EAAnB,UACE,cAAC,IAAKC,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYG,OAArC,wBACA,cAAC,IAAKP,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYI,MAArC,uBACA,cAAC,IAAKR,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYK,MAArC,uBACA,cAAC,IAAKT,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYM,YAArC,6BACA,cAAC,IAAKV,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYO,QAArC,sCAGJ,eAAC,IAAKmB,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC,IAAD,CAAQhC,UAAQ,EAAChE,GAAG,KAApB,wBACA,eAAC,IAAD,CAAMiG,MAAI,EAACjC,UAAQ,EAAnB,UACE,cAAC,IAAKC,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYQ,QAArC,yBACA,cAAC,IAAKZ,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYS,QAArC,2BACA,cAAC,IAAKb,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAY6B,SAArC,6BACA,cAAC,IAAKjC,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAY8B,IAArC,uBAGJ,eAAC,IAAKJ,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC,IAAD,CAAQhC,UAAQ,EAAChE,GAAG,KAApB,uBACA,cAAC,IAAD,CAAMiG,MAAI,EAACjC,UAAQ,EAAnB,SACE,cAAC,IAAKC,KAAN,CAAWjE,GAAIoG,IAAc9F,KAAM+F,IAAnC,0BAGJ,eAAC,IAAKN,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC,IAAD,CAAQhG,GAAG,KAAKgE,UAAQ,EAAxB,2BACA,4HAKN,cAAC,IAAD,CAASA,UAAQ,EAACsC,SAAO,IACzB,gCAAMxD,IAAN,UAAkB,IAAIrJ,MAAO8M,cAA7B,OACA,eAAC,IAAD,CAAMC,YAAU,EAACxC,UAAQ,EAAC6B,SAAO,EAACI,MAAI,EAAClC,KAAK,QAA5C,UACE,cAAC,IAAKE,KAAN,CAAWjE,GAAIoG,IAAc9F,KAAI,iBAAYmG,KAA7C,wBAGA,cAAC,IAAKxC,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYqC,MAArC,kCAGA,cAAC,IAAKzC,KAAN,CAAWjE,GAAImE,IAAMC,GAAIC,IAAYsC,QAArC,yC,yGC3BKC,IAvBqC,SAAC,GAAgD,IAA9CvG,EAA6C,EAA7CA,QAASK,EAAoC,EAApCA,MAAOtF,EAA6B,EAA7BA,GAAIgH,EAAyB,EAAzBA,SAAayE,EAAY,mDAC9FvG,EAAO,GACX,OAAQ0E,KACN,KAAK,EAAG1E,EAAO,+BAAgC,MAC/C,KAAK,GAAIA,EAAO,sBAYlB,OARID,EACFC,GAAI,mBAAgBD,GACXK,EACTJ,GAAI,iBAAcI,GACTtF,IACTkF,GAAI,cAAWlF,IAIf,cAAC,IAAD,yBAAckF,KAAMA,GAAUuG,GAA9B,aACGzE,O,iCCzBP,uD,iCCAA,uD,s1mBCAA,OAAC,SAAW0E,GACV,aAkDA,IAAIrS,EACFsS,EAAY,6CACZC,EAAWC,KAAKC,KAChBC,EAAYF,KAAKG,MAEjBC,EAAiB,qBACjBC,EAAgBD,EAAiB,yDAEjCE,EAAO,KACPC,EAAW,GACXC,EAAmB,iBAEnBC,EAAW,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,MAC7EC,EAAY,IAKZC,EAAM,IAmoFR,SAASC,EAASC,GAChB,IAAIhN,EAAQ,EAAJgN,EACR,OAAOA,EAAI,GAAKA,IAAMhN,EAAIA,EAAIA,EAAI,EAKpC,SAASiN,EAAc7Q,GAMrB,IALA,IAAI8Q,EAAGC,EACLnN,EAAI,EACJoN,EAAIhR,EAAE2M,OACNsE,EAAIjR,EAAE,GAAK,GAEN4D,EAAIoN,GAAI,CAGb,IAFAF,EAAI9Q,EAAE4D,KAAO,GACbmN,EAAIT,EAAWQ,EAAEnE,OACVoE,IAAKD,EAAI,IAAMA,GACtBG,GAAKH,EAIP,IAAKE,EAAIC,EAAEtE,OAA8B,KAAtBsE,EAAEC,aAAaF,KAElC,OAAOC,EAAEE,MAAM,EAAGH,EAAI,GAAK,GAK7B,SAASI,EAAQC,EAAGC,GAClB,IAAItR,EAAGuR,EACLC,EAAKH,EAAEI,EACPC,EAAKJ,EAAEG,EACP7N,EAAIyN,EAAEP,EACNE,EAAIM,EAAER,EACNa,EAAIN,EAAEjO,EACNwO,EAAIN,EAAElO,EAGR,IAAKQ,IAAMoN,EAAG,OAAO,KAMrB,GAJAhR,EAAIwR,IAAOA,EAAG,GACdD,EAAIG,IAAOA,EAAG,GAGV1R,GAAKuR,EAAG,OAAOvR,EAAIuR,EAAI,GAAKP,EAAIpN,EAGpC,GAAIA,GAAKoN,EAAG,OAAOpN,EAMnB,GAJA5D,EAAI4D,EAAI,EACR2N,EAAII,GAAKC,GAGJJ,IAAOE,EAAI,OAAOH,EAAI,GAAKC,EAAKxR,EAAI,GAAK,EAG9C,IAAKuR,EAAG,OAAOI,EAAIC,EAAI5R,EAAI,GAAK,EAKhC,IAHAgR,GAAKW,EAAIH,EAAG7E,SAAWiF,EAAIF,EAAG/E,QAAUgF,EAAIC,EAGvChO,EAAI,EAAGA,EAAIoN,EAAGpN,IAAK,GAAI4N,EAAG5N,IAAM8N,EAAG9N,GAAI,OAAO4N,EAAG5N,GAAK8N,EAAG9N,GAAK5D,EAAI,GAAK,EAG5E,OAAO2R,GAAKC,EAAI,EAAID,EAAIC,EAAI5R,EAAI,GAAK,EAOvC,SAAS6R,EAASjB,EAAG9F,EAAKgH,EAAKzO,GAC7B,GAAIuN,EAAI9F,GAAO8F,EAAIkB,GAAOlB,IAAMX,EAAUW,GACxC,MAAM7N,MACJoN,GAAkB9M,GAAQ,aAA2B,iBAALuN,EAC7CA,EAAI9F,GAAO8F,EAAIkB,EAAM,kBAAoB,oBACzC,6BAA+BC,OAAOnB,IAM/C,SAASoB,EAAMpB,GACb,IAAIe,EAAIf,EAAEa,EAAE9E,OAAS,EACrB,OAAOgE,EAASC,EAAExN,EAAIkN,IAAaqB,GAAKf,EAAEa,EAAEE,GAAK,GAAK,EAIxD,SAASM,EAAcC,EAAK9O,GAC1B,OAAQ8O,EAAIvF,OAAS,EAAIuF,EAAIC,OAAO,GAAK,IAAMD,EAAIf,MAAM,GAAKe,IAC5D9O,EAAI,EAAI,IAAM,MAAQA,EAI1B,SAASgP,EAAaF,EAAK9O,EAAG2N,GAC5B,IAAIsB,EAAKC,EAGT,GAAIlP,EAAI,EAAG,CAGT,IAAKkP,EAAKvB,EAAI,MAAO3N,EAAGkP,GAAMvB,GAC9BmB,EAAMI,EAAKJ,OAOX,KAAM9O,GAHNiP,EAAMH,EAAIvF,QAGK,CACb,IAAK2F,EAAKvB,EAAG3N,GAAKiP,IAAOjP,EAAGkP,GAAMvB,GAClCmB,GAAOI,OACElP,EAAIiP,IACbH,EAAMA,EAAIf,MAAM,EAAG/N,GAAK,IAAM8O,EAAIf,MAAM/N,IAI5C,OAAO8O,GAOT3U,EAzvFA,SAASgV,EAAMC,GACb,IAAI7T,EAAK8T,EAAaC,EACpBC,EAAIpV,EAAUqV,UAAY,CAAEC,YAAatV,EAAW+D,SAAU,KAAMwR,QAAS,MAC7EC,EAAM,IAAIxV,EAAU,GAUpByV,EAAiB,GAajBC,EAAgB,EAMhBC,GAAc,EAIdC,EAAa,GAMbC,GAAW,IAKXC,EAAU,IAGVC,GAAS,EAkBTC,EAAc,EAIdC,EAAgB,EAGhBC,EAAS,CACPC,OAAQ,GACRC,UAAW,EACXC,mBAAoB,EACpBC,eAAgB,IAChBC,iBAAkB,IAClBC,kBAAmB,EACnBC,uBAAwB,OACxBzK,OAAQ,IAMV0K,EAAW,uCACXC,GAAiC,EAgBnC,SAAS3W,EAAU4W,EAAG5C,GACpB,IAAI6C,EAAU3C,EAAG4C,EAAajR,EAAGQ,EAAG0Q,EAAOjC,EAAKH,EAC9Cb,EAAIkD,KAGN,KAAMlD,aAAa9T,GAAY,OAAO,IAAIA,EAAU4W,EAAG5C,GAEvD,GAAS,MAALA,EAAW,CAEb,GAAI4C,IAAwB,IAAnBA,EAAEK,aAYT,OAXAnD,EAAEP,EAAIqD,EAAErD,QAEHqD,EAAE1C,GAAK0C,EAAE/Q,EAAIiQ,EAChBhC,EAAEI,EAAIJ,EAAEjO,EAAI,KACH+Q,EAAE/Q,EAAIgQ,EACf/B,EAAEI,EAAI,CAACJ,EAAEjO,EAAI,IAEbiO,EAAEjO,EAAI+Q,EAAE/Q,EACRiO,EAAEI,EAAI0C,EAAE1C,EAAEN,UAMd,IAAKmD,EAAoB,iBAALH,IAAsB,EAAJA,GAAS,EAAG,CAMhD,GAHA9C,EAAEP,EAAI,EAAIqD,EAAI,GAAKA,GAAKA,GAAI,GAAK,EAG7BA,MAAQA,EAAG,CACb,IAAK/Q,EAAI,EAAGQ,EAAIuQ,EAAGvQ,GAAK,GAAIA,GAAK,GAAIR,KASrC,YAPIA,EAAIiQ,EACNhC,EAAEI,EAAIJ,EAAEjO,EAAI,MAEZiO,EAAEjO,EAAIA,EACNiO,EAAEI,EAAI,CAAC0C,KAMXjC,EAAMH,OAAOoC,OACR,CAEL,IAAKtE,EAAU4E,KAAKvC,EAAMH,OAAOoC,IAAK,OAAOzB,EAAarB,EAAGa,EAAKoC,GAElEjD,EAAEP,EAAyB,IAArBoB,EAAIhB,WAAW,IAAYgB,EAAMA,EAAIf,MAAM,IAAK,GAAK,GAIxD/N,EAAI8O,EAAIwC,QAAQ,OAAS,IAAGxC,EAAMA,EAAIyC,QAAQ,IAAK,MAGnD/Q,EAAIsO,EAAI0C,OAAO,OAAS,GAGvBxR,EAAI,IAAGA,EAAIQ,GACfR,IAAM8O,EAAIf,MAAMvN,EAAI,GACpBsO,EAAMA,EAAIxF,UAAU,EAAG9I,IACdR,EAAI,IAGbA,EAAI8O,EAAIvF,YAGL,CAOL,GAJAkF,EAASN,EAAG,EAAG0C,EAAStH,OAAQ,QAIvB,IAAL4E,GAAW2C,EAEb,OAAOW,EADPxD,EAAI,IAAI9T,EAAU4W,GACFnB,EAAiB3B,EAAEjO,EAAI,EAAG6P,GAK5C,GAFAf,EAAMH,OAAOoC,GAETG,EAAoB,iBAALH,EAAe,CAGhC,GAAQ,EAAJA,GAAS,EAAG,OAAOzB,EAAarB,EAAGa,EAAKoC,EAAO/C,GAKnD,GAHAF,EAAEP,EAAI,EAAIqD,EAAI,GAAKjC,EAAMA,EAAIf,MAAM,IAAK,GAAK,EAGzC5T,EAAUuX,OAAS5C,EAAIyC,QAAQ,YAAa,IAAIhI,OAAS,GAC3D,MAAM5J,MACJqN,EAAgB+D,QAGpB9C,EAAEP,EAA0B,KAAtBoB,EAAIhB,WAAW,IAAagB,EAAMA,EAAIf,MAAM,IAAK,GAAK,EAQ9D,IALAiD,EAAWH,EAAS9C,MAAM,EAAGI,GAC7BnO,EAAIQ,EAAI,EAIHyO,EAAMH,EAAIvF,OAAQ/I,EAAIyO,EAAKzO,IAC9B,GAAIwQ,EAASM,QAAQjD,EAAIS,EAAIC,OAAOvO,IAAM,EAAG,CAC3C,GAAS,KAAL6N,GAGF,GAAI7N,EAAIR,EAAG,CACTA,EAAIiP,EACJ,eAEG,IAAKgC,IAGNnC,GAAOA,EAAI6C,gBAAkB7C,EAAMA,EAAI8C,gBACvC9C,GAAOA,EAAI8C,gBAAkB9C,EAAMA,EAAI6C,gBAAgB,CACzDV,GAAc,EACdzQ,GAAK,EACLR,EAAI,EACJ,SAIJ,OAAOsP,EAAarB,EAAGU,OAAOoC,GAAIG,EAAO/C,GAK7C+C,GAAQ,GAIHlR,GAHL8O,EAAMO,EAAYP,EAAKX,EAAG,GAAIF,EAAEP,IAGnB4D,QAAQ,OAAS,EAAGxC,EAAMA,EAAIyC,QAAQ,IAAK,IACnDvR,EAAI8O,EAAIvF,OAIf,IAAK/I,EAAI,EAAyB,KAAtBsO,EAAIhB,WAAWtN,GAAWA,KAGtC,IAAKyO,EAAMH,EAAIvF,OAAkC,KAA1BuF,EAAIhB,aAAamB,KAExC,GAAIH,EAAMA,EAAIf,MAAMvN,IAAKyO,GAAM,CAI7B,GAHAA,GAAOzO,EAGH0Q,GAAS/W,EAAUuX,OACrBzC,EAAM,KAAO8B,EAAI5D,GAAoB4D,IAAMlE,EAAUkE,IACnD,MAAMpR,MACJqN,EAAiBiB,EAAEP,EAAIqD,GAI7B,IAAK/Q,EAAIA,EAAIQ,EAAI,GAAKyP,EAGpBhC,EAAEI,EAAIJ,EAAEjO,EAAI,UAGP,GAAIA,EAAIgQ,EAGb/B,EAAEI,EAAI,CAACJ,EAAEjO,EAAI,OACR,CAWL,GAVAiO,EAAEjO,EAAIA,EACNiO,EAAEI,EAAI,GAMN7N,GAAKR,EAAI,GAAKkN,EACVlN,EAAI,IAAGQ,GAAK0M,GAEZ1M,EAAIyO,EAAK,CAGX,IAFIzO,GAAGyN,EAAEI,EAAE1N,MAAMmO,EAAIf,MAAM,EAAGvN,IAEzByO,GAAO/B,EAAU1M,EAAIyO,GACxBhB,EAAEI,EAAE1N,MAAMmO,EAAIf,MAAMvN,EAAGA,GAAK0M,IAG9B1M,EAAI0M,GAAY4B,EAAMA,EAAIf,MAAMvN,IAAI+I,YAEpC/I,GAAKyO,EAGP,KAAOzO,IAAKsO,GAAO,KACnBb,EAAEI,EAAE1N,MAAMmO,SAKZb,EAAEI,EAAI,CAACJ,EAAEjO,EAAI,GA61BjB,SAAS6R,EAAOrE,EAAGhN,EAAGsR,EAAItW,GACxB,IAAIuW,EAAI/R,EAAGgS,EAAI/C,EAAKH,EAKpB,GAHU,MAANgD,EAAYA,EAAKjC,EAChBpB,EAASqD,EAAI,EAAG,IAEhBtE,EAAEa,EAAG,OAAOb,EAAEtP,WAKnB,GAHA6T,EAAKvE,EAAEa,EAAE,GACT2D,EAAKxE,EAAExN,EAEE,MAALQ,EACFsO,EAAMrB,EAAcD,EAAEa,GACtBS,EAAY,GAANtT,GAAiB,GAANA,IAAYwW,GAAMlC,GAAckC,GAAMjC,GACpDlB,EAAcC,EAAKkD,GACnBhD,EAAaF,EAAKkD,EAAI,UAezB,GAVAhS,GAHAwN,EAAIiE,EAAM,IAAItX,EAAUqT,GAAIhN,EAAGsR,IAGzB9R,EAGNiP,GADAH,EAAMrB,EAAcD,EAAEa,IACZ9E,OAOA,GAAN/N,GAAiB,GAANA,IAAYgF,GAAKR,GAAKA,GAAK8P,GAAa,CAGrD,KAAOb,EAAMzO,EAAGsO,GAAO,IAAKG,KAC5BH,EAAMD,EAAcC,EAAK9O,QAQzB,GAJAQ,GAAKwR,EACLlD,EAAME,EAAaF,EAAK9O,EAAG,KAGvBA,EAAI,EAAIiP,GACV,KAAMzO,EAAI,EAAG,IAAKsO,GAAO,IAAKtO,IAAKsO,GAAO,WAG1C,IADAtO,GAAKR,EAAIiP,GACD,EAEN,IADIjP,EAAI,GAAKiP,IAAKH,GAAO,KAClBtO,IAAKsO,GAAO,KAM3B,OAAOtB,EAAEE,EAAI,GAAKqE,EAAK,IAAMjD,EAAMA,EAKrC,SAASmD,EAASC,EAAMC,GAKtB,IAJA,IAAI3E,EACFhN,EAAI,EACJ4R,EAAI,IAAIjY,EAAU+X,EAAK,IAElB1R,EAAI0R,EAAK3I,OAAQ/I,IAAK,CAI3B,KAHAgN,EAAI,IAAIrT,EAAU+X,EAAK1R,KAGhBkN,EAAG,CACR0E,EAAI5E,EACJ,MACS2E,EAAOE,KAAKD,EAAG5E,KACxB4E,EAAI5E,GAIR,OAAO4E,EAQT,SAASE,EAAU9E,EAAGa,EAAGrO,GAKvB,IAJA,IAAIQ,EAAI,EACNoN,EAAIS,EAAE9E,QAGA8E,IAAIT,GAAIS,EAAEkE,OAGlB,IAAK3E,EAAIS,EAAE,GAAIT,GAAK,GAAIA,GAAK,GAAIpN,KAkBjC,OAfKR,EAAIQ,EAAIR,EAAIkN,EAAW,GAAK+C,EAG/BzC,EAAEa,EAAIb,EAAExN,EAAI,KAGHA,EAAIgQ,EAGbxC,EAAEa,EAAI,CAACb,EAAExN,EAAI,IAEbwN,EAAExN,EAAIA,EACNwN,EAAEa,EAAIA,GAGDb,EA0DT,SAASiE,EAAMxD,EAAGuE,EAAIV,EAAIjE,GACxB,IAAI4E,EAAGjS,EAAGoN,EAAGW,EAAGf,EAAGkF,EAAIC,EACrBvE,EAAKH,EAAEI,EACPuE,EAASxF,EAGX,GAAIgB,EAAI,CAQNyE,EAAK,CAGH,IAAKJ,EAAI,EAAGlE,EAAIH,EAAG,GAAIG,GAAK,GAAIA,GAAK,GAAIkE,KAIzC,IAHAjS,EAAIgS,EAAKC,GAGD,EACNjS,GAAK0M,EACLU,EAAI4E,EAIJG,GAHAnF,EAAIY,EAAGsE,EAAK,IAGHE,EAAOH,EAAI7E,EAAI,GAAK,GAAK,OAIlC,IAFA8E,EAAKhG,GAAUlM,EAAI,GAAK0M,KAEdkB,EAAG7E,OAAQ,CAEnB,IAAIsE,EASF,MAAMgF,EANN,KAAOzE,EAAG7E,QAAUmJ,EAAItE,EAAGzN,KAAK,IAChC6M,EAAImF,EAAK,EACTF,EAAI,EAEJ7E,GADApN,GAAK0M,GACGA,EAAW,MAIhB,CAIL,IAHAM,EAAIe,EAAIH,EAAGsE,GAGND,EAAI,EAAGlE,GAAK,GAAIA,GAAK,GAAIkE,KAU9BE,GAHA/E,GAJApN,GAAK0M,GAIGA,EAAWuF,GAGV,EAAI,EAAIjF,EAAIoF,EAAOH,EAAI7E,EAAI,GAAK,GAAK,EAmBlD,GAfAC,EAAIA,GAAK2E,EAAK,GAKC,MAAdpE,EAAGsE,EAAK,KAAe9E,EAAI,EAAIJ,EAAIA,EAAIoF,EAAOH,EAAI7E,EAAI,IAEvDC,EAAIiE,EAAK,GACLa,GAAM9E,KAAa,GAANiE,GAAWA,IAAO7D,EAAEP,EAAI,EAAI,EAAI,IAC9CiF,EAAK,GAAW,GAANA,IAAkB,GAANb,GAAWjE,GAAW,GAANiE,IAGrCtR,EAAI,EAAIoN,EAAI,EAAIJ,EAAIoF,EAAOH,EAAI7E,GAAK,EAAIQ,EAAGsE,EAAK,IAAM,GAAM,GAC7DZ,IAAO7D,EAAEP,EAAI,EAAI,EAAI,IAEpB8E,EAAK,IAAMpE,EAAG,GAiBhB,OAhBAA,EAAG7E,OAAS,EAERsE,GAGF2E,GAAMvE,EAAEjO,EAAI,EAGZoO,EAAG,GAAKwE,GAAQ1F,EAAWsF,EAAKtF,GAAYA,GAC5Ce,EAAEjO,GAAKwS,GAAM,GAIbpE,EAAG,GAAKH,EAAEjO,EAAI,EAGTiO,EAkBT,GAdS,GAALzN,GACF4N,EAAG7E,OAASmJ,EACZnE,EAAI,EACJmE,MAEAtE,EAAG7E,OAASmJ,EAAK,EACjBnE,EAAIqE,EAAO1F,EAAW1M,GAItB4N,EAAGsE,GAAM9E,EAAI,EAAIf,EAAUW,EAAIoF,EAAOH,EAAI7E,GAAKgF,EAAOhF,IAAMW,EAAI,GAI9DV,EAEF,OAAU,CAGR,GAAU,GAAN6E,EAAS,CAGX,IAAKlS,EAAI,EAAGoN,EAAIQ,EAAG,GAAIR,GAAK,GAAIA,GAAK,GAAIpN,KAEzC,IADAoN,EAAIQ,EAAG,IAAMG,EACRA,EAAI,EAAGX,GAAK,GAAIA,GAAK,GAAIW,KAG1B/N,GAAK+N,IACPN,EAAEjO,IACEoO,EAAG,IAAMnB,IAAMmB,EAAG,GAAK,IAG7B,MAGA,GADAA,EAAGsE,IAAOnE,EACNH,EAAGsE,IAAOzF,EAAM,MACpBmB,EAAGsE,KAAQ,EACXnE,EAAI,EAMV,IAAK/N,EAAI4N,EAAG7E,OAAoB,IAAZ6E,IAAK5N,GAAU4N,EAAGmE,QAIpCtE,EAAEjO,EAAIiQ,EACRhC,EAAEI,EAAIJ,EAAEjO,EAAI,KAGHiO,EAAEjO,EAAIgQ,IACf/B,EAAEI,EAAI,CAACJ,EAAEjO,EAAI,IAIjB,OAAOiO,EAIT,SAASyB,EAAQlC,GACf,IAAIsB,EACF9O,EAAIwN,EAAExN,EAER,OAAU,OAANA,EAAmBwN,EAAEtP,YAEzB4Q,EAAMrB,EAAcD,EAAEa,GAEtBS,EAAM9O,GAAK8P,GAAc9P,GAAK+P,EAC1BlB,EAAcC,EAAK9O,GACnBgP,EAAaF,EAAK9O,EAAG,KAElBwN,EAAEE,EAAI,EAAI,IAAMoB,EAAMA,GA0pC/B,OAj0EA3U,EAAUgV,MAAQA,EAElBhV,EAAU2Y,SAAW,EACrB3Y,EAAU4Y,WAAa,EACvB5Y,EAAU6Y,WAAa,EACvB7Y,EAAU8Y,YAAc,EACxB9Y,EAAU+Y,cAAgB,EAC1B/Y,EAAUgZ,gBAAkB,EAC5BhZ,EAAUiZ,gBAAkB,EAC5BjZ,EAAUkZ,gBAAkB,EAC5BlZ,EAAUmZ,iBAAmB,EAC7BnZ,EAAUoZ,OAAS,EAqCnBpZ,EAAUqZ,OAASrZ,EAAUsZ,IAAM,SAAUC,GAC3C,IAAIC,EAAG5C,EAEP,GAAW,MAAP2C,EAAa,CAEf,GAAkB,iBAAPA,EA4HT,MAAM/T,MACJoN,EAAiB,oBAAsB2G,GAvFzC,GAlCIA,EAAIE,eAAeD,EAAI,oBAEzBlF,EADAsC,EAAI2C,EAAIC,GACI,EAAGrG,EAAKqG,GACpB/D,EAAiBmB,GAKf2C,EAAIE,eAAeD,EAAI,mBAEzBlF,EADAsC,EAAI2C,EAAIC,GACI,EAAG,EAAGA,GAClB9D,EAAgBkB,GAOd2C,EAAIE,eAAeD,EAAI,qBACzB5C,EAAI2C,EAAIC,KACC5C,EAAEwB,KACT9D,EAASsC,EAAE,IAAKzD,EAAK,EAAGqG,GACxBlF,EAASsC,EAAE,GAAI,EAAGzD,EAAKqG,GACvB7D,EAAaiB,EAAE,GACfhB,EAAagB,EAAE,KAEftC,EAASsC,GAAIzD,EAAKA,EAAKqG,GACvB7D,IAAeC,EAAagB,EAAI,GAAKA,EAAIA,KAOzC2C,EAAIE,eAAeD,EAAI,SAEzB,IADA5C,EAAI2C,EAAIC,KACC5C,EAAEwB,IACT9D,EAASsC,EAAE,IAAKzD,GAAM,EAAGqG,GACzBlF,EAASsC,EAAE,GAAI,EAAGzD,EAAKqG,GACvB3D,EAAUe,EAAE,GACZd,EAAUc,EAAE,OACP,CAEL,GADAtC,EAASsC,GAAIzD,EAAKA,EAAKqG,IACnB5C,EAGF,MAAMpR,MACJoN,EAAiB4G,EAAI,oBAAsB5C,GAH7Cf,IAAYC,EAAUc,EAAI,GAAKA,EAAIA,GAWzC,GAAI2C,EAAIE,eAAeD,EAAI,UAAW,CAEpC,IADA5C,EAAI2C,EAAIC,QACI5C,EAcV,MAAMpR,MACJoN,EAAiB4G,EAAI,uBAAyB5C,GAdhD,GAAIA,EAAG,CACL,GAAqB,oBAAV8C,SAAyBA,SAClCA,OAAOC,kBAAmBD,OAAOE,YAIjC,MADA7D,GAAUa,EACJpR,MACJoN,EAAiB,sBAJnBmD,EAASa,OAOXb,EAASa,EA0Bf,GAhBI2C,EAAIE,eAAeD,EAAI,iBAEzBlF,EADAsC,EAAI2C,EAAIC,GACI,EAAG,EAAGA,GAClBxD,EAAcY,GAKZ2C,EAAIE,eAAeD,EAAI,mBAEzBlF,EADAsC,EAAI2C,EAAIC,GACI,EAAGrG,EAAKqG,GACpBvD,EAAgBW,GAKd2C,EAAIE,eAAeD,EAAI,UAAW,CAEpC,GAAgB,iBADhB5C,EAAI2C,EAAIC,IAEH,MAAMhU,MACToN,EAAiB4G,EAAI,mBAAqB5C,GAFlBV,EAASU,EAOrC,GAAI2C,EAAIE,eAAeD,EAAI,YAAa,CAKtC,GAAgB,iBAJhB5C,EAAI2C,EAAIC,KAIqB,wBAAwBtC,KAAKN,GAIxD,MAAMpR,MACJoN,EAAiB4G,EAAI,aAAe5C,GAJtCD,EAAmD,cAAlBC,EAAEhD,MAAM,EAAG,IAC5C8C,EAAWE,GAenB,MAAO,CACLnB,eAAgBA,EAChBC,cAAeA,EACfmE,eAAgB,CAAClE,EAAYC,GAC7BkE,MAAO,CAACjE,EAASC,GACjBC,OAAQA,EACRC,YAAaA,EACbC,cAAeA,EACfC,OAAQA,EACRQ,SAAUA,IAcd1W,EAAU+Z,YAAc,SAAUnD,GAChC,IAAKA,IAAwB,IAAnBA,EAAEK,aAAuB,OAAO,EAC1C,IAAKjX,EAAUuX,MAAO,OAAO,EAE7B,IAAIlR,EAAGgN,EACLa,EAAI0C,EAAE1C,EACNrO,EAAI+Q,EAAE/Q,EACN0N,EAAIqD,EAAErD,EAERmF,EAAK,GAA2B,kBAAvB,GAAG3U,SAASmU,KAAKhE,IAExB,IAAW,IAANX,IAAkB,IAAPA,IAAa1N,IAAMsN,GAAOtN,GAAKsN,GAAOtN,IAAM6M,EAAU7M,GAAI,CAGxE,GAAa,IAATqO,EAAE,GAAU,CACd,GAAU,IAANrO,GAAwB,IAAbqO,EAAE9E,OAAc,OAAO,EACtC,MAAMsJ,EASR,IALArS,GAAKR,EAAI,GAAKkN,GACN,IAAG1M,GAAK0M,GAIZyB,OAAON,EAAE,IAAI9E,QAAU/I,EAAG,CAE5B,IAAKA,EAAI,EAAGA,EAAI6N,EAAE9E,OAAQ/I,IAExB,IADAgN,EAAIa,EAAE7N,IACE,GAAKgN,GAAKP,GAAQO,IAAMX,EAAUW,GAAI,MAAMqF,EAItD,GAAU,IAANrF,EAAS,OAAO,SAKnB,GAAU,OAANa,GAAoB,OAANrO,IAAqB,OAAN0N,GAAoB,IAANA,IAAkB,IAAPA,GAC/D,OAAO,EAGT,MAAM/N,MACHoN,EAAiB,sBAAwBgE,IAS9C5W,EAAUga,QAAUha,EAAUuU,IAAM,WAClC,OAAOuD,EAASmC,UAAW7E,EAAE8E,KAS/Bla,EAAUma,QAAUna,EAAUuN,IAAM,WAClC,OAAOuK,EAASmC,UAAW7E,EAAEpU,KAc/BhB,EAAUoa,OAAU,WAClB,IAAIC,EAAU,iBAMVC,EAAkB9H,KAAK4H,SAAWC,EAAW,QAC9C,WAAc,OAAO3H,EAAUF,KAAK4H,SAAWC,IAC/C,WAAc,OAA2C,SAAlB,WAAhB7H,KAAK4H,SAAwB,IACnC,QAAhB5H,KAAK4H,SAAsB,IAE/B,OAAO,SAAUG,GACf,IAAI9X,EAAGuR,EAAGnO,EAAGuO,EAAGwC,EACdvQ,EAAI,EACJ6N,EAAI,GACJsG,EAAO,IAAIxa,EAAUwV,GAOvB,GALU,MAAN+E,EAAYA,EAAK9E,EAChBnB,EAASiG,EAAI,EAAGpH,GAErBiB,EAAI7B,EAASgI,EAAKxH,GAEdgD,EAGF,GAAI2D,OAAOC,gBAAiB,CAI1B,IAFAlX,EAAIiX,OAAOC,gBAAgB,IAAIc,YAAYrG,GAAK,IAEzC/N,EAAI+N,IAQTwC,EAAW,OAAPnU,EAAE4D,IAAgB5D,EAAE4D,EAAI,KAAO,MAM1B,MACP2N,EAAI0F,OAAOC,gBAAgB,IAAIc,YAAY,IAC3ChY,EAAE4D,GAAK2N,EAAE,GACTvR,EAAE4D,EAAI,GAAK2N,EAAE,KAKbE,EAAE1N,KAAKoQ,EAAI,MACXvQ,GAAK,GAGTA,EAAI+N,EAAI,MAGH,KAAIsF,OAAOE,YA2BhB,MADA7D,GAAS,EACHvQ,MACJoN,EAAiB,sBAvBnB,IAFAnQ,EAAIiX,OAAOE,YAAYxF,GAAK,GAErB/N,EAAI+N,IAMTwC,EAAmB,iBAAN,GAAPnU,EAAE4D,IAA0C,cAAX5D,EAAE4D,EAAI,GAC9B,WAAX5D,EAAE4D,EAAI,GAAgC,SAAX5D,EAAE4D,EAAI,IACjC5D,EAAE4D,EAAI,IAAM,KAAO5D,EAAE4D,EAAI,IAAM,GAAK5D,EAAE4D,EAAI,KAErC,KACPqT,OAAOE,YAAY,GAAG7N,KAAKtJ,EAAG4D,IAI9B6N,EAAE1N,KAAKoQ,EAAI,MACXvQ,GAAK,GAGTA,EAAI+N,EAAI,EASZ,IAAK2B,EAEH,KAAO1P,EAAI+N,IACTwC,EAAI0D,KACI,OAAMpG,EAAE7N,KAAOuQ,EAAI,MAc/B,IAVAxC,EAAIF,IAAI7N,GACRkU,GAAMxH,EAGFqB,GAAKmG,IACP3D,EAAI3D,EAASF,EAAWwH,GACxBrG,EAAE7N,GAAKqM,EAAU0B,EAAIwC,GAAKA,GAIZ,IAAT1C,EAAE7N,GAAU6N,EAAEkE,MAAO/R,KAG5B,GAAIA,EAAI,EACN6N,EAAI,CAACrO,EAAI,OACJ,CAGL,IAAKA,GAAK,EAAa,IAATqO,EAAE,GAAUA,EAAEwG,OAAO,EAAG,GAAI7U,GAAKkN,GAG/C,IAAK1M,EAAI,EAAGuQ,EAAI1C,EAAE,GAAI0C,GAAK,GAAIA,GAAK,GAAIvQ,KAGpCA,EAAI0M,IAAUlN,GAAKkN,EAAW1M,GAKpC,OAFAmU,EAAK3U,EAAIA,EACT2U,EAAKtG,EAAIA,EACFsG,GAjIS,GA2IpBxa,EAAU2a,IAAM,WAId,IAHA,IAAItU,EAAI,EACN0R,EAAOkC,UACPU,EAAM,IAAI3a,EAAU+X,EAAK,IACpB1R,EAAI0R,EAAK3I,QAASuL,EAAMA,EAAIC,KAAK7C,EAAK1R,MAC7C,OAAOsU,GAQTzF,EAAe,WACb,IAAI2F,EAAU,aAOd,SAASC,EAAUnG,EAAKoG,EAAQC,EAASnE,GAOvC,IANA,IAAIpD,EAEFwH,EADAC,EAAM,CAAC,GAEP7U,EAAI,EACJyO,EAAMH,EAAIvF,OAEL/I,EAAIyO,GAAM,CACf,IAAKmG,EAAOC,EAAI9L,OAAQ6L,IAAQC,EAAID,IAASF,GAI7C,IAFAG,EAAI,IAAMrE,EAASM,QAAQxC,EAAIC,OAAOvO,MAEjCoN,EAAI,EAAGA,EAAIyH,EAAI9L,OAAQqE,IAEtByH,EAAIzH,GAAKuH,EAAU,IACH,MAAdE,EAAIzH,EAAI,KAAYyH,EAAIzH,EAAI,GAAK,GACrCyH,EAAIzH,EAAI,IAAMyH,EAAIzH,GAAKuH,EAAU,EACjCE,EAAIzH,IAAMuH,GAKhB,OAAOE,EAAIC,UAMb,OAAO,SAAUxG,EAAKoG,EAAQC,EAASI,EAAMC,GAC3C,IAAIxE,EAAUyB,EAAGzS,EAAGuO,EAAGV,EAAGI,EAAGG,EAAIF,EAC/B1N,EAAIsO,EAAIwC,QAAQ,KAChBoD,EAAK9E,EACLkC,EAAKjC,EA+BP,IA5BIrP,GAAK,IACP+N,EAAI6B,EAGJA,EAAgB,EAChBtB,EAAMA,EAAIyC,QAAQ,IAAK,IAEvBtD,GADAC,EAAI,IAAI/T,EAAU+a,IACZO,IAAI3G,EAAIvF,OAAS/I,GACvB4P,EAAgB7B,EAKhBL,EAAEG,EAAI4G,EAAUjG,EAAavB,EAAcQ,EAAEI,GAAIJ,EAAEjO,EAAG,KACrD,GAAImV,EAASH,GACd9G,EAAElO,EAAIkO,EAAEG,EAAE9E,QAUZvJ,EAAIuO,GALJH,EAAK6G,EAAUnG,EAAKoG,EAAQC,EAASK,GACjCxE,EAAWH,EAAUmE,IACrBhE,EAAWgE,EAASnE,KAGbtH,OAGO,GAAX6E,IAAKG,GAASH,EAAGmE,OAGxB,IAAKnE,EAAG,GAAI,OAAO4C,EAASjC,OAAO,GAqCnC,GAlCIvO,EAAI,IACJR,GAEFiO,EAAEI,EAAID,EACNH,EAAEjO,EAAIA,EAGNiO,EAAEP,EAAI6H,EAENnH,GADAH,EAAI1S,EAAI0S,EAAGC,EAAGwG,EAAI5C,EAAIqD,IACf9G,EACPR,EAAII,EAAEJ,EACN7N,EAAIiO,EAAEjO,GASRQ,EAAI4N,EAHJqE,EAAIzS,EAAI0U,EAAK,GAObnG,EAAI4G,EAAU,EACdtH,EAAIA,GAAK4E,EAAI,GAAkB,MAAbrE,EAAGqE,EAAI,GAEzB5E,EAAIiE,EAAK,GAAU,MAALtR,GAAaqN,KAAa,GAANiE,GAAWA,IAAO7D,EAAEP,EAAI,EAAI,EAAI,IAC1DlN,EAAI+N,GAAK/N,GAAK+N,IAAW,GAANuD,GAAWjE,GAAW,GAANiE,GAAuB,EAAZ1D,EAAGqE,EAAI,IACtDX,IAAO7D,EAAEP,EAAI,EAAI,EAAI,IAKxB+E,EAAI,IAAMrE,EAAG,GAGfU,EAAMjB,EAAImB,EAAagC,EAASjC,OAAO,IAAK2F,EAAI1D,EAASjC,OAAO,IAAMiC,EAASjC,OAAO,OACjF,CAML,GAHAX,EAAG7E,OAASkJ,EAGR5E,EAGF,MAAOsH,IAAW/G,IAAKqE,GAAK0C,GAC1B/G,EAAGqE,GAAK,EAEHA,MACDzS,EACFoO,EAAK,CAAC,GAAGrF,OAAOqF,IAMtB,IAAKG,EAAIH,EAAG7E,QAAS6E,IAAKG,KAG1B,IAAK/N,EAAI,EAAGsO,EAAM,GAAItO,GAAK+N,EAAGO,GAAOkC,EAASjC,OAAOX,EAAG5N,OAGxDsO,EAAME,EAAaF,EAAK9O,EAAGgR,EAASjC,OAAO,IAI7C,OAAOD,GAjJI,GAuJfvT,EAAO,WAGL,SAASma,EAASzH,EAAGM,EAAGoH,GACtB,IAAIvD,EAAG9R,EAAMsV,EAAKC,EAChBC,EAAQ,EACRtV,EAAIyN,EAAE1E,OACNwM,EAAMxH,EAAIlB,EACV2I,EAAMzH,EAAIlB,EAAY,EAExB,IAAKY,EAAIA,EAAEF,QAASvN,KAKlBsV,IADAxV,EAAOyV,GAHPH,EAAM3H,EAAEzN,GAAK6M,IAEb+E,EAAI4D,EAAMJ,GADVC,EAAM5H,EAAEzN,GAAK6M,EAAY,GACH0I,GACG1I,EAAaA,EAAayI,GACnCH,EAAO,IAAMvD,EAAI/E,EAAY,GAAK2I,EAAMH,EACxD5H,EAAEzN,GAAKF,EAAOqV,EAKhB,OAFIG,IAAO7H,EAAI,CAAC6H,GAAO/M,OAAOkF,IAEvBA,EAGT,SAASD,EAAQpR,EAAGuR,EAAG8H,EAAIC,GACzB,IAAI1V,EAAG2V,EAEP,GAAIF,GAAMC,EACRC,EAAMF,EAAKC,EAAK,GAAK,OAGrB,IAAK1V,EAAI2V,EAAM,EAAG3V,EAAIyV,EAAIzV,IAExB,GAAI5D,EAAE4D,IAAM2N,EAAE3N,GAAI,CAChB2V,EAAMvZ,EAAE4D,GAAK2N,EAAE3N,GAAK,GAAK,EACzB,MAKN,OAAO2V,EAGT,SAASC,EAASxZ,EAAGuR,EAAG8H,EAAIN,GAI1B,IAHA,IAAInV,EAAI,EAGDyV,KACLrZ,EAAEqZ,IAAOzV,EACTA,EAAI5D,EAAEqZ,GAAM9H,EAAE8H,GAAM,EAAI,EACxBrZ,EAAEqZ,GAAMzV,EAAImV,EAAO/Y,EAAEqZ,GAAM9H,EAAE8H,GAI/B,MAAQrZ,EAAE,IAAMA,EAAE2M,OAAS,EAAG3M,EAAEiY,OAAO,EAAG,KAI5C,OAAO,SAAU5G,EAAGC,EAAGwG,EAAI5C,EAAI6D,GAC7B,IAAIQ,EAAKnW,EAAGQ,EAAG6V,EAAM7I,EAAG8I,EAAMC,EAAOC,EAAGC,EAAIC,EAAKC,EAAMC,EAAMC,EAAIC,EAAIC,EACnEC,EAAIC,EACJvJ,EAAIO,EAAEP,GAAKQ,EAAER,EAAI,GAAK,EACtBU,EAAKH,EAAEI,EACPC,EAAKJ,EAAEG,EAGT,IAAKD,IAAOA,EAAG,KAAOE,IAAOA,EAAG,GAE9B,OAAO,IAAInU,EAGT8T,EAAEP,GAAMQ,EAAER,IAAMU,GAAKE,GAAMF,EAAG,IAAME,EAAG,GAAMA,GAG7CF,GAAe,GAATA,EAAG,KAAYE,EAAS,EAAJZ,EAAQA,EAAI,EAHawJ,KAoBvD,IAZAT,GADAD,EAAI,IAAIrc,EAAUuT,IACXW,EAAI,GAEXX,EAAIgH,GADJ1U,EAAIiO,EAAEjO,EAAIkO,EAAElO,GACC,EAER2V,IACHA,EAAO1I,EACPjN,EAAIuN,EAASU,EAAEjO,EAAIkN,GAAYK,EAASW,EAAElO,EAAIkN,GAC9CQ,EAAIA,EAAIR,EAAW,GAKhB1M,EAAI,EAAG8N,EAAG9N,KAAO4N,EAAG5N,IAAM,GAAIA,KAInC,GAFI8N,EAAG9N,IAAM4N,EAAG5N,IAAM,IAAIR,IAEtB0N,EAAI,EACN+I,EAAG9V,KAAK,GACR0V,GAAO,MACF,CAwBL,IAvBAS,EAAK1I,EAAG7E,OACRyN,EAAK1I,EAAG/E,OACR/I,EAAI,EACJkN,GAAK,GAILF,EAAIX,EAAU8I,GAAQrH,EAAG,GAAK,KAItB,IACNA,EAAKoH,EAASpH,EAAId,EAAGmI,GACrBvH,EAAKsH,EAAStH,EAAIZ,EAAGmI,GACrBqB,EAAK1I,EAAG/E,OACRuN,EAAK1I,EAAG7E,QAGVsN,EAAKG,EAELL,GADAD,EAAMtI,EAAGL,MAAM,EAAGiJ,IACPzN,OAGJoN,EAAOK,EAAIN,EAAIC,KAAU,GAChCM,EAAK3I,EAAGP,QACRkJ,EAAK,CAAC,GAAGlO,OAAOkO,GAChBF,EAAMzI,EAAG,GACLA,EAAG,IAAMqH,EAAO,GAAGoB,IAIvB,EAAG,CAOD,GANAvJ,EAAI,GAGJ2I,EAAMnI,EAAQM,EAAIoI,EAAKM,EAAIL,IAGjB,EAAG,CAqBX,GAjBAC,EAAOF,EAAI,GACPM,GAAML,IAAMC,EAAOA,EAAOjB,GAAQe,EAAI,IAAM,KAGhDlJ,EAAIX,EAAU+J,EAAOG,IAab,EAcN,IAXIvJ,GAAKmI,IAAMnI,EAAImI,EAAO,GAI1BY,GADAD,EAAOZ,EAASpH,EAAId,EAAGmI,IACVpM,OACboN,EAAOD,EAAInN,OAM+B,GAAnCyE,EAAQsI,EAAMI,EAAKH,EAAOI,IAC/BnJ,IAGA4I,EAASE,EAAMU,EAAKT,EAAQU,EAAK3I,EAAIiI,EAAOZ,GAC5CY,EAAQD,EAAK/M,OACb4M,EAAM,OAQC,GAAL3I,IAGF2I,EAAM3I,EAAI,GAKZ+I,GADAD,EAAOhI,EAAGP,SACGxE,OAUf,GAPIgN,EAAQI,IAAML,EAAO,CAAC,GAAGvN,OAAOuN,IAGpCF,EAASM,EAAKJ,EAAMK,EAAMhB,GAC1BgB,EAAOD,EAAInN,QAGC,GAAR4M,EAMF,KAAOnI,EAAQM,EAAIoI,EAAKM,EAAIL,GAAQ,GAClCnJ,IAGA4I,EAASM,EAAKM,EAAKL,EAAOM,EAAK3I,EAAIqI,EAAMhB,GACzCgB,EAAOD,EAAInN,YAGE,IAAR4M,IACT3I,IACAkJ,EAAM,CAAC,IAITD,EAAGjW,KAAOgN,EAGNkJ,EAAI,GACNA,EAAIC,KAAUvI,EAAGyI,IAAO,GAExBH,EAAM,CAACtI,EAAGyI,IACVF,EAAO,UAEDE,IAAOC,GAAgB,MAAVJ,EAAI,KAAehJ,KAE1C2I,EAAiB,MAAVK,EAAI,GAGND,EAAG,IAAIA,EAAG5B,OAAO,EAAG,GAG3B,GAAIc,GAAQ1I,EAAM,CAGhB,IAAKzM,EAAI,EAAGkN,EAAI+I,EAAG,GAAI/I,GAAK,GAAIA,GAAK,GAAIlN,KAEzCiR,EAAM+E,EAAG9B,GAAM8B,EAAExW,EAAIQ,EAAIR,EAAIkN,EAAW,GAAK,EAAG4E,EAAIuE,QAIpDG,EAAExW,EAAIA,EACNwW,EAAE3I,GAAKwI,EAGT,OAAOG,GA9PJ,GA+XPlH,EAAgB,WACd,IAAI6H,EAAa,8BACfC,EAAW,cACXC,EAAY,cACZC,EAAkB,qBAClBC,EAAmB,6BAErB,OAAO,SAAUtJ,EAAGa,EAAKoC,EAAO/C,GAC9B,IAAIwH,EACFjI,EAAIwD,EAAQpC,EAAMA,EAAIyC,QAAQgG,EAAkB,IAGlD,GAAID,EAAgBjG,KAAK3D,GACvBO,EAAEP,EAAI8J,MAAM9J,GAAK,KAAOA,EAAI,GAAK,EAAI,MAChC,CACL,IAAKwD,IAGHxD,EAAIA,EAAE6D,QAAQ4F,GAAY,SAAU/E,EAAGqF,EAAIC,GAEzC,OADA/B,EAAkC,MAA1B+B,EAAKA,EAAG9F,eAAwB,GAAW,KAAN8F,EAAY,EAAI,EACrDvJ,GAAKA,GAAKwH,EAAYvD,EAALqF,KAGvBtJ,IACFwH,EAAOxH,EAGPT,EAAIA,EAAE6D,QAAQ6F,EAAU,MAAM7F,QAAQ8F,EAAW,SAG/CvI,GAAOpB,GAAG,OAAO,IAAIvT,EAAUuT,EAAGiI,GAKxC,GAAIxb,EAAUuX,MACZ,MAAM/R,MACHoN,EAAiB,SAAWoB,EAAI,SAAWA,EAAI,IAAM,YAAcW,GAIxEb,EAAEP,EAAI,KAGRO,EAAEI,EAAIJ,EAAEjO,EAAI,MA5CA,GAyOhBuP,EAAEoI,cAAgBpI,EAAEqI,IAAM,WACxB,IAAI3J,EAAI,IAAI9T,EAAUgX,MAEtB,OADIlD,EAAEP,EAAI,IAAGO,EAAEP,EAAI,GACZO,GAWTsB,EAAEsI,WAAa,SAAU3J,EAAGC,GAC1B,OAAOH,EAAQmD,KAAM,IAAIhX,EAAU+T,EAAGC,KAiBxCoB,EAAEuI,cAAgBvI,EAAEmF,GAAK,SAAUA,EAAI5C,GACrC,IAAIzD,EAAGb,EAAGuD,EACR9C,EAAIkD,KAEN,GAAU,MAANuD,EAKF,OAJAjG,EAASiG,EAAI,EAAGpH,GACN,MAANwE,EAAYA,EAAKjC,EAChBpB,EAASqD,EAAI,EAAG,GAEdL,EAAM,IAAItX,EAAU8T,GAAIyG,EAAKzG,EAAEjO,EAAI,EAAG8R,GAG/C,KAAMzD,EAAIJ,EAAEI,GAAI,OAAO,KAIvB,GAHAb,IAAMuD,EAAI1C,EAAE9E,OAAS,GAAKgE,EAAS4D,KAAKnR,EAAIkN,IAAaA,EAGrD6D,EAAI1C,EAAE0C,GAAI,KAAOA,EAAI,IAAM,EAAGA,GAAK,GAAIvD,KAG3C,OAFIA,EAAI,IAAGA,EAAI,GAERA,GAwBT+B,EAAEwI,UAAYxI,EAAEhU,IAAM,SAAU2S,EAAGC,GACjC,OAAO5S,EAAI4V,KAAM,IAAIhX,EAAU+T,EAAGC,GAAIyB,EAAgBC,IAQxDN,EAAEyI,mBAAqBzI,EAAE0I,KAAO,SAAU/J,EAAGC,GAC3C,OAAO5S,EAAI4V,KAAM,IAAIhX,EAAU+T,EAAGC,GAAI,EAAG,IAmB3CoB,EAAE2I,gBAAkB3I,EAAEkG,IAAM,SAAUjI,EAAG4E,GACvC,IAAI+F,EAAMC,EAAU5X,EAAG+N,EAAS8J,EAAQC,EAAQC,EAAQrK,EACtDD,EAAIkD,KAKN,IAHA3D,EAAI,IAAIrT,EAAUqT,IAGZa,IAAMb,EAAEgL,YACZ,MAAM7Y,MACHoN,EAAiB,4BAA8B2C,EAAQlC,IAS5D,GANS,MAAL4E,IAAWA,EAAI,IAAIjY,EAAUiY,IAGjCiG,EAAS7K,EAAExN,EAAI,IAGViO,EAAEI,IAAMJ,EAAEI,EAAE,IAAgB,GAAVJ,EAAEI,EAAE,KAAYJ,EAAEjO,GAAmB,GAAdiO,EAAEI,EAAE9E,SAAgBiE,EAAEa,IAAMb,EAAEa,EAAE,GAK5E,OADAH,EAAI,IAAI/T,EAAUwS,KAAK8I,KAAK/F,EAAQzB,GAAIoK,EAAS,EAAIzJ,EAAMpB,IAAMkC,EAAQlC,KAClE4E,EAAIlE,EAAEuK,IAAIrG,GAAKlE,EAKxB,GAFAoK,EAAS9K,EAAEE,EAAI,EAEX0E,EAAG,CAGL,GAAIA,EAAE/D,GAAK+D,EAAE/D,EAAE,IAAM+D,EAAE1E,EAAG,OAAO,IAAIvT,EAAU+c,MAE/CkB,GAAYE,GAAUrK,EAAEuK,aAAepG,EAAEoG,eAE3BvK,EAAIA,EAAEwK,IAAIrG,QAInB,IAAI5E,EAAExN,EAAI,IAAMiO,EAAEjO,EAAI,GAAKiO,EAAEjO,GAAK,IAAa,GAAPiO,EAAEjO,EAE7CiO,EAAEI,EAAE,GAAK,GAAKgK,GAAUpK,EAAEI,EAAE,IAAM,KAElCJ,EAAEI,EAAE,GAAK,MAAQgK,GAAUpK,EAAEI,EAAE,IAAM,YASvC,OANAE,EAAIN,EAAEP,EAAI,GAAKkB,EAAMpB,IAAM,EAAI,EAG3BS,EAAEjO,GAAK,IAAGuO,EAAI,EAAIA,GAGf,IAAIpU,EAAUme,EAAS,EAAI/J,EAAIA,GAE7B6B,IAKT7B,EAAI7B,EAAS0D,EAAgBlD,EAAW,IAe1C,IAZImL,GACFF,EAAO,IAAIhe,EAAU,IACjBme,IAAQ9K,EAAEE,EAAI,GAClB6K,EAAS3J,EAAMpB,IAGf+K,GADA/X,EAAImM,KAAKiL,KAAKlI,EAAQlC,KACT,EAGfU,EAAI,IAAI/T,EAAUwV,KAGR,CAER,GAAI4I,EAAQ,CAEV,KADArK,EAAIA,EAAEwK,MAAMzK,IACLI,EAAG,MAENE,EACEL,EAAEG,EAAE9E,OAASgF,IAAGL,EAAEG,EAAE9E,OAASgF,GACxB6J,IACTlK,EAAIA,EAAEuK,IAAIrG,IAId,GAAI5R,EAAG,CAEL,GAAU,KADVA,EAAIqM,EAAUrM,EAAI,IACL,MACb+X,EAAS/X,EAAI,OAKb,GAFAiR,EADAjE,EAAIA,EAAEkL,MAAMP,GACH3K,EAAExN,EAAI,EAAG,GAEdwN,EAAExN,EAAI,GACRuY,EAAS3J,EAAMpB,OACV,CAEL,GAAU,KADVhN,GAAKkP,EAAQlC,IACA,MACb+K,EAAS/X,EAAI,EAIjByN,EAAIA,EAAEyK,MAAMzK,GAERM,EACEN,EAAEI,GAAKJ,EAAEI,EAAE9E,OAASgF,IAAGN,EAAEI,EAAE9E,OAASgF,GAC/B6J,IACTnK,EAAIA,EAAEwK,IAAIrG,IAId,OAAIgG,EAAiBlK,GACjBoK,IAAQpK,EAAIyB,EAAIpU,IAAI2S,IAEjBkE,EAAIlE,EAAEuK,IAAIrG,GAAK7D,EAAIkD,EAAMvD,EAAGkC,EAAeP,EAnHxBwG,WAmH+CnI,IAY3EqB,EAAEoJ,aAAe,SAAU7G,GACzB,IAAItE,EAAI,IAAIrT,EAAUgX,MAGtB,OAFU,MAANW,EAAYA,EAAKjC,EAChBpB,EAASqD,EAAI,EAAG,GACdL,EAAMjE,EAAGA,EAAExN,EAAI,EAAG8R,IAQ3BvC,EAAEqJ,UAAYrJ,EAAEsJ,GAAK,SAAU3K,EAAGC,GAChC,OAA8C,IAAvCH,EAAQmD,KAAM,IAAIhX,EAAU+T,EAAGC,KAOxCoB,EAAEuJ,SAAW,WACX,QAAS3H,KAAK9C,GAQhBkB,EAAEwJ,cAAgBxJ,EAAEpU,GAAK,SAAU+S,EAAGC,GACpC,OAAOH,EAAQmD,KAAM,IAAIhX,EAAU+T,EAAGC,IAAM,GAQ9CoB,EAAEyJ,uBAAyBzJ,EAAE0J,IAAM,SAAU/K,EAAGC,GAC9C,OAAoD,KAA5CA,EAAIH,EAAQmD,KAAM,IAAIhX,EAAU+T,EAAGC,MAAoB,IAANA,GAQ3DoB,EAAEiJ,UAAY,WACZ,QAASrH,KAAK9C,GAAKd,EAAS4D,KAAKnR,EAAIkN,GAAYiE,KAAK9C,EAAE9E,OAAS,GAQnEgG,EAAE2J,WAAa3J,EAAE8E,GAAK,SAAUnG,EAAGC,GACjC,OAAOH,EAAQmD,KAAM,IAAIhX,EAAU+T,EAAGC,IAAM,GAQ9CoB,EAAE4J,oBAAsB5J,EAAE6J,IAAM,SAAUlL,EAAGC,GAC3C,OAAqD,KAA7CA,EAAIH,EAAQmD,KAAM,IAAIhX,EAAU+T,EAAGC,MAAqB,IAANA,GAO5DoB,EAAEiI,MAAQ,WACR,OAAQrG,KAAKzD,GAOf6B,EAAE8J,WAAa,WACb,OAAOlI,KAAKzD,EAAI,GAOlB6B,EAAE+J,WAAa,WACb,OAAOnI,KAAKzD,EAAI,GAOlB6B,EAAEgK,OAAS,WACT,QAASpI,KAAK9C,GAAkB,GAAb8C,KAAK9C,EAAE,IAwB5BkB,EAAEiK,MAAQ,SAAUtL,EAAGC,GACrB,IAAI3N,EAAGoN,EAAG6L,EAAGC,EACXzL,EAAIkD,KACJvU,EAAIqR,EAAEP,EAMR,GAHAS,GADAD,EAAI,IAAI/T,EAAU+T,EAAGC,IACfT,GAGD9Q,IAAMuR,EAAG,OAAO,IAAIhU,EAAU+c,KAGnC,GAAIta,GAAKuR,EAEP,OADAD,EAAER,GAAKS,EACAF,EAAE8G,KAAK7G,GAGhB,IAAIyL,EAAK1L,EAAEjO,EAAIkN,EACb0M,EAAK1L,EAAElO,EAAIkN,EACXkB,EAAKH,EAAEI,EACPC,EAAKJ,EAAEG,EAET,IAAKsL,IAAOC,EAAI,CAGd,IAAKxL,IAAOE,EAAI,OAAOF,GAAMF,EAAER,GAAKS,EAAGD,GAAK,IAAI/T,EAAUmU,EAAKL,EAAIiJ,KAGnE,IAAK9I,EAAG,KAAOE,EAAG,GAGhB,OAAOA,EAAG,IAAMJ,EAAER,GAAKS,EAAGD,GAAK,IAAI/T,EAAUiU,EAAG,GAAKH,EAGnC,GAAjB4B,GAAsB,EAAI,GAS/B,GALA8J,EAAKpM,EAASoM,GACdC,EAAKrM,EAASqM,GACdxL,EAAKA,EAAGL,QAGJnR,EAAI+c,EAAKC,EAAI,CAaf,KAXIF,EAAO9c,EAAI,IACbA,GAAKA,EACL6c,EAAIrL,IAEJwL,EAAKD,EACLF,EAAInL,GAGNmL,EAAEnE,UAGGnH,EAAIvR,EAAGuR,IAAKsL,EAAE9Y,KAAK,IACxB8Y,EAAEnE,eAMF,IAFA1H,GAAK8L,GAAQ9c,EAAIwR,EAAG7E,SAAW4E,EAAIG,EAAG/E,SAAW3M,EAAIuR,EAEhDvR,EAAIuR,EAAI,EAAGA,EAAIP,EAAGO,IAErB,GAAIC,EAAGD,IAAMG,EAAGH,GAAI,CAClBuL,EAAOtL,EAAGD,GAAKG,EAAGH,GAClB,MAYN,GANIuL,IAAMD,EAAIrL,EAAIA,EAAKE,EAAIA,EAAKmL,EAAGvL,EAAER,GAAKQ,EAAER,IAE5CS,GAAKP,EAAIU,EAAG/E,SAAW/I,EAAI4N,EAAG7E,SAItB,EAAG,KAAO4E,IAAKC,EAAG5N,KAAO,GAIjC,IAHA2N,EAAIlB,EAAO,EAGJW,EAAIhR,GAAI,CAEb,GAAIwR,IAAKR,GAAKU,EAAGV,GAAI,CACnB,IAAKpN,EAAIoN,EAAGpN,IAAM4N,IAAK5N,GAAI4N,EAAG5N,GAAK2N,KACjCC,EAAG5N,GACL4N,EAAGR,IAAMX,EAGXmB,EAAGR,IAAMU,EAAGV,GAId,KAAgB,GAATQ,EAAG,GAASA,EAAGyG,OAAO,EAAG,KAAM+E,GAGtC,OAAKxL,EAAG,GAWDkE,EAAUpE,EAAGE,EAAIwL,IAPtB1L,EAAER,EAAqB,GAAjBmC,GAAsB,EAAI,EAChC3B,EAAEG,EAAI,CAACH,EAAElO,EAAI,GACNkO,IA8BXqB,EAAEsK,OAAStK,EAAEkJ,IAAM,SAAUvK,EAAGC,GAC9B,IAAIqI,EAAG9I,EACLO,EAAIkD,KAKN,OAHAjD,EAAI,IAAI/T,EAAU+T,EAAGC,IAGhBF,EAAEI,IAAMH,EAAER,GAAKQ,EAAEG,IAAMH,EAAEG,EAAE,GACvB,IAAIlU,EAAU+c,MAGXhJ,EAAEG,GAAKJ,EAAEI,IAAMJ,EAAEI,EAAE,GACtB,IAAIlU,EAAU8T,IAGJ,GAAfkC,GAIFzC,EAAIQ,EAAER,EACNQ,EAAER,EAAI,EACN8I,EAAIjb,EAAI0S,EAAGC,EAAG,EAAG,GACjBA,EAAER,EAAIA,EACN8I,EAAE9I,GAAKA,GAEP8I,EAAIjb,EAAI0S,EAAGC,EAAG,EAAGiC,IAGnBjC,EAAID,EAAEuL,MAAMhD,EAAEkC,MAAMxK,KAGbG,EAAE,IAAqB,GAAf8B,IAAkBjC,EAAER,EAAIO,EAAEP,GAElCQ,IAwBTqB,EAAEuK,aAAevK,EAAEmJ,MAAQ,SAAUxK,EAAGC,GACtC,IAAIE,EAAGrO,EAAGQ,EAAGoN,EAAGW,EAAG6D,EAAG2H,EAAKnE,EAAKC,EAAKmE,EAAKC,EAAKC,EAAKC,EAClDxE,EAAMyE,EACNnM,EAAIkD,KACJ/C,EAAKH,EAAEI,EACPC,GAAMJ,EAAI,IAAI/T,EAAU+T,EAAGC,IAAIE,EAGjC,IAAKD,IAAOE,IAAOF,EAAG,KAAOE,EAAG,GAmB9B,OAhBKL,EAAEP,IAAMQ,EAAER,GAAKU,IAAOA,EAAG,KAAOE,GAAMA,IAAOA,EAAG,KAAOF,EAC1DF,EAAEG,EAAIH,EAAElO,EAAIkO,EAAER,EAAI,MAElBQ,EAAER,GAAKO,EAAEP,EAGJU,GAAOE,GAKVJ,EAAEG,EAAI,CAAC,GACPH,EAAElO,EAAI,GALNkO,EAAEG,EAAIH,EAAElO,EAAI,MASTkO,EAYT,IATAlO,EAAIuN,EAASU,EAAEjO,EAAIkN,GAAYK,EAASW,EAAElO,EAAIkN,GAC9CgB,EAAER,GAAKO,EAAEP,GACTqM,EAAM3L,EAAG7E,SACTyQ,EAAM1L,EAAG/E,UAGM4Q,EAAK/L,EAAIA,EAAKE,EAAIA,EAAK6L,EAAI3Z,EAAIuZ,EAAKA,EAAMC,EAAKA,EAAMxZ,GAG/DA,EAAIuZ,EAAMC,EAAKG,EAAK,GAAI3Z,IAAK2Z,EAAGxZ,KAAK,IAK1C,IAHAgV,EAAO1I,EACPmN,EAAW/M,EAEN7M,EAAIwZ,IAAOxZ,GAAK,GAAI,CAKvB,IAJA6N,EAAI,EACJ4L,EAAM3L,EAAG9N,GAAK4Z,EACdF,EAAM5L,EAAG9N,GAAK4Z,EAAW,EAEXxM,EAAIpN,GAAb+N,EAAIwL,GAAgBnM,EAAIpN,GAK3B6N,IADAuH,EAAMqE,GAHNrE,EAAMxH,IAAKG,GAAK6L,IAEhBhI,EAAI8H,EAAMtE,GADVC,EAAMzH,EAAGG,GAAK6L,EAAW,GACHH,GACEG,EAAYA,EAAYD,EAAGvM,GAAKS,GAC7CsH,EAAO,IAAMvD,EAAIgI,EAAW,GAAKF,EAAMrE,EAClDsE,EAAGvM,KAAOgI,EAAMD,EAGlBwE,EAAGvM,GAAKS,EASV,OANIA,IACArO,EAEFma,EAAGtF,OAAO,EAAG,GAGRvC,EAAUpE,EAAGiM,EAAIna,IAQ1BuP,EAAE8K,QAAU,WACV,IAAIpM,EAAI,IAAI9T,EAAUgX,MAEtB,OADAlD,EAAEP,GAAKO,EAAEP,GAAK,KACPO,GAwBTsB,EAAEwF,KAAO,SAAU7G,EAAGC,GACpB,IAAIsL,EACFxL,EAAIkD,KACJvU,EAAIqR,EAAEP,EAMR,GAHAS,GADAD,EAAI,IAAI/T,EAAU+T,EAAGC,IACfT,GAGD9Q,IAAMuR,EAAG,OAAO,IAAIhU,EAAU+c,KAGlC,GAAIta,GAAKuR,EAER,OADAD,EAAER,GAAKS,EACAF,EAAEuL,MAAMtL,GAGjB,IAAIyL,EAAK1L,EAAEjO,EAAIkN,EACb0M,EAAK1L,EAAElO,EAAIkN,EACXkB,EAAKH,EAAEI,EACPC,EAAKJ,EAAEG,EAET,IAAKsL,IAAOC,EAAI,CAGd,IAAKxL,IAAOE,EAAI,OAAO,IAAInU,EAAUyC,EAAI,GAIzC,IAAKwR,EAAG,KAAOE,EAAG,GAAI,OAAOA,EAAG,GAAKJ,EAAI,IAAI/T,EAAUiU,EAAG,GAAKH,EAAQ,EAAJrR,GAQrE,GALA+c,EAAKpM,EAASoM,GACdC,EAAKrM,EAASqM,GACdxL,EAAKA,EAAGL,QAGJnR,EAAI+c,EAAKC,EAAI,CAUf,IATIhd,EAAI,GACNgd,EAAKD,EACLF,EAAInL,IAEJ1R,GAAKA,EACL6c,EAAIrL,GAGNqL,EAAEnE,UACK1Y,IAAK6c,EAAE9Y,KAAK,IACnB8Y,EAAEnE,UAUJ,KAPA1Y,EAAIwR,EAAG7E,SACP4E,EAAIG,EAAG/E,QAGK,IAAGkQ,EAAInL,EAAIA,EAAKF,EAAIA,EAAKqL,EAAGtL,EAAIvR,GAGvCA,EAAI,EAAGuR,GACVvR,GAAKwR,IAAKD,GAAKC,EAAGD,GAAKG,EAAGH,GAAKvR,GAAKqQ,EAAO,EAC3CmB,EAAGD,GAAKlB,IAASmB,EAAGD,GAAK,EAAIC,EAAGD,GAAKlB,EAUvC,OAPIrQ,IACFwR,EAAK,CAACxR,GAAGmM,OAAOqF,KACdwL,GAKGtH,EAAUpE,EAAGE,EAAIwL,IAmB1BrK,EAAE+K,UAAY/K,EAAEiD,GAAK,SAAUA,EAAIV,GACjC,IAAIzD,EAAGb,EAAGuD,EACR9C,EAAIkD,KAEN,GAAU,MAANqB,GAAcA,MAASA,EAKzB,OAJA/D,EAAS+D,EAAI,EAAGlF,GACN,MAANwE,EAAYA,EAAKjC,EAChBpB,EAASqD,EAAI,EAAG,GAEdL,EAAM,IAAItX,EAAU8T,GAAIuE,EAAIV,GAGrC,KAAMzD,EAAIJ,EAAEI,GAAI,OAAO,KAIvB,GAFAb,GADAuD,EAAI1C,EAAE9E,OAAS,GACP2D,EAAW,EAEf6D,EAAI1C,EAAE0C,GAAI,CAGZ,KAAOA,EAAI,IAAM,EAAGA,GAAK,GAAIvD,KAG7B,IAAKuD,EAAI1C,EAAE,GAAI0C,GAAK,GAAIA,GAAK,GAAIvD,MAKnC,OAFIgF,GAAMvE,EAAEjO,EAAI,EAAIwN,IAAGA,EAAIS,EAAEjO,EAAI,GAE1BwN,GAYT+B,EAAEgL,UAAY,SAAUhM,GAEtB,OADAE,EAASF,GAAG,iBAAmBpB,GACxBgE,KAAKuH,MAAM,KAAOnK,IAe3BgB,EAAEiL,WAAajL,EAAEkL,KAAO,WACtB,IAAIrI,EAAG5E,EAAGK,EAAG6M,EAAKjB,EAChBxL,EAAIkD,KACJ9C,EAAIJ,EAAEI,EACNX,EAAIO,EAAEP,EACN1N,EAAIiO,EAAEjO,EACN0U,EAAK9E,EAAiB,EACtBuI,EAAO,IAAIhe,EAAU,OAGvB,GAAU,IAANuT,IAAYW,IAAMA,EAAE,GACtB,OAAO,IAAIlU,GAAWuT,GAAKA,EAAI,KAAOW,GAAKA,EAAE,IAAM6I,IAAM7I,EAAIJ,EAAI,KA8BnE,GAtBS,IAJTP,EAAIf,KAAK8N,MAAM/K,EAAQzB,MAITP,GAAK,OACjBF,EAAIC,EAAcY,IACX9E,OAASvJ,GAAK,GAAK,IAAGwN,GAAK,KAClCE,EAAIf,KAAK8N,MAAMjN,GACfxN,EAAIuN,GAAUvN,EAAI,GAAK,IAAMA,EAAI,GAAKA,EAAI,GAS1C6N,EAAI,IAAI1T,EANNqT,EADEE,GAAK,IACH,KAAO1N,GAEXwN,EAAIE,EAAEmB,iBACAd,MAAM,EAAGP,EAAE8D,QAAQ,KAAO,GAAKtR,IAKvC6N,EAAI,IAAI1T,EAAUuT,EAAI,IAOpBG,EAAEQ,EAAE,GAMN,KAJAX,GADA1N,EAAI6N,EAAE7N,GACE0U,GACA,IAAGhH,EAAI,KAOb,GAHA+L,EAAI5L,EACJA,EAAIsK,EAAKO,MAAMe,EAAE1E,KAAKxZ,EAAI0S,EAAGwL,EAAG/E,EAAI,KAEhCjH,EAAcgM,EAAEpL,GAAGN,MAAM,EAAGL,MAAQF,EAAIC,EAAcI,EAAEQ,IAAIN,MAAM,EAAGL,GAAI,CAW3E,GANIG,EAAE7N,EAAIA,KAAK0N,EAMN,SALTF,EAAIA,EAAEO,MAAML,EAAI,EAAGA,EAAI,MAKHgN,GAAY,QAALlN,GAgBpB,EAICA,KAAOA,EAAEO,MAAM,IAAqB,KAAfP,EAAEuB,OAAO,MAGlC0C,EAAM5D,EAAGA,EAAE7N,EAAI4P,EAAiB,EAAG,GACnCwC,GAAKvE,EAAE6K,MAAM7K,GAAGgL,GAAG5K,IAGrB,MAvBA,IAAKyM,IACHjJ,EAAMgI,EAAGA,EAAEzZ,EAAI4P,EAAiB,EAAG,GAE/B6J,EAAEf,MAAMe,GAAGZ,GAAG5K,IAAI,CACpBJ,EAAI4L,EACJ,MAIJ/E,GAAM,EACNhH,GAAK,EACLgN,EAAM,EAkBd,OAAOjJ,EAAM5D,EAAGA,EAAE7N,EAAI4P,EAAiB,EAAGC,EAAeuC,IAa3D7C,EAAEV,cAAgB,SAAU6F,EAAI5C,GAK9B,OAJU,MAAN4C,IACFjG,EAASiG,EAAI,EAAGpH,GAChBoH,KAEK7C,EAAOV,KAAMuD,EAAI5C,EAAI,IAgB9BvC,EAAEoL,QAAU,SAAUjG,EAAI5C,GAKxB,OAJU,MAAN4C,IACFjG,EAASiG,EAAI,EAAGpH,GAChBoH,EAAKA,EAAKvD,KAAKnR,EAAI,GAEd6R,EAAOV,KAAMuD,EAAI5C,IA6B1BvC,EAAEqL,SAAW,SAAUlG,EAAI5C,EAAID,GAC7B,IAAI/C,EACFb,EAAIkD,KAEN,GAAc,MAAVU,EACQ,MAAN6C,GAAc5C,GAAmB,iBAANA,GAC7BD,EAASC,EACTA,EAAK,MACI4C,GAAmB,iBAANA,GACtB7C,EAAS6C,EACTA,EAAK5C,EAAK,MAEVD,EAASxB,OAEN,GAAqB,iBAAVwB,EAChB,MAAMlS,MACHoN,EAAiB,2BAA6B8E,GAKnD,GAFA/C,EAAMb,EAAE0M,QAAQjG,EAAI5C,GAEhB7D,EAAEI,EAAG,CACP,IAAI7N,EACF6U,EAAMvG,EAAIvO,MAAM,KAChBsa,GAAMhJ,EAAOtB,UACbuK,GAAMjJ,EAAOrB,mBACbC,EAAiBoB,EAAOpB,gBAAkB,GAC1CsK,EAAU1F,EAAI,GACd2F,EAAe3F,EAAI,GACnB4F,EAAQhN,EAAEP,EAAI,EACdwN,EAAYD,EAAQF,EAAQhN,MAAM,GAAKgN,EACvC9L,EAAMiM,EAAU3R,OAIlB,GAFIuR,IAAIta,EAAIqa,EAAIA,EAAKC,EAAIA,EAAKta,EAAGyO,GAAOzO,GAEpCqa,EAAK,GAAK5L,EAAM,EAAG,CAGrB,IAFAzO,EAAIyO,EAAM4L,GAAMA,EAChBE,EAAUG,EAAUC,OAAO,EAAG3a,GACvBA,EAAIyO,EAAKzO,GAAKqa,EAAIE,GAAWtK,EAAiByK,EAAUC,OAAO3a,EAAGqa,GACrEC,EAAK,IAAGC,GAAWtK,EAAiByK,EAAUnN,MAAMvN,IACpDya,IAAOF,EAAU,IAAMA,GAG7BjM,EAAMkM,EACHD,GAAWlJ,EAAOnB,kBAAoB,MAAQoK,GAAMjJ,EAAOlB,mBAC1DqK,EAAazJ,QAAQ,IAAI6J,OAAO,OAASN,EAAK,OAAQ,KACvD,MAAQjJ,EAAOjB,wBAA0B,KACxCoK,GACDD,EAGL,OAAQlJ,EAAOvB,QAAU,IAAMxB,GAAO+C,EAAO1L,QAAU,KAezDoJ,EAAE8L,WAAa,SAAUC,GACvB,IAAI7I,EAAG8I,EAAIC,EAAIC,EAAIzb,EAAG0b,EAAKlO,EAAGmO,EAAIC,EAAIpF,EAAG3I,EAAGH,EAC1CO,EAAIkD,KACJ/C,EAAKH,EAAEI,EAET,GAAU,MAANiN,MACF9N,EAAI,IAAIrT,EAAUmhB,IAGX9C,cAAgBhL,EAAEa,GAAa,IAARb,EAAEE,IAAYF,EAAE6G,GAAG1E,IAC/C,MAAMhQ,MACHoN,EAAiB,aACfS,EAAEgL,YAAc,iBAAmB,oBAAsB9I,EAAQlC,IAI1E,IAAKY,EAAI,OAAO,IAAIjU,EAAU8T,GAoB9B,IAlBAwE,EAAI,IAAItY,EAAUwV,GAClBiM,EAAKL,EAAK,IAAIphB,EAAUwV,GACxB6L,EAAKG,EAAK,IAAIxhB,EAAUwV,GACxBjC,EAAID,EAAcW,GAIlBpO,EAAIyS,EAAEzS,EAAI0N,EAAEnE,OAAS0E,EAAEjO,EAAI,EAC3ByS,EAAEpE,EAAE,GAAKjB,GAAUsO,EAAM1b,EAAIkN,GAAY,EAAIA,EAAWwO,EAAMA,GAC9DJ,GAAMA,GAAM9N,EAAEqK,WAAWpF,GAAK,EAAKzS,EAAI,EAAIyS,EAAImJ,EAAMpO,EAErDkO,EAAMzL,EACNA,EAAU,IACVzC,EAAI,IAAIrT,EAAUuT,GAGlBiO,EAAGtN,EAAE,GAAK,EAGRmI,EAAIjb,EAAIiS,EAAGiF,EAAG,EAAG,GAEQ,IADzBgJ,EAAKF,EAAGxG,KAAKyB,EAAEkC,MAAM8C,KACd3D,WAAWyD,IAClBC,EAAKC,EACLA,EAAKC,EACLG,EAAKD,EAAG5G,KAAKyB,EAAEkC,MAAM+C,EAAKG,IAC1BD,EAAKF,EACLhJ,EAAIjF,EAAEgM,MAAMhD,EAAEkC,MAAM+C,EAAKhJ,IACzBjF,EAAIiO,EAeN,OAZAA,EAAKlgB,EAAI+f,EAAG9B,MAAM+B,GAAKC,EAAI,EAAG,GAC9BG,EAAKA,EAAG5G,KAAK0G,EAAG/C,MAAMkD,IACtBL,EAAKA,EAAGxG,KAAK0G,EAAG/C,MAAM8C,IACtBG,EAAGjO,EAAIkO,EAAGlO,EAAIO,EAAEP,EAIhBG,EAAItS,EAAIqgB,EAAIJ,EAHZxb,GAAQ,EAGW6P,GAAe2J,MAAMvL,GAAG2J,MAAMC,WAC7Ctc,EAAIogB,EAAIJ,EAAIvb,EAAG6P,GAAe2J,MAAMvL,GAAG2J,OAAS,EAAI,CAACgE,EAAIJ,GAAM,CAACG,EAAIJ,GAExEtL,EAAUyL,EAEH7N,GAOT0B,EAAErT,SAAW,WACX,OAAQwT,EAAQyB,OAelB5B,EAAEsM,YAAc,SAAUrJ,EAAIV,GAE5B,OADU,MAANU,GAAY/D,EAAS+D,EAAI,EAAGlF,GACzBuE,EAAOV,KAAMqB,EAAIV,EAAI,IAe9BvC,EAAErR,SAAW,SAAUiQ,GACrB,IAAIW,EACFtB,EAAI2D,KACJzD,EAAIF,EAAEE,EACN1N,EAAIwN,EAAExN,EA0BR,OAvBU,OAANA,EACE0N,GACFoB,EAAM,WACFpB,EAAI,IAAGoB,EAAM,IAAMA,IAEvBA,EAAM,OAGC,MAALX,EACFW,EAAM9O,GAAK8P,GAAc9P,GAAK+P,EAC3BlB,EAAcpB,EAAcD,EAAEa,GAAIrO,GAClCgP,EAAavB,EAAcD,EAAEa,GAAIrO,EAAG,KACxB,KAANmO,GAAY2C,EAErBhC,EAAME,EAAavB,GADnBD,EAAIiE,EAAM,IAAItX,EAAUqT,GAAIoC,EAAiB5P,EAAI,EAAG6P,IACjBxB,GAAIb,EAAExN,EAAG,MAE5CyO,EAASN,EAAG,EAAG0C,EAAStH,OAAQ,QAChCuF,EAAMO,EAAYL,EAAavB,EAAcD,EAAEa,GAAIrO,EAAG,KAAM,GAAImO,EAAGT,GAAG,IAGpEA,EAAI,GAAKF,EAAEa,EAAE,KAAIS,EAAM,IAAMA,IAG5BA,GAQTS,EAAEG,QAAUH,EAAEuM,OAAS,WACrB,OAAOpM,EAAQyB,OAIjB5B,EAAE6B,cAAe,EAEG,MAAhBhC,GAAsBjV,EAAUsZ,IAAIrE,GAEjCjV,EAsIGgV,IACH,QAAchV,EAAUA,UAAYA,OAIrC,KAAN4hB,aAAqB,OAAO5hB,GAAtB,8BAz0FT,I,4nSCMD,SAAS6hB,EAAUzP,GACjB,IAAIzE,EAAWyE,EAAMzE,SACjBmU,EAAY1P,EAAM0P,UAClBC,EAAUC,YAAGF,GACbG,EAAOC,YAAkBL,EAAWzP,GACpC+P,EAAcC,YAAeP,EAAWzP,GAC5C,OAAoBiQ,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtEH,UAAWC,IACTpU,GAGNkU,EAAUW,aAAe,CAAC,KAAM,WAAY,aAC5CX,EAAUY,aAAe,CACvBlX,GAAI,SAENsW,EAAUa,UASN,GACWb,Q,kBCpBf,SAASc,EAAUvQ,GACjB,IAAI1X,EAAS0X,EAAM1X,OACfiT,EAAWyE,EAAMzE,SACjBmU,EAAY1P,EAAM0P,UAClBc,EAAaxQ,EAAMwQ,WACnBlU,EAAU0D,EAAM1D,QAChBrB,EAAW+E,EAAM/E,SACjB3I,EAAQ0N,EAAM1N,MACdme,EAAOzQ,EAAMyQ,KACblW,EAAWyF,EAAMzF,SACjBD,EAAW0F,EAAM1F,SACjBoW,EAAa1Q,EAAM0Q,WACnBC,EAAa3Q,EAAM2Q,WACnB7R,EAAYkB,EAAMlB,UAClB8R,EAAgB5Q,EAAM4Q,cACtBC,EAAU7Q,EAAM6Q,QAChB1R,EAAQa,EAAMb,MACdwQ,EAAUC,YAAGkB,YAAWxoB,EAAQ,UAAWwoB,YAAWN,EAAY,cAAeM,YAAW7V,EAAU,YAAa6V,YAAWxe,EAAO,SAAUwe,YAAWvW,EAAU,YAAauW,YAAWxW,EAAU,YAAawW,YAAWJ,EAAY,cAAeI,YAAWH,EAAY,eAAgBG,YAAWD,EAAS,WAAYE,YAAiBjS,GAAYkS,YAAqBJ,GAAgBK,YAAa9R,EAAO,QAASuQ,GAC/ZG,EAAOC,YAAkBS,EAAWvQ,GACpC+P,EAAcC,YAAeO,EAAWvQ,GAE5C,OAAKkR,IAAcC,MAAM5V,GAML0U,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtEH,UAAWC,IACTyB,IAAKC,OAAOZ,GAAOnU,GAPD2T,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtEH,UAAWC,IACTpU,GAQRgV,EAAUH,aAAe,CAAC,SAAU,KAAM,WAAY,YAAa,aAAc,UAAW,WAAY,QAAS,OAAQ,WAAY,WAAY,aAAc,aAAc,YAAa,gBAAiB,UAAW,SACtNG,EAAUF,aAAe,CACvBlX,GAAI,MAENoX,EAAUD,UAmDN,GACJC,EAAUc,OAASC,YAAuBf,GAAW,SAAUjU,GAC7D,MAAO,CACLA,QAASA,MAGEiU,QC/Ff,SAASgB,EAAYvR,GACnB,IAAIzE,EAAWyE,EAAMzE,SACjBmU,EAAY1P,EAAM0P,UAClBpT,EAAU0D,EAAM1D,QAChBkV,EAAYxR,EAAMwR,UAClB7B,EAAUC,YAAGkB,YAAWU,EAAW,cAAe9B,GAClDG,EAAOC,YAAkByB,EAAavR,GACtC+P,EAAcC,YAAeuB,EAAavR,GAC9C,OAAoBiQ,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtEH,UAAWC,IACTuB,IAAcC,MAAM5V,GAAYe,EAAUf,GAGhDgW,EAAYnB,aAAe,CAAC,KAAM,WAAY,YAAa,UAAW,aACtEmB,EAAYlB,aAAe,CACzBlX,GAAI,SAENoY,EAAYjB,UAeR,GACWiB,QCjCf,SAASE,EAAYzR,GACnB,IAAI7G,EAAK6G,EAAM7G,GACX0W,EAAOC,YAAkB2B,EAAazR,GAC1C,OAAoBiQ,IAAMC,cAAcqB,EAAapB,YAAS,GAAIN,EAAM,CACtE1W,GAAIA,KAIRsY,EAAYrB,aAAe,CAAC,MAC5BqB,EAAYnB,UAGR,GACJmB,EAAYpB,aAAe,CACzBlX,GAAI,SAESsY,QCff,SAASC,EAAgB1R,GACvB,IAAI7G,EAAK6G,EAAM7G,GACXuW,EAAY1P,EAAM0P,UAClBiC,EAAS3R,EAAM2R,OACfhC,EAAUC,YAAGgC,YAAeD,EAAQ,UAAWjC,GAC/CG,EAAOC,YAAkB4B,EAAiB1R,GAC9C,OAAoBiQ,IAAMC,cAAcK,EAAWJ,YAAS,GAAIN,EAAM,CACpE1W,GAAIA,EACJuW,UAAWC,KAIf+B,EAAgBtB,aAAe,CAAC,KAAM,YAAa,UACnDsB,EAAgBpB,UASZ,GACJoB,EAAgBrB,aAAe,CAC7BlX,GAAI,MAESuY,QCxBf,SAASG,EAAS7R,GAChB,IAAI1X,EAAS0X,EAAM1X,OACfwpB,EAAS9R,EAAM8R,OACfC,EAAQ/R,EAAM+R,MACdxW,EAAWyE,EAAMzE,SACjBmU,EAAY1P,EAAM0P,UAClBzU,EAAW+E,EAAM/E,SACjB3I,EAAQ0N,EAAM1N,MACdiI,EAAWyF,EAAMzF,SACjBD,EAAW0F,EAAM1F,SACjBwE,EAAYkB,EAAMlB,UAClB8R,EAAgB5Q,EAAM4Q,cACtBC,EAAU7Q,EAAM6Q,QAChBlB,EAAUC,YAAGkB,YAAWxoB,EAAQ,UAAWwoB,YAAW7V,EAAU,YAAa6V,YAAWxe,EAAO,SAAUwe,YAAWvW,EAAU,YAAauW,YAAWxW,EAAU,YAAawW,YAAWD,EAAS,WAAYE,YAAiBjS,GAAYkS,YAAqBJ,GAAgBlB,GAC/QG,EAAOC,YAAkB+B,EAAU7R,GACnC+P,EAAcC,YAAe6B,EAAU7R,GAE3C,OAAKkR,IAAcC,MAAM5V,GAML0U,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtEH,UAAWC,IACTqC,YAAKD,GAAO,SAAUE,GACxB,OAAO1B,EAAUc,OAAOY,EAAM,CAC5B5B,aAAc,CACZlX,GAAI2Y,SAVY7B,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtEH,UAAWC,IACTpU,GAcRsW,EAASzB,aAAe,CAAC,SAAU,KAAM,SAAU,QAAS,WAAY,YAAa,WAAY,QAAS,WAAY,WAAY,YAAa,gBAAiB,WAChKyB,EAASxB,aAAe,CACtBlX,GAAI,KACJ2Y,OAAQ,MAEVD,EAASvB,UAuCL,GACJuB,EAASR,OAASC,YAAuBO,GAAU,SAAUE,GAC3D,MAAO,CACLA,MAAOA,MAGIF,QC/Ef,SAASK,EAAMlS,GACb,IAAImS,EAAWnS,EAAMmS,SACjBC,EAAQpS,EAAMoS,MACdpY,EAASgG,EAAMhG,OACfuB,EAAWyE,EAAMzE,SACjBmU,EAAY1P,EAAM0P,UAClBc,EAAaxQ,EAAMwQ,WACnBzW,EAAQiG,EAAMjG,MACdsY,EAAUrS,EAAMqS,QAChBpY,EAAU+F,EAAM/F,QAChBqY,EAAatS,EAAMsS,WACnBrV,EAAQ+C,EAAM/C,MACdsV,EAAYvS,EAAMuS,UAClBC,EAAYxS,EAAMwS,UAClBC,EAAazS,EAAMyS,WACnBtV,EAAW6C,EAAM7C,SACjBuV,EAAS1S,EAAM0S,OACfC,EAAgB3S,EAAM2S,cACtBjC,EAAa1Q,EAAM0Q,WACnBC,EAAa3Q,EAAM2Q,WACnBzT,EAAO8C,EAAM9C,KACb0V,EAAW5S,EAAM4S,SACjB3T,EAAYe,EAAMf,UAClB4T,EAAU7S,EAAM6S,QAChBC,EAAa9S,EAAM8S,WACnBC,EAAY/S,EAAM+S,UAClBjU,EAAYkB,EAAMlB,UAClBkU,EAAchT,EAAMgT,YACpBpC,EAAgB5Q,EAAM4Q,cACtBjB,EAAUC,YAAG,KAAM7V,EAAOmD,EAAM4T,YAAW9W,EAAQ,UAAW8W,YAAWN,EAAY,cAAeM,YAAWwB,EAAY,cAAexB,YAAW7T,EAAO,SAAU6T,YAAW3T,EAAU,YAAa2T,YAAWJ,EAAY,cAAeI,YAAWH,EAAY,eAAgBG,YAAW8B,EAAU,YAAa9B,YAAW7R,EAAW,aAAc6R,YAAW+B,EAAS,WAAY/B,YAAWgC,EAAY,cAAehC,YAAWkC,EAAa,eAAgBC,YAAoBd,EAAU,YAAac,YAAoBb,EAAO,SAAUa,YAAoBhZ,EAAS,WAAYgZ,YAAoBP,EAAQ,UAAW3B,YAAiBjS,GAAYkS,YAAqBJ,GAAgBK,YAAaoB,EAAS,UAAW,QAAS3C,GACrtBG,EAAOC,YAAkBoC,EAAOlS,GAChC+P,EAAcC,YAAekC,EAAOlS,GAExC,IAAKkR,IAAcC,MAAM5V,GACvB,OAAoB0U,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtEH,UAAWC,IACTpU,GAGN,IACI2X,EAAyB,CAC3B7C,aAAc,CACZyB,OAAQ,OAGRqB,GANgBX,GAAaC,IAMiBxC,IAAMC,cAAcqB,EAAa,KAAMM,EAASR,OAAOmB,EAAWU,GAAyBlB,YAAKS,GAAY,SAAUW,GACtK,OAAOvB,EAASR,OAAO+B,EAAMF,OAE/B,OAAoBjD,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtEH,UAAWC,IACTwD,EAA4BlD,IAAMC,cAAcT,EAAW,KAAMkD,GAAiBX,YAAKe,GAAW,SAAUK,EAAMC,GACpH,OAAOxB,EAASR,OAAOsB,EAAcS,EAAMC,QACxCd,GAA0BtC,IAAMC,cAAcuB,EAAa,KAAMI,EAASR,OAAOkB,KAGxFL,EAAM9B,aAAe,CAAC,KAAM,WAAY,QAAS,SAAU,WAAY,YAAa,aAAc,QAAS,UAAW,UAAW,aAAc,QAAS,YAAa,YAAa,aAAc,WAAY,SAAU,gBAAiB,aAAc,aAAc,OAAQ,WAAY,YAAa,UAAW,aAAc,YAAa,YAAa,cAAe,iBACtW8B,EAAM7B,aAAe,CACnBlX,GAAI,SAEN+Y,EAAM5B,UA+FF,GACJ4B,EAAM7X,KAAOoV,EACbyC,EAAM1X,KAAO+V,EACb2B,EAAMoB,OAAS7B,EACfS,EAAMhY,OAASqX,EACfW,EAAM9X,WAAasX,EACnBQ,EAAM/X,IAAM0X,EACGK","file":"static/js/9.ed71ab1b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport {\n  Container, Header, Button, Form, Divider, Table, Label, Segment,\n} from 'semantic-ui-react';\nimport Number from 'react-number-format';\nimport { Contract, utils, BigNumber } from 'ethers';\nimport moment from 'moment';\nimport BN from 'bignumber.js';\nimport { toast } from 'react-toastify';\nimport copy from 'copy-to-clipboard';\nimport Page from '../components/Page';\nimport LinkExternal from '../components/Link/LinkExternal';\nimport EtherscanLink from '../components/Link/EtherscanLink';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as S from '../store/selectors';\nimport * as A from '../store/actions';\n\nimport {\n  FancyNftHeroesS1Address,\n  InvestorsPoolAddress, ReferralTreeAddress,\n  nullAddress,\n} from '../constants';\nimport nftHeroesAbi from '../abis/FancyNftHeroesS1Abi.json';\nimport InvestorsPoolAbi from '../abis/InvestorsPoolAbi.json';\nimport ReferralTreeAbi from '../abis/ReferralTreeAbi.json';\n\n\n\nfunction NftHeroesPage() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { library, chainId, account, active } = context;\n\n  const getNftContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyNftHeroesS1Address, nftHeroesAbi, provider);\n  }\n  const getInvestorsPoolContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(InvestorsPoolAddress, InvestorsPoolAbi, provider);\n  }\n  const getReferralTreeContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(ReferralTreeAddress, ReferralTreeAbi, provider);\n  }\n\n  // address\n  const [owner, setOwner] = useState(nullAddress);\n\n  // supply\n  const [maxSupply, setMaxSupply] = useState('0');\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  // mints total limit\n  const [airdropMintsTotalLimit, setAirdropMintsTotalLimit] = useState('0');\n  const [presaleMintsTotalLimit, setPresaleMintsTotalLimit] = useState('0');\n  const [privsaleMintsTotalLimit, setPrivsaleMintsTotalLimit] = useState('0');\n\n  // mints total\n  const [airdropMintsTotal, setAirdropMintsTotal] = useState('0');\n  const [presaleMintsTotal, setPresaleMintsTotal] = useState('0');\n  const [privsaleMintsTotal, setPrivsaleMintsTotal] = useState('0');\n  const [saleMintsTotal, setSaleMintsTotal] = useState('0');\n\n  // mints limit\n  const [airdropMintsLimit, setAirdropMintsLimit] = useState('0');\n  const [presaleMintsLimit, setPresaleMintsLimit] = useState('0');\n  const [privsaleMintsLimit, setPrivsaleMintsLimit] = useState('0');\n  const [saleMintsLimit, setSaleMintsLimit] = useState('0');\n\n  // mints\n  const [balance, setBalance] = useState('0');\n  const [investorRate, setInvestorRate] = useState('0');\n  const [mints, setMints] = useState('0');\n  const [airdropMints, setAirdropMints] = useState('0');\n  const [presaleMints, setPresaleMints] = useState('0');\n  const [privsaleMints, setPrivsaleMints] = useState('0');\n  const [saleMints, setSaleMints] = useState('0');\n\n  // isWhitelisted\n  const [isAirdropWhitelisted, setAirdropWhitelisted] = useState(false);\n  const [isPresaleWhitelisted, setPresaleWhitelisted] = useState(false);\n  const [isPrivsaleWhitelisted, setPrivsaleWhitelisted] = useState(false);\n\n  // status\n  const [isAirdropActive, setAirdropActive] = useState(false);\n  const [isPresaleActive, setPresaleActive] = useState(false);\n  const [isPrivsaleActive, setPrivsaleActive] = useState(false);\n  const [isSaleActive, setSaleActive] = useState(false);\n\n  // startTime\n  const [airdropStartTime, setAirdropStartTime] = useState(0);\n  const [presaleStartTime, setPresaleStartTime] = useState(0);\n  const [privsaleStartTime, setPrivsaleStartTime] = useState(0);\n  const [saleStartTime, setSaleStartTime] = useState(0);\n\n  // price\n  const [presalePrice, setPresalePrice] = useState('0');\n  const [privsalePrice, setPrivsalePrice] = useState('0');\n  const [salePrice, setSalePrice] = useState('0');\n\n  const [investorInfo, setInvestorInfo] = useState({\n    amount: BigNumber.from(0),\n    initialRewardRate: BigNumber.from(0),\n    reward: BigNumber.from(0),\n    claimedReward: BigNumber.from(0),\n  });\n  const [iPoolState, setIPoolState] = useState({\n    totalStaked: BigNumber.from(0),\n    historicalRewardRate: BigNumber.from(0),\n  });\n  const [investorsTotalRewards, setInvestorsTotalRewards] = useState('0');\n  const [investorsUnclaimedRewards, setInvestorsUnclaimedRewards] = useState('0');\n  let investorsShare = '0';\n  if (investorInfo.amount.gt('0') && iPoolState.totalStaked.gt('0')) {\n    investorsShare = utils.formatUnits(\n      investorInfo.amount.mul('10000000').div(iPoolState.totalStaked),\n      5\n    );\n  }\n\n\n  const [refInfo, setRefInfo] = useState({\n    id: BigNumber.from(0),\n    referrer: '',\n    referralsCount: BigNumber.from(0),\n    reward: BigNumber.from(0),\n    createdAt: BigNumber.from(0),\n  });\n  const referralLink = `https://${window.location.hostname}/?r=${refInfo.id.toNumber()}`;\n  const handleRferralLink = () => {\n    copy(referralLink);\n    toast.info('Referral Link copied!');\n  }\n\n  const parentId = useSelector(S.ref.getParentId);\n  const dispatch = useDispatch();\n  const [refId, setRefId] = useState(0);\n  useEffect(async () => {\n    //if (refId !== 0) return;\n\n    if (refInfo.id.toNumber() === 0) {\n      // не в дереве\n      if (parentId) {\n        setRefId(parentId);\n        dispatch(A.ref.setParentId(parentId));\n      }\n    } else {\n      // в дереве\n      const contractReferralTree = getReferralTreeContract();\n      const refParrentInfo = await contractReferralTree.accounts(refInfo.referrer);\n      setRefId(refParrentInfo.id.toNumber());\n      dispatch(A.ref.setParentId(refParrentInfo.id.toNumber()));\n    }\n  }, [refInfo, parentId]);\n\n\n  // update\n  const [initDone, setInitDone] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const update = async () => {\n    if (updating) return;\n    setUpdating(true);\n    try {\n      const contract = getNftContract();\n      const contractIPool = getInvestorsPoolContract();\n      const contractReferralTree = getReferralTreeContract();\n\n      const refInfo = await contractReferralTree.accounts(account);\n      setRefInfo(refInfo);\n\n      const iPoolState = await contractIPool.state();\n      setIPoolState(iPoolState);\n      const investorInfo = await contractIPool.stakers(account);\n      setInvestorInfo(investorInfo);\n      const unrewarded = iPoolState.historicalRewardRate.sub(investorInfo.initialRewardRate)\n        .mul(investorInfo.amount)\n        .shr(40);\n      setInvestorsTotalRewards(utils.formatEther(unrewarded));\n      const unclaimed = investorInfo.reward\n        .add(unrewarded)\n        .sub(investorInfo.claimedReward);\n      setInvestorsUnclaimedRewards(utils.formatEther(unclaimed));\n\n\n      // address\n      const owner = await contract.owner();\n      setOwner(owner);\n\n      // supply\n      const maxSupply = await contract.MAX_SUPPLY();\n      setMaxSupply(parseInt(maxSupply.toString()));\n      const totalSupply = await contract.totalSupply();\n      setTotalSupply(parseInt(totalSupply.toString()));\n\n      // mints total limit\n      const airdropMintsTotalLimit = await contract.airdropMintsTotalLimit();\n      setAirdropMintsTotalLimit(parseInt(airdropMintsTotalLimit.toString()));\n      const presaleMintsTotalLimit = await contract.presaleMintsTotalLimit();\n      setPresaleMintsTotalLimit(parseInt(presaleMintsTotalLimit.toString()));\n      const privsaleMintsTotalLimit = await contract.privsaleMintsTotalLimit();\n      setPrivsaleMintsTotalLimit(parseInt(privsaleMintsTotalLimit.toString()));\n\n      // mints total\n      const airdropMintsTotal = await contract.airdropMintsTotal();\n      setAirdropMintsTotal(parseInt(airdropMintsTotal.toString()));\n      const presaleMintsTotal = await contract.presaleMintsTotal();\n      setPresaleMintsTotal(parseInt(presaleMintsTotal.toString()));\n      const privsaleMintsTotal = await contract.privsaleMintsTotal();\n      setPrivsaleMintsTotal(parseInt(privsaleMintsTotal.toString()));\n      const saleMintsTotal = await contract.saleMintsTotal();\n      setSaleMintsTotal(parseInt(saleMintsTotal.toString()));\n\n      // mints limit\n      const airdropMintsLimit = await contract.airdropMintsLimit();\n      setAirdropMintsLimit(parseInt(airdropMintsLimit.toString()));\n      const presaleMintsLimit = await contract.presaleMintsLimit();\n      setPresaleMintsLimit(parseInt(presaleMintsLimit.toString()));\n      const privsaleMintsLimit = await contract.privsaleMintsLimit();\n      setPrivsaleMintsLimit(parseInt(privsaleMintsLimit.toString()));\n      const saleMintsLimit = await contract.saleMintsLimit();\n      setSaleMintsLimit(parseInt(saleMintsLimit.toString()));\n\n      // status\n      const isAirdropActive = await contract.isAirdropActive();\n      setAirdropActive(isAirdropActive);\n      const isPresaleActive = await contract.isPresaleActive();\n      setPresaleActive(isPresaleActive);\n      const isPrivsaleActive = await contract.isPrivsaleActive();\n      setPrivsaleActive(isPrivsaleActive);\n      const isSaleActive = await contract.isSaleActive();\n      setSaleActive(isSaleActive);\n\n      // startTime\n      const airdropStartTime = await contract.airdropStartTime();\n      setAirdropStartTime(airdropStartTime.toNumber());\n      const presaleStartTime = await contract.presaleStartTime();\n      setPresaleStartTime(presaleStartTime.toNumber());\n      const privsaleStartTime = await contract.privsaleStartTime();\n      setPrivsaleStartTime(privsaleStartTime.toNumber());\n      const saleStartTime = await contract.saleStartTime();\n      setSaleStartTime(saleStartTime.toNumber());\n\n      // price\n      const presalePrice = await contract.presaleValue(1);\n      setPresalePrice(\n        utils.formatEther(presalePrice.toString())\n      );\n      const privsalePrice = await contract.privsaleValue(1);\n      setPrivsalePrice(\n        utils.formatEther(privsalePrice.toString())\n      );\n      const salePrice = await contract.saleValue(1);\n      setSalePrice(\n        utils.formatEther(salePrice.toString())\n      );\n\n      if (account) {\n        // mints\n        const balance = await contract.balanceOf(account);\n        setBalance(parseInt(balance.toString()));\n        const investorRate = await contract.investorsRateOf(account);\n        setInvestorRate(utils.formatEther(investorRate.toString()));\n\n        const mints = await contract.mintsOf(account);\n        setMints(parseInt(mints.toString()));\n        const airdropMints = await contract.airdropMints(account);\n        setAirdropMints(parseInt(airdropMints.toString()));\n        const presaleMints = await contract.presaleMints(account);\n        setPresaleMints(parseInt(presaleMints.toString()));\n        const privsaleMints = await contract.privsaleMints(account);\n        setPrivsaleMints(parseInt(privsaleMints.toString()));\n        const saleMints = await contract.saleMints(account);\n        setSaleMints(parseInt(saleMints.toString()));\n\n        // isWhitelisted\n        const isAirdropWhitelisted = await contract.airdropWhitelist(account);\n        setAirdropWhitelisted(isAirdropWhitelisted);\n        const isPresaleWhitelisted = await contract.presaleWhitelist(account);\n        setPresaleWhitelisted(isPresaleWhitelisted);\n        const isPrivsaleWhitelisted = await contract.privsaleWhitelist(account);\n        setPrivsaleWhitelisted(isPrivsaleWhitelisted);\n\n      } else {\n        setBalance(0);\n        setInvestorRate('0');\n\n        // mints\n        setMints('0');\n        setAirdropMints('0');\n        setPresaleMints('0');\n        setPrivsaleMints('0');\n        setSaleMints('0');\n\n        // isWhitelisted\n        setAirdropWhitelisted(false);\n        setPresaleWhitelisted(false);\n        setPrivsaleWhitelisted(false);\n      }\n\n    } catch (error) { console.error(error); }\n    setInitDone(true);\n    setUpdating(false);\n  }\n\n  const [blockNumber, setBlockNumber] = useState(-1);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if (library) {\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n    }\n\n    setTime(Date.now());\n    const intervalId = setInterval(() => {\n      setTime(Date.now());\n    }, 1 * 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  useEffect(() => {\n    if (library) {\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n    }\n  }, [library]);\n\n  useEffect(() => {\n  }, [time]);\n  // update end\n\n\n  // checks\n  const isOwner = () => {\n    if (account === owner) {\n      return true;\n    }\n    return false;\n  }\n  const onlyOwner = () => {\n    if (!isOwner()) {\n      toast.error('Not Owner');\n      throw new Error('Not Owner');\n    }\n  }\n  // checks end\n\n\n  // addToWhitelist\n  const [airdropWhitelist, setAirdropWhitelist] = useState('');\n  const [presaleWhitelist, setPresaleWhitelist] = useState('');\n  const [privsaleWhitelist, setPrivsaleWhitelist] = useState('');\n  const onChangeWhitelist = (e, { name, value }) => {\n    switch (name) {\n      case 'airdropWhitelist': setAirdropWhitelist(value); break;\n      case 'presaleWhitelist': setPresaleWhitelist(value); break;\n      case 'privsaleWhitelist': setPrivsaleWhitelist(value); break;\n      default: break;\n    }\n  }\n  const stringToList = (string) => {\n    const list = [];\n    const temp = string.split(',');\n    for (let i in temp) {\n      let addr = temp[i].trim();\n      if (addr && addr !== '')\n        list.push(addr);\n    }\n    return list;\n  }\n  const doTx = async (promiseTx) => {\n    try {\n      const tx = await promiseTx;\n      if (!tx) return;\n      toast.info('Pending tx doTx', tx.hash);\n      await tx.wait(1);\n      toast.success('Done tx doTx', tx.hash);\n    } catch (error) {\n      console.error(error);\n      toast.error('Error doTx');\n    }\n  }\n  const addToAirdropWhitelist = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.addToAirdropWhitelist(stringToList(airdropWhitelist)));\n  }\n  const addToPresaleWhitelist = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.addToPresaleWhitelist(stringToList(presaleWhitelist)));\n  }\n  const addToPrivsaleWhitelist = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.addToPrivsaleWhitelist(stringToList(privsaleWhitelist)));\n  }\n  // addToWhitelist end\n\n\n  // startTime\n  const [airdropStartTimeValue, setAirdropStartTimeValue] = useState('0');\n  const [presaleStartTimeValue, setPresaleStartTimeValue] = useState('0');\n  const [privsaleStartTimeValue, setPrivsaleStartTimeValue] = useState('0');\n  const [saleStartTimeValue, setSaleStartTimeValue] = useState('0');\n  const onChangeStartTimeValue = (e, { name, value }) => {\n    switch (name) {\n      case 'airdropStartTimeValue': setAirdropStartTimeValue(value); break;\n      case 'presaleStartTimeValue': setPresaleStartTimeValue(value); break;\n      case 'privsaleStartTimeValue': setPrivsaleStartTimeValue(value); break;\n      case 'saleStartTimeValue': setSaleStartTimeValue(value); break;\n      default: break;\n    }\n  }\n  const setupAirdropStartTime = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setAirdropStartTime(airdropStartTimeValue));\n  }\n\n  const setupPresaleStartTime = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPresaleStartTime(presaleStartTimeValue));\n  }\n\n  const setupPrivsaleStartTime = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPrivsaleStartTime(privsaleStartTimeValue));\n  }\n\n  const setupSaleStartTime = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setSaleStartTime(saleStartTimeValue));\n  }\n  // startTime End\n\n\n  // mint total limit\n  const [airdropMintTotalLimitValue, setAirdropMintTotalLimitValue] = useState('0');\n  const [presaleMintTotalLimitValue, setPresaleMintTotalLimitValue] = useState('0');\n  const [privsaleMintTotalLimitValue, setPrivsaleMintTotalLimitValue] = useState('0');\n  const onChangeMintTotalLimitValue = (e, { name, value }) => {\n    switch (name) {\n      case 'airdropMintTotalLimitValue': setAirdropMintTotalLimitValue(value); break;\n      case 'presaleMintTotalLimitValue': setPresaleMintTotalLimitValue(value); break;\n      case 'privsaleMintTotalLimitValue': setPrivsaleMintTotalLimitValue(value); break;\n      default: break;\n    }\n  }\n  const setupAirdropMintTotalLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setAirdropMintsTotalLimit(airdropMintTotalLimitValue));\n    setAirdropMintTotalLimitValue('0');\n  }\n  const setupPresaleMintTotalLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPresaleMintsTotalLimit(presaleMintTotalLimitValue));\n    setPresaleMintTotalLimitValue('0');\n  }\n  const setupPrivsaleMintTotalLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPrivsaleMintsTotalLimit(privsaleMintTotalLimitValue));\n    setPrivsaleMintTotalLimitValue('0');\n  }\n  // mint total end\n\n\n  // mint limit\n  const [airdropMintLimitValue, setAirdropMintLimitValue] = useState('0');\n  const [presaleMintLimitValue, setPresaleMintLimitValue] = useState('0');\n  const [privsaleMintLimitValue, setPrivsaleMintLimitValue] = useState('0');\n  const [saleMintLimitValue, setSaleMintLimitValue] = useState('0');\n  const onChangeMintLimitValue = (e, { name, value }) => {\n    switch (name) {\n      case 'airdropMintLimitValue': setAirdropMintLimitValue(value); break;\n      case 'presaleMintLimitValue': setPresaleMintLimitValue(value); break;\n      case 'privsaleMintLimitValue': setPrivsaleMintLimitValue(value); break;\n      case 'saleMintLimitValue': setSaleMintLimitValue(value); break;\n      default: break;\n    }\n  }\n  const setupAirdropMintLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setAirdropMintsLimit(airdropMintLimitValue));\n    setAirdropMintLimitValue('0');\n  }\n  const setupPresaleMintLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPresaleMintsLimit(presaleMintLimitValue));\n    setPresaleMintLimitValue('0');\n  }\n  const setupPrivsaleMintLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPrivsaleMintsLimit(privsaleMintLimitValue));\n    setPrivsaleMintLimitValue('0');\n  }\n  const setupSaleMintLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setSaleMintsLimit(saleMintLimitValue));\n    setSaleMintLimitValue('0');\n  }\n  // mint limit end\n\n\n  // price\n  const [presalePriceValue, setPresalePriceValue] = useState('0');\n  const [privsalePriceValue, setPrivsalePriceValue] = useState('0');\n  const [salePriceValue, setSalePriceValue] = useState('0');\n  const onChangePriceValue = (e, { name, value }) => {\n    switch (name) {\n      case 'presalePriceValue': setPresalePriceValue(value); break;\n      case 'privsalePriceValue': setPrivsalePriceValue(value); break;\n      case 'salePriceValue': setSalePriceValue(value); break;\n      default: break;\n    }\n  }\n  const setupPresalePrice = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPresalePrice(utils.parseEther(presalePriceValue)));\n    setPresalePriceValue('0');\n  }\n  const setupPrivsalePrice = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPrivsalePrice(utils.parseEther(privsalePriceValue)));\n    setPrivsalePriceValue('0');\n  }\n  const setupSalePrice = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setSalePrice(utils.parseEther(salePriceValue)));\n    setSalePriceValue('0');\n  }\n  // price end\n\n\n  // mint\n  const [mintAirdropCount, setMintAirdropCount] = useState('0');\n  const [mintPresaleCount, setMintPresaleCount] = useState('0');\n  const [mintPrivsaleCount, setMintPrivsaleCount] = useState('0');\n  const [mintSaleCount, setMintSaleCount] = useState('0');\n  const onChangeMintCount = (e, { name, value }) => {\n    switch (name) {\n      case 'mintAirdropCount': setMintAirdropCount(value); break;\n      case 'mintPresaleCount': setMintPresaleCount(value); break;\n      case 'mintPrivsaleCount': setMintPrivsaleCount(value); break;\n      case 'mintSaleCount': setMintSaleCount(value); break;\n      default: break;\n    }\n  }\n  const mintAirdrop = async () => {\n    const contract = getNftContract(true);\n    const estimation = await contract.estimateGas.mintAirdrop(mintAirdropCount, refId);\n    await doTx(contract.mintAirdrop(mintAirdropCount, refId, { gasLimit: estimation.mul(120).div(100) }));\n    //setMintAirdropCount('0');\n  }\n\n  const mintPresale = async () => {\n    const contract = getNftContract(true);\n    const value = await contract.presaleValue(mintPresaleCount);\n    const estimation = await contract.estimateGas.mintPresale(mintPresaleCount, refId, { value: value });\n    await doTx(contract.mintPresale(mintPresaleCount, refId, {\n      value: value,\n      gasLimit: estimation.mul(120).div(100)\n    }));\n    //setMintPresaleCount('0');\n  }\n\n  const mintPrivsale = async () => {\n    const contract = getNftContract(true);\n    const value = await contract.privsaleValue(mintPrivsaleCount);\n    const estimation = await contract.estimateGas.mintPrivsale(mintPrivsaleCount, refId, { value: value });\n    doTx(contract.mintPrivsale(mintPrivsaleCount, refId, {\n      value: value,\n      gasLimit: estimation.mul(120).div(100)\n    }));\n    //setMintPrivsaleCount('0');\n  }\n\n  const mintSale = async () => {\n    const contract = getNftContract(true);\n    const value = await contract.saleValue(mintSaleCount);\n    const estimation = await contract.estimateGas.mintSale(mintSaleCount, refId, { value: value });\n    await doTx(contract.mintSale(mintSaleCount, refId, {\n      value: value,\n      gasLimit: estimation.mul(120).div(100)\n    }));\n    //setMintSaleCount('0');\n  }\n  // mint End\n\n\n  const claimInvestorsRewards = async () => {\n    const contract = getInvestorsPoolContract(true);\n    await doTx(contract.claimReward());\n    setInvestorsUnclaimedRewards('0');\n  }\n\n  const refJoin = async () => {\n    const contractReferralTree = getReferralTreeContract(true);\n    await doTx(contractReferralTree.join(refId));\n  }\n\n  return (\n    <Page title={'Heroes'}>\n      <Container>\n        <br />\n        <Segment>\n          <Header as='h1'>\n            <Header.Content>\n              Heroes (<Number value={totalSupply}\n                displayType='text' thousandSeparator />/<Number value={maxSupply}\n                  displayType='text' thousandSeparator />)\n              <Header.Subheader>\n                <div>Smart Contract: <EtherscanLink address={FancyNftHeroesS1Address}>{FancyNftHeroesS1Address}</EtherscanLink></div>\n                <div>Owner: <EtherscanLink address={owner}>{owner}</EtherscanLink></div>\n                <div>Last Block: <Number value={blockNumber}\n                  displayType='text' thousandSeparator />\n                </div>\n              </Header.Subheader>\n            </Header.Content>\n          </Header>\n        </Segment>\n\n\n        <Segment>\n          <Header as='h2'>Your</Header>\n          <div>Referrer ID: {refId}</div>\n          <div>Address: <EtherscanLink address={account}>{account}</EtherscanLink></div>\n          {refInfo.id.toNumber() > 0 && <>\n            <div>Referral Link: <LinkExternal href={referralLink}>{referralLink}</LinkExternal> <Button onClick={handleRferralLink}>Copy</Button></div>\n            <div>Total RefRewards: <Number value={utils.formatEther(refInfo.reward)} suffix=' BNB' displayType='text' thousandSeparator /></div>\n          </>}\n          {refInfo.id.toNumber() === 0 &&\n            <div><Button onClick={refJoin}>Join in Referral program</Button></div>}\n\n          <div>Balance NFT: <EtherscanLink token={`${FancyNftHeroesS1Address}?a=${account}`}><Number value={balance} displayType='text' thousandSeparator /></EtherscanLink></div>\n          <div>Mints: <Number value={mints} displayType='text' thousandSeparator /></div>\n          <div> Investor Level:{' '}\n            {(mints === 0) && <Label circular color='red'>None</Label>}\n            {(mints >= 1 && mints < 50) && <Label circular color='blue'>0</Label>}\n            {(mints >= 50 && mints < 100) && <Label circular color='blue'>1</Label>}\n            {(mints >= 100 && mints < 200) && <Label circular color='blue'>2</Label>}\n            {(mints > 200) && <Label circular color='blue'>3</Label>}\n          </div>\n          <div>Investor Rate: <Number value={investorRate} displayType='text' thousandSeparator /></div>\n          <div>Investor Share: <Number value={investorsShare} suffix=' %' displayType='text' thousandSeparator /></div>\n          <div>Total IRewards: <Number value={investorsTotalRewards} suffix=' BNB' displayType='text' thousandSeparator /></div>\n          <div>Unclaimed IRewards: <Number value={investorsUnclaimedRewards} suffix=' BNB' displayType='text' thousandSeparator /> <Button onClick={claimInvestorsRewards}>Claim</Button></div>\n          <Table celled compact>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Investor Level</Table.HeaderCell>\n                <Table.HeaderCell>Investor Rate</Table.HeaderCell>\n                <Table.HeaderCell>Mints</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              <Table.Row positive={mints >= 1} negative={mints === 0}>\n                <Table.Cell>{(mints >= 1 && mints < 50) ? <Label ribbon color='blue'>Leve 0</Label> : 'Leve 0'}</Table.Cell>\n                <Table.Cell>0</Table.Cell>\n                <Table.Cell>{'mints <50'}</Table.Cell>\n              </Table.Row>\n              <Table.Row positive={mints >= 50} negative={mints < 50}>\n                <Table.Cell>{(mints >= 50 && mints < 100) ? <Label ribbon color='blue'>Leve 1</Label> : 'Leve 1'}</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{'>=50 mints <100'}</Table.Cell>\n              </Table.Row>\n              <Table.Row positive={mints >= 100} negative={mints < 100}>\n                <Table.Cell>{(mints >= 100 && mints < 200) ? <Label ribbon color='blue'>Leve 2</Label> : 'Leve 2'}</Table.Cell>\n                <Table.Cell>3</Table.Cell>\n                <Table.Cell>{'>=100 mints <200'}</Table.Cell>\n              </Table.Row>\n              <Table.Row positive={mints >= 200} negative={mints < 200}>\n                <Table.Cell>{(mints >= 200) ? <Label ribbon color='blue'>Leve 3</Label> : 'Leve 3'}</Table.Cell>\n                <Table.Cell>7</Table.Cell>\n                <Table.Cell>{'mints >=200'}</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </Segment>\n\n\n        <Segment>\n          <Header as='h2'>\n            Airdrop ({isAirdropActive ? 'Is live' : 'Done'})\n            <Header.Subheader>\n              <div>{isAirdropWhitelisted ? 'Whitelisted' : 'Not Whitelisted'}</div>\n              <div>Start time: {airdropStartTime} ({moment(airdropStartTime, 'X').fromNow()})</div>\n              <div>Mints Total: <Number value={airdropMintsTotal} displayType='text' thousandSeparator /></div>\n              <div>Mints Total Limit: <Number value={airdropMintsTotalLimit} displayType='text' thousandSeparator /></div>\n              <div>Mints: <Number value={airdropMints} displayType='text' thousandSeparator /></div>\n              <div>Mints Limit: <Number value={airdropMintsLimit} displayType='text' thousandSeparator /></div>\n            </Header.Subheader>\n          </Header>\n          <Form>\n            <Form.Input\n              name='airdropWhitelist' label={'Address list'} type='text' required\n              value={airdropWhitelist} onChange={onChangeWhitelist}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={addToAirdropWhitelist}\n              disabled={!isOwner()}\n            >Add to Whitelist</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='airdropStartTimeValue' label={'Start time'} type='number' required\n              value={airdropStartTimeValue} onChange={onChangeStartTimeValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupAirdropStartTime}\n              disabled={!isOwner()}\n            >Set Start time</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='airdropMintTotalLimitValue' label={'Mint Total Limit'} type='number' required\n              value={airdropMintTotalLimitValue} onChange={onChangeMintTotalLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupAirdropMintTotalLimit}\n              disabled={!isOwner()}\n            >Set Mint Total Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='airdropMintLimitValue' label={'Mint Limit'} type='number' required\n              value={airdropMintLimitValue} onChange={onChangeMintLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupAirdropMintLimit}\n              disabled={!isOwner()}\n            >Set Mint Limit</Button>\n          </Form>\n          <Divider />\n\n\n          <Form>\n            <Form.Input\n              name='mintAirdropCount' label={'Count'} type='number' min='0' step='1' required\n              value={mintAirdropCount} onChange={onChangeMintCount}\n              disabled={!isAirdropActive || !isAirdropWhitelisted}\n            />\n            <Button\n              primary onClick={mintAirdrop}\n              disabled={!isAirdropActive || !isAirdropWhitelisted || parseInt(mintAirdropCount) === 0}\n            >Mint</Button>\n          </Form>\n        </Segment>\n\n\n        <Segment>\n          <Header as='h2'>\n            Presale ({isPresaleActive ? 'Is live' : 'Done'})\n            <Header.Subheader>\n              <div>{isPresaleWhitelisted ? 'Whitelisted' : 'Not Whitelisted'}</div>\n              <div>Start time: {presaleStartTime} ({moment(presaleStartTime, 'X').fromNow()})</div>\n              <div>Mints Total: <Number value={presaleMintsTotal} displayType='text' thousandSeparator /></div>\n              <div>Mints Total Limit: <Number value={presaleMintsTotalLimit} displayType='text' thousandSeparator /></div>\n              <div>Mints: <Number value={presaleMints} displayType='text' thousandSeparator /></div>\n              <div>Mints Limit: <Number value={presaleMintsLimit} displayType='text' thousandSeparator /></div>\n              <div>Price: <Number value={presalePrice} suffix=' BNB' displayType='text' thousandSeparator /></div>\n            </Header.Subheader>\n          </Header>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presaleWhitelist' label={'Address list'} type='text' required\n              value={presaleWhitelist} onChange={onChangeWhitelist}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={addToPresaleWhitelist}\n              disabled={!isOwner()}\n            >Add to Whitelist</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presaleStartTimeValue' label={'Start time'} type='number' required\n              value={presaleStartTimeValue} onChange={onChangeStartTimeValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPresaleStartTime}\n              disabled={!isOwner()}\n            >Set Start time</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presaleMintTotalLimitValue' label={'Mint Total Limit'} type='number' required\n              value={presaleMintTotalLimitValue} onChange={onChangeMintTotalLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPresaleMintTotalLimit}\n              disabled={!isOwner()}\n            >Set Mint Total Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presaleMintLimitValue' label={'Mint Limit'} type='number' required\n              value={presaleMintLimitValue} onChange={onChangeMintLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPresaleMintLimit}\n              disabled={!isOwner()}\n            >Set Mint Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presalePriceValue' label={'Price BNB'} type='number' required\n              value={presalePriceValue} onChange={onChangePriceValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPresalePrice}\n              disabled={!isOwner()}\n            >Set Price</Button>\n          </Form>\n          <Divider />\n\n\n          <Form>\n            <Form.Input\n              name='mintPresaleCount' label={'Count'} type='number' min='0' step='1' required\n              value={mintPresaleCount} onChange={onChangeMintCount}\n              disabled={!isPresaleActive || !isPresaleWhitelisted}\n            />\n            <Button\n              primary onClick={mintPresale}\n              disabled={!isPresaleActive || !isPresaleWhitelisted || parseInt(mintPresaleCount) === 0}\n            >Mint</Button>\n          </Form>\n        </Segment>\n\n\n        <Segment>\n          <Header as='h2'>\n            Privsale ({isPrivsaleActive ? 'Is live' : 'Done'})\n            <Header.Subheader>\n              <div>{isPrivsaleWhitelisted ? 'Whitelisted' : 'Not Whitelisted'}</div>\n              <div>Start time: {privsaleStartTime} ({moment(privsaleStartTime, 'X').fromNow()})</div>\n              <div>Mints Total: <Number value={privsaleMintsTotal} displayType='text' thousandSeparator /></div>\n              <div>Mints Total Limit: <Number value={privsaleMintsTotalLimit} displayType='text' thousandSeparator /></div>\n              <div>Mints: <Number value={privsaleMints} displayType='text' thousandSeparator /></div>\n              <div>Mints Limit: <Number value={privsaleMintsLimit} displayType='text' thousandSeparator /></div>\n              <div>Price: <Number value={privsalePrice} suffix=' BNB' displayType='text' thousandSeparator /></div>\n            </Header.Subheader>\n          </Header>\n          <Form>\n            <Form.Input\n              name='privsaleWhitelist' label={'Address list'} type='text' required\n              value={privsaleWhitelist} onChange={onChangeWhitelist}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={addToPrivsaleWhitelist}\n              disabled={!isOwner()}\n            >Add to Whitelist</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='privsaleStartTimeValue' label={'Start time'} type='number' required\n              value={privsaleStartTimeValue} onChange={onChangeStartTimeValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPrivsaleStartTime}\n              disabled={!isOwner()}\n            >Set Start time</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='privsaleMintTotalLimitValue' label={'Mint Total Limit'} type='number' required\n              value={privsaleMintTotalLimitValue} onChange={onChangeMintTotalLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPrivsaleMintTotalLimit}\n              disabled={!isOwner()}\n            >Set Mint Total Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='privsaleMintLimitValue' label={'Mint Limit'} type='number' required\n              value={privsaleMintLimitValue} onChange={onChangeMintLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPrivsaleMintLimit}\n              disabled={!isOwner()}\n            >Set Mint Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='privsalePriceValue' label={'Price BNB'} type='number' required\n              value={privsalePriceValue} onChange={onChangePriceValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPrivsalePrice}\n              disabled={!isOwner()}\n            >Set Price</Button>\n          </Form>\n          <Divider />\n\n\n          <Form>\n            <Form.Input\n              name='mintPrivsaleCount' label={'Count'} type='number' min='0' step='1' required\n              value={mintPrivsaleCount} onChange={onChangeMintCount}\n              disabled={!isPrivsaleActive || !isPrivsaleWhitelisted}\n            />\n            <Button\n              primary onClick={mintPrivsale}\n              disabled={!isPrivsaleActive || !isPrivsaleWhitelisted || parseInt(mintPrivsaleCount) === 0}\n            >Mint</Button>\n          </Form>\n        </Segment>\n\n\n        <Segment>\n          <Header as='h2'>\n            Sale ({isSaleActive ? 'Is live' : 'Done'})\n            <Header.Subheader>\n              <div>Start time: {saleStartTime} ({moment(saleStartTime, 'X').fromNow()})</div>\n              <div>Mints Total: <Number value={saleMintsTotal} displayType='text' thousandSeparator /></div>\n              <div>Mints: <Number value={saleMints} displayType='text' thousandSeparator /></div>\n              <div>Mints Limit: <Number value={saleMintsLimit} displayType='text' thousandSeparator /></div>\n              <div>Price: <Number value={salePrice} suffix=' BNB' displayType='text' thousandSeparator /></div>\n            </Header.Subheader>\n          </Header>\n          <Form>\n            <Form.Input\n              name='saleStartTimeValue' label={'Start time'} type='number' required\n              value={saleStartTimeValue} onChange={onChangeStartTimeValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupSaleStartTime}\n              disabled={!isOwner()}\n            >Set Start time</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='saleMintLimitValue' label={'Mint Limit'} type='number' required\n              value={saleMintLimitValue} onChange={onChangeMintLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupSaleMintLimit}\n              disabled={!isOwner()}\n            >Set Mint Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='salePriceValue' label={'Price BNB'} type='number' required\n              value={salePriceValue} onChange={onChangePriceValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupSalePrice}\n              disabled={!isOwner()}\n            >Set Price</Button>\n          </Form>\n          <Divider />\n\n\n          <Form>\n            <Form.Input\n              name='mintSaleCount' label={'Count'} type='number' min='0' step='1' required\n              value={mintSaleCount} onChange={onChangeMintCount}\n              disabled={!isSaleActive}\n            />\n            <Button\n              primary onClick={mintSale}\n              disabled={!isSaleActive || parseInt(mintSaleCount) === 0}\n            >Mint</Button>\n          </Form>\n        </Segment>\n\n      </Container>\n    </Page >\n  );\n};\n\nexport default hot(module)(NftHeroesPage);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { useMediaPredicate } from 'react-media-hook';\nimport { mobileBreakpoint } from '../helpers/Media';\n\nimport ScrollToTopOnMount from './ScrollToTopOnMount';\nimport Seo from './Seo';\nimport HeaderDesktop from './HeaderDesktop';\nimport HeaderMobile from './HeaderMobile';\nimport Footer from './Footer';\n\n\n\nfunction Page({ title, description, meta, children }) {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <Seo\n        title={title}\n        description={description}\n        meta={meta ? meta : []}\n      />\n\n      {!isMobile && <>\n        <HeaderDesktop />\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </>}\n\n      {isMobile && <HeaderMobile>\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </HeaderMobile>}\n      <Footer />\n    </>\n  );\n};\n\nexport default hot(module)(Page);\n","export const mobileBreakpoint = '(max-width: 768px)';\n\nexport const getAdaptiveClassName = (mainClass: string, isMobile: boolean): string =>\n  isMobile ? `${mainClass} ${mainClass}-mobile` : mainClass;\n","import { useEffect } from 'react';\n\n\n\nexport default function ScrollToTopOnMount() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return null;\n}\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Helmet } from 'react-helmet';\nimport { appName } from '../constants';\n\n\n\nfunction Seo({ title, description, meta, }) {\n  const metaDescription = description;\n  const defaultTitle = appName;\n  const twitter = null;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: 'en',\n      }}\n\n      title={title}\n      defaultTitle={defaultTitle}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: twitter || '',\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n    </Helmet>\n  )\n}\n\nexport default hot(module)(Seo);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Segment, Container, Menu } from 'semantic-ui-react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\n\n\nfunction HeaderDesktop() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n  return (\n    <Segment as={'header'}>\n      <Menu fixed='top' size='large' inverted>\n        <Container>\n          <Menu.Item header as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n          <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n\n          <Menu.Item\n            position='right'\n            style={{ color: chainId === appChain ? 'green' : 'red' }}\n            onClick={(triedEager && active && account)\n              ? openWalletAccountModal\n              : openWalletConnectModal\n            }\n          >\n            {accountShort}\n          </Menu.Item>\n        </Container>\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default hot(module)(HeaderDesktop);\n","import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\nimport { Container, Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\n\n\n\nfunction HeaderMobile({ children }) {\n  const [sidebarOpened, setSidebarOpened] = useState(false);\n\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        as={Menu}\n        animation='overlay'\n        inverted\n        onHide={() => setSidebarOpened(false)}\n        vertical\n        visible={sidebarOpened}\n      >\n        <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n        <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n      </Sidebar>\n\n      <Sidebar.Pusher dimmed={sidebarOpened}>\n        <Segment\n          as={'header'}\n          inverted\n          textAlign='center'\n          vertical\n        >\n          <Menu fixed='top' size='large' pointing inverted>\n            <Container>\n              <Menu.Item onClick={() => setSidebarOpened(true)}>\n                <Icon name='sidebar' />\n              </Menu.Item>\n              <Menu.Item as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n\n              <Menu.Item\n                position='right'\n                style={{ color: chainId === appChain ? 'green' : 'red' }}\n                onClick={(triedEager && active && account)\n                  ? openWalletAccountModal\n                  : openWalletConnectModal\n                }\n              >{accountShort}</Menu.Item>\n            </Container>\n          </Menu>\n        </Segment>\n\n        {children}\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nexport default hot(module)(HeaderMobile);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Link } from 'react-router-dom';\nimport { Segment, Container, List, Grid, Header, Divider } from 'semantic-ui-react';\nimport { routerPaths } from '../router/helper';\nimport { appName, projectEmail, projectTwitter } from '../constants';\nimport LinkExternal from './Link/LinkExternal';\n\n\n\nfunction Footer() {\n  return (\n    <Segment as={'footer'} inverted vertical>\n      <Container textAlign='center'>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.heroes}>Heroes NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.items}>Items NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.mixer}>NFT Mixer</List.Item>\n                <List.Item as={Link} to={routerPaths.marketplace}>Marketplace NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.lottery}>Lottery NFT Owners</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Token Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.staking}>NFT Staking</List.Item>\n                <List.Item as={Link} to={routerPaths.farming}>Token Farming</List.Item>\n                <List.Item as={Link} to={routerPaths.contacts}>Smart Contracts</List.Item>\n                <List.Item as={Link} to={routerPaths.faq}>FAQ</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Follow Us</Header>\n              <List link inverted>\n                <List.Item as={LinkExternal} href={projectTwitter}>Twitter</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={7}>\n              <Header as='h4' inverted>Footer Header</Header>\n              <p>Extra space for a call to action inside the footer that could help re-engage users.</p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Divider inverted section />\n        <div>{appName} © {new Date().getFullYear()}.</div>\n        <List horizontal inverted divided link size='small'>\n          <List.Item as={LinkExternal} href={`mailto:${projectEmail}`}>\n            Contact Us\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.terms}>\n            Terms and Conditions\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.privacy}>\n            Privacy Policy\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  );\n};\n\nexport default hot(module)(Footer);\n","import React from 'react';\nimport LinkExternal from './LinkExternal';\nimport { EtherscanLinkProps } from './types';\nimport { appChain } from '../../constants';\n\n\n\nconst EtherscanLink: React.FC<EtherscanLinkProps> = ({ address, token, tx, children, ...props }) => {\n  let href = '';\n  switch (appChain) {\n    case 4: href = 'https://rinkeby.etherscan.io'; break;\n    case 56: href = 'https://bscscan.com'; break;\n    default: break;\n  }\n\n  if (address) {\n    href += `/address/${address}`;\n  } else if (token) {\n    href += `/token/${token}`;\n  } else if (tx) {\n    href += `/tx/${tx}`;\n  }\n\n  return (\n    <LinkExternal href={href} {...props}>\n      {children}\n    </LinkExternal>\n  );\n};\n\nexport default EtherscanLink;\n","import * as rehydrate from './rehydrate/selectors';\nimport * as ref from './ref/selectors';\n\n\n\nexport {\n  rehydrate,\n  ref,\n};\n","import * as rehydrate from './rehydrate/actions';\nimport * as ref from './ref/actions';\n\n\n\nexport {\n  rehydrate,\n  ref,\n};\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided into individual cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;"],"sourceRoot":""}