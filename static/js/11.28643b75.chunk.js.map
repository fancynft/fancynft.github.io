{"version":3,"sources":["pages/NftStakingPage.js","components/Page.js","helpers/Media.ts","components/ScrollToTopOnMount.js","components/Seo.js","components/HeaderDesktop.js","components/HeaderMobile.js","components/Footer.js","components/Link/EtherscanLink.tsx","store/selectors.js","store/actions.js"],"names":["hot","module","useEagerConnect","context","useActiveWeb3React","library","account","chainId","getNftContract","active","withSigner","provider","getSigner","Contract","FancyNftHeroesS1Address","nftHeroesAbi","getFarmContract","FancyNftStakingAddress","FancyNftStakingAbi","getTokenContract","FancyTokenAddress","FancyTokenAbi","getTokenSupplierContract","FancyTokenSupplierAddress","FancyTokenSupplierAbi","useState","setSupplierStartTime","farmLastSupply","setFarmLastSupply","BigNumber","from","farmRrewardRate","setFarmRrewardRate","nullAddress","owner","setOwner","farmStakedNft","setFarmStakedNft","balanceNft","setBalanceNft","balanceToken","setBalanceToken","stakedNft","setStakedNft","farmRate","setFarmRate","amount","initialRewardRate","reward","claimedReward","stakerInfo","setStakerInfo","totalStaked","historicalRewardRate","farmState","setFarmState","unclaimedRewards","setUnclaimedRewards","farmShare","gt","utils","formatUnits","mul","div","useEffect","formatEther","toString","getCurrentTokenSupply","deltaTime","tokenSupply","setInitDone","updating","setUpdating","update","a","contractNft","contractToken","contractFarming","contractTokenSupplier","startTime","supplierStartTime","rewardRateOf","lastSupply","toNumber","state","stakers","timestamp","Math","floor","Date","now","currentTokenSupply","additionalRewardRate","shl","hrr","add","unrewarded","sub","shr","unclaimed","balanceOf","parseInt","console","error","blockNumber","setBlockNumber","time","setTime","on","intervalId","setInterval","clearInterval","eq","doTx","promiseTx","tx","toast","info","hash","wait","success","claimRewards","claimReward","stakeAll","balance","tokenIds","i","tokenOfOwnerByIndex","tokenId","push","stake","unstakeAll","unstake","title","as","Content","Subheader","address","value","displayType","thousandSeparator","token","fixedDecimalScale","decimalScale","suffix","parseFloat","compact","onClick","primary","description","meta","children","isMobile","useMediaPredicate","mobileBreakpoint","style","minHeight","ScrollToTopOnMount","window","scrollTo","metaDescription","defaultTitle","appName","htmlAttributes","lang","titleTemplate","undefined","name","content","property","concat","triedEager","openWalletConnectModal","useModal","open","openWalletAccountModal","accountShort","substring","length","fixed","size","inverted","Item","header","Link","to","routerPaths","main","NavLink","heroes","items","mixer","marketplace","lottery","staking","farming","position","color","appChain","sidebarOpened","setSidebarOpened","Pushable","Menu","animation","onHide","vertical","visible","Pusher","dimmed","textAlign","pointing","divided","stackable","Row","Column","width","link","contacts","faq","LinkExternal","href","projectTwitter","section","getFullYear","horizontal","projectEmail","terms","privacy","EtherscanLink","props"],"mappings":"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","file":"static/js/11.28643b75.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport {\n  Container, Header, Button, Form, Divider, Table, Label, Segment,\n} from 'semantic-ui-react';\nimport Number from 'react-number-format';\nimport { Contract, utils, BigNumber } from 'ethers';\nimport moment from 'moment';\nimport BN from 'bignumber.js';\nimport { toast } from 'react-toastify';\nimport copy from 'copy-to-clipboard';\nimport Page from '../components/Page';\nimport LinkExternal from '../components/Link/LinkExternal';\nimport EtherscanLink from '../components/Link/EtherscanLink';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as S from '../store/selectors';\nimport * as A from '../store/actions';\n\nimport {\n  FancyNftHeroesS1Address,\n  FancyNftStakingAddress,\n  FancyTokenAddress,\n  FancyTokenSupplierAddress,\n  nullAddress,\n} from '../constants';\nimport nftHeroesAbi from '../abis/FancyNftHeroesS1Abi.json';\nimport FancyNftStakingAbi from '../abis/FancyNftStakingAbi.json';\nimport FancyTokenAbi from '../abis/FancyTokenAbi.json';\nimport FancyTokenSupplierAbi from '../abis/FancyTokenSupplierAbi.json';\n\n\n\nfunction NftStakingPage() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { library, chainId, account, active } = context;\n\n  const getNftContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyNftHeroesS1Address, nftHeroesAbi, provider);\n  }\n  const getFarmContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyNftStakingAddress, FancyNftStakingAbi, provider);\n  }\n  const getTokenContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyTokenAddress, FancyTokenAbi, provider);\n  }\n  const getTokenSupplierContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyTokenSupplierAddress, FancyTokenSupplierAbi, provider);\n  }\n\n  const [supplierStartTime, setSupplierStartTime] = useState(0);\n  const [farmLastSupply, setFarmLastSupply] = useState('0');\n  const [farmRrewardRate, setFarmRrewardRate] = useState(BigNumber.from(0));\n\n  // address\n  const [owner, setOwner] = useState(nullAddress);\n  const [farmStakedNft, setFarmStakedNft] = useState('0');\n\n  // mints\n  const [balanceNft, setBalanceNft] = useState('0');\n  const [balanceToken, setBalanceToken] = useState('0');\n  const [stakedNft, setStakedNft] = useState('0');\n  const [farmRate, setFarmRate] = useState('0');\n\n  const [stakerInfo, setStakerInfo] = useState({\n    amount: BigNumber.from(0),\n    initialRewardRate: BigNumber.from(0),\n    reward: BigNumber.from(0),\n    claimedReward: BigNumber.from(0),\n  });\n\n  const [farmState, setFarmState] = useState({\n    totalStaked: BigNumber.from(0),\n    historicalRewardRate: BigNumber.from(0),\n  });\n  const [unclaimedRewards, setUnclaimedRewards] = useState('0');\n  let farmShare = '0';\n  if (stakerInfo.amount.gt('0') && farmState.totalStaked.gt('0')) {\n    farmShare = utils.formatUnits(\n      stakerInfo.amount.mul('1000000').div(farmState.totalStaked),\n      4\n    );\n  }\n\n  useEffect(() => {\n    let farmRate = '0';\n    if (stakerInfo.amount.gt(0) && farmRrewardRate.gt(0)) {\n      farmRate = farmRrewardRate\n        .mul(24 * 60 * 60)\n        .mul(stakerInfo.amount)\n        .div(farmState.totalStaked);\n    }\n    setFarmRate(utils.formatEther(farmRate.toString()));\n  }, [farmRrewardRate, farmState, stakerInfo]);\n\n  const getCurrentTokenSupply = (deltaTime, farmRrewardRate) => {\n    let tokenSupply = BigNumber.from(0);\n    if (deltaTime > 0) {\n      tokenSupply = farmRrewardRate.mul(deltaTime);\n    }\n    return tokenSupply;\n  }\n\n  // update\n  const [initDone, setInitDone] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const update = async () => {\n    if (updating) return;\n    setUpdating(true);\n    try {\n      const contractNft = getNftContract();\n      const contractToken = getTokenContract();\n      const contractFarming = getFarmContract();\n      const contractTokenSupplier = getTokenSupplierContract();\n\n      const supplierStartTime = await contractTokenSupplier.startTime();\n      setSupplierStartTime(supplierStartTime);\n      const farmRrewardRate = await contractTokenSupplier.rewardRateOf(FancyNftStakingAddress);\n      setFarmRrewardRate(farmRrewardRate);\n      let farmLastSupply = await contractTokenSupplier.lastSupply(FancyNftStakingAddress);\n      farmLastSupply = farmLastSupply.toNumber();\n      setFarmLastSupply(farmLastSupply);\n\n\n      const farmState = await contractFarming.state();\n      setFarmState(farmState);\n      const stakerInfo = await contractFarming.stakers(account);\n      setStakerInfo(stakerInfo);\n\n      const timestamp = Math.floor(Date.now() / 1000);\n      let deltaTime = 0;\n      if (timestamp > farmLastSupply)\n        deltaTime = timestamp - farmLastSupply;\n\n      const currentTokenSupply = getCurrentTokenSupply(\n        deltaTime, farmRrewardRate\n      );\n      const additionalRewardRate = currentTokenSupply\n        .shl(40)\n        .div(farmState.totalStaked);\n      const hrr = farmState.historicalRewardRate\n        .add(additionalRewardRate);\n      const unrewarded = hrr.sub(stakerInfo.initialRewardRate)\n        .mul(stakerInfo.amount)\n        .shr(40);\n      const unclaimed = stakerInfo.reward\n        .add(unrewarded)\n        .sub(stakerInfo.claimedReward);\n      setUnclaimedRewards(utils.formatEther(unclaimed));\n\n\n\n      // address\n      const owner = await contractFarming.owner();\n      setOwner(owner);\n\n      const farmStakedNft = await contractNft.balanceOf(FancyNftStakingAddress);\n      setFarmStakedNft(parseInt(farmStakedNft.toString()));\n\n      if (account) {\n        // mints\n        const balanceToken = await contractToken.balanceOf(account);\n        setBalanceToken(utils.formatEther(balanceToken));\n\n        const balanceNft = await contractNft.balanceOf(account);\n        setBalanceNft(parseInt(balanceNft.toString()));\n\n        const stakedNft = await contractFarming.balanceOf(account);\n        setStakedNft(parseInt(stakedNft.toString()));\n\n\n      } else {\n        setBalanceToken('0');\n        setBalanceNft('0');\n        setStakedNft('0');\n      }\n\n    } catch (error) { console.error(error); }\n    setInitDone(true);\n    setUpdating(false);\n  }\n\n  const [blockNumber, setBlockNumber] = useState(-1);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if (library) {\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n    }\n\n    setTime(Date.now());\n    const intervalId = setInterval(() => {\n      setTime(Date.now());\n    }, 1 * 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  useEffect(() => {\n    if (library) {\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n    }\n  }, [library]);\n\n  useEffect(() => {\n    if (stakerInfo.amount.eq(0)) return;\n    try {\n      const timestamp = Math.floor(Date.now() / 1000);\n      let deltaTime = 0;\n      if (timestamp > farmLastSupply)\n        deltaTime = timestamp - farmLastSupply;\n\n      const currentTokenSupply = getCurrentTokenSupply(\n        deltaTime, farmRrewardRate\n      );\n      const additionalRewardRate = currentTokenSupply\n        .shl(40)\n        .div(farmState.totalStaked);\n      const hrr = farmState.historicalRewardRate\n        .add(additionalRewardRate);\n      const unrewarded = hrr.sub(stakerInfo.initialRewardRate)\n        .mul(stakerInfo.amount)\n        .shr(40);\n      const unclaimed = stakerInfo.reward\n        .add(unrewarded)\n        .sub(stakerInfo.claimedReward);\n      setUnclaimedRewards(utils.formatEther(unclaimed));\n    } catch (error) { }\n  }, [time]);\n  // update end\n\n\n  const doTx = async (promiseTx) => {\n    try {\n      const tx = await promiseTx;\n      if (!tx) return;\n      toast.info('Pending tx doTx', tx.hash);\n      await tx.wait(1);\n      toast.success('Done tx doTx', tx.hash);\n    } catch (error) {\n      console.error(error);\n      toast.error('Error doTx');\n    }\n  }\n\n\n  const claimRewards = async () => {\n    const contractFarming = getFarmContract(true);\n    await doTx(contractFarming.claimReward());\n  }\n\n  const stakeAll = async () => {\n    const contractNft = getNftContract();\n    let balance = await contractNft.balanceOf(account);\n    if (balance > 200) balance = 200;\n    let tokenIds = [];\n    for (let i = 0; i < balance; i++) {\n      let tokenId = await contractNft.tokenOfOwnerByIndex(account, i);\n      tokenIds.push(tokenId);\n    }\n    const contractFarming = getFarmContract(true);\n    await doTx(contractFarming.stake(tokenIds));\n    await update();\n  }\n\n  const unstakeAll = async () => {\n    const contractFarming = getFarmContract(true);\n    let balance = stakedNft;\n    if (balance > 200) balance = 200;\n    let tokenIds = [];\n    for (let i = 0; i < balance; i++) {\n      let tokenId = await contractFarming.tokenOfOwnerByIndex(account, i);\n      tokenIds.push(tokenId);\n    }\n    await doTx(contractFarming.unstake(tokenIds));\n    await update();\n  }\n\n  return (\n    <Page title={'NFT Staking'}>\n      <Container>\n        <br />\n        <Segment>\n          <Header as='h1'>\n            <Header.Content>\n              NFT Staking\n              <Header.Subheader>\n                <div>Smart Contract: <EtherscanLink address={FancyNftStakingAddress}>{FancyNftStakingAddress}</EtherscanLink></div>\n                <div>Owner: <EtherscanLink address={owner}>{owner}</EtherscanLink></div>\n                <div>Last Block: <Number value={blockNumber}\n                  displayType='text' thousandSeparator />\n                </div>\n              </Header.Subheader>\n            </Header.Content>\n          </Header>\n        </Segment>\n\n\n        <Segment>\n          <div>Address: <EtherscanLink address={account}>{account}</EtherscanLink></div>\n          <div>Balance NFT: <EtherscanLink token={`${FancyNftHeroesS1Address}?a=${account}`}><Number value={balanceNft} displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /></EtherscanLink></div>\n          <div>Balance TOKEN: <EtherscanLink token={`${FancyTokenAddress}?a=${account}`}><Number value={balanceToken} displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /></EtherscanLink></div>\n\n          <Segment>\n            <div>Total Farm Staked NFT: <Number value={farmStakedNft} displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /></div>\n            <div>Total Farm Staked NFT Rate: <Number value={utils.formatEther(farmState.totalStaked)} displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /></div>\n            <div>Farm Reward Rate/1day: <Number value={utils.formatEther(farmRrewardRate.mul(24 * 60 * 60))} suffix=' TOKEN' displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /></div>\n          </Segment>\n\n          <Segment>\n            <div>Staked NFT: <Number value={stakedNft} displayType='text' thousandSeparator /></div>\n            <div>Staked NFT Rate: <Number value={utils.formatEther(stakerInfo.amount)} displayType='text' thousandSeparator /></div>\n            <div>My Farm Reward Rate/1day: <Number value={farmRate} suffix=' TOKEN' displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /></div>\n            <div>My Farm Share: <Number value={farmShare} suffix=' %' displayType='text' thousandSeparator /></div>\n            <div>My Total Rewards: <Number value={parseFloat(utils.formatEther(stakerInfo.reward)) + parseFloat(unclaimedRewards)} suffix=' TOKEN' displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /></div>\n            <div>My Unclaimed Rewards: <Number value={unclaimedRewards} suffix=' TOKEN' displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /> <Button compact onClick={claimRewards}>Claim</Button></div>\n          </Segment>\n        </Segment>\n\n\n        <Segment>\n          <Button primary onClick={stakeAll}>Stake All (Up to 200) (WAIT AFTER CLICK!)</Button>\n          <Button primary onClick={unstakeAll}>Unstake All (Up to 200) (WAIT AFTER CLICK!)</Button>\n        </Segment>\n\n      </Container>\n    </Page>\n  );\n};\n\nexport default hot(module)(NftStakingPage);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { useMediaPredicate } from 'react-media-hook';\nimport { mobileBreakpoint } from '../helpers/Media';\n\nimport ScrollToTopOnMount from './ScrollToTopOnMount';\nimport Seo from './Seo';\nimport HeaderDesktop from './HeaderDesktop';\nimport HeaderMobile from './HeaderMobile';\nimport Footer from './Footer';\n\n\n\nfunction Page({ title, description, meta, children }) {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <Seo\n        title={title}\n        description={description}\n        meta={meta ? meta : []}\n      />\n\n      {!isMobile && <>\n        <HeaderDesktop />\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </>}\n\n      {isMobile && <HeaderMobile>\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </HeaderMobile>}\n      <Footer />\n    </>\n  );\n};\n\nexport default hot(module)(Page);\n","export const mobileBreakpoint = '(max-width: 768px)';\n\nexport const getAdaptiveClassName = (mainClass: string, isMobile: boolean): string =>\n  isMobile ? `${mainClass} ${mainClass}-mobile` : mainClass;\n","import { useEffect } from 'react';\n\n\n\nexport default function ScrollToTopOnMount() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return null;\n}\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Helmet } from 'react-helmet';\nimport { appName } from '../constants';\n\n\n\nfunction Seo({ title, description, meta, }) {\n  const metaDescription = description;\n  const defaultTitle = appName;\n  const twitter = null;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: 'en',\n      }}\n\n      title={title}\n      defaultTitle={defaultTitle}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: twitter || '',\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n    </Helmet>\n  )\n}\n\nexport default hot(module)(Seo);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Segment, Container, Menu } from 'semantic-ui-react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\n\n\nfunction HeaderDesktop() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n  return (\n    <Segment as={'header'}>\n      <Menu fixed='top' size='large' inverted>\n        <Container>\n          <Menu.Item header as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n          <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n\n          <Menu.Item\n            position='right'\n            style={{ color: chainId === appChain ? 'green' : 'red' }}\n            onClick={(triedEager && active && account)\n              ? openWalletAccountModal\n              : openWalletConnectModal\n            }\n          >\n            {accountShort}\n          </Menu.Item>\n        </Container>\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default hot(module)(HeaderDesktop);\n","import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\nimport { Container, Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\n\n\n\nfunction HeaderMobile({ children }) {\n  const [sidebarOpened, setSidebarOpened] = useState(false);\n\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        as={Menu}\n        animation='overlay'\n        inverted\n        onHide={() => setSidebarOpened(false)}\n        vertical\n        visible={sidebarOpened}\n      >\n        <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n        <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n      </Sidebar>\n\n      <Sidebar.Pusher dimmed={sidebarOpened}>\n        <Segment\n          as={'header'}\n          inverted\n          textAlign='center'\n          vertical\n        >\n          <Menu fixed='top' size='large' pointing inverted>\n            <Container>\n              <Menu.Item onClick={() => setSidebarOpened(true)}>\n                <Icon name='sidebar' />\n              </Menu.Item>\n              <Menu.Item as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n\n              <Menu.Item\n                position='right'\n                style={{ color: chainId === appChain ? 'green' : 'red' }}\n                onClick={(triedEager && active && account)\n                  ? openWalletAccountModal\n                  : openWalletConnectModal\n                }\n              >{accountShort}</Menu.Item>\n            </Container>\n          </Menu>\n        </Segment>\n\n        {children}\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nexport default hot(module)(HeaderMobile);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Link } from 'react-router-dom';\nimport { Segment, Container, List, Grid, Header, Divider } from 'semantic-ui-react';\nimport { routerPaths } from '../router/helper';\nimport { appName, projectEmail, projectTwitter } from '../constants';\nimport LinkExternal from './Link/LinkExternal';\n\n\n\nfunction Footer() {\n  return (\n    <Segment as={'footer'} inverted vertical>\n      <Container textAlign='center'>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.heroes}>Heroes NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.items}>Items NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.mixer}>NFT Mixer</List.Item>\n                <List.Item as={Link} to={routerPaths.marketplace}>Marketplace NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.lottery}>Lottery NFT Owners</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Token Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.staking}>NFT Staking</List.Item>\n                <List.Item as={Link} to={routerPaths.farming}>Token Farming</List.Item>\n                <List.Item as={Link} to={routerPaths.contacts}>Smart Contracts</List.Item>\n                <List.Item as={Link} to={routerPaths.faq}>FAQ</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Follow Us</Header>\n              <List link inverted>\n                <List.Item as={LinkExternal} href={projectTwitter}>Twitter</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={7}>\n              <Header as='h4' inverted>Footer Header</Header>\n              <p>Extra space for a call to action inside the footer that could help re-engage users.</p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Divider inverted section />\n        <div>{appName} © {new Date().getFullYear()}.</div>\n        <List horizontal inverted divided link size='small'>\n          <List.Item as={LinkExternal} href={`mailto:${projectEmail}`}>\n            Contact Us\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.terms}>\n            Terms and Conditions\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.privacy}>\n            Privacy Policy\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  );\n};\n\nexport default hot(module)(Footer);\n","import React from 'react';\nimport LinkExternal from './LinkExternal';\nimport { EtherscanLinkProps } from './types';\nimport { appChain } from '../../constants';\n\n\n\nconst EtherscanLink: React.FC<EtherscanLinkProps> = ({ address, token, tx, children, ...props }) => {\n  let href = '';\n  switch (appChain) {\n    case 4: href = 'https://rinkeby.etherscan.io'; break;\n    case 56: href = 'https://bscscan.com'; break;\n    default: break;\n  }\n\n  if (address) {\n    href += `/address/${address}`;\n  } else if (token) {\n    href += `/token/${token}`;\n  } else if (tx) {\n    href += `/tx/${tx}`;\n  }\n\n  return (\n    <LinkExternal href={href} {...props}>\n      {children}\n    </LinkExternal>\n  );\n};\n\nexport default EtherscanLink;\n","import * as rehydrate from './rehydrate/selectors';\nimport * as ref from './ref/selectors';\n\n\n\nexport {\n  rehydrate,\n  ref,\n};\n","import * as rehydrate from './rehydrate/actions';\nimport * as ref from './ref/actions';\n\n\n\nexport {\n  rehydrate,\n  ref,\n};\n"],"sourceRoot":""}