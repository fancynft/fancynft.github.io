{"version":3,"sources":["pages/NftMixerPage.js","components/Page.js","helpers/Media.ts","components/ScrollToTopOnMount.js","components/Seo.js","components/HeaderDesktop.js","components/HeaderMobile.js","components/Footer.js","components/Link/EtherscanLink.tsx","store/selectors.js","store/actions.js"],"names":["getColor","itemTokenId","getColorId","getColorCell","value","filterTokensForCell","list","cellId","newList","key","text","i","push","hot","module","useEagerConnect","context","useActiveWeb3React","library","account","chainId","getNft1Contract","active","withSigner","provider","getSigner","Contract","FancyNftHeroesS1Address","nftHeroesAbi","getNft2Contract","FancyNftCubeFacetsAddress","FancyNftCubeFacetsAbi","getMixerContract","FancyNftCubeMixerAddress","FancyNftCubeMixerAbi","useState","nullAddress","owner","setOwner","balanceNft1","setBalanceNft1","balanceNft2","setBalanceNft2","tokenIds1","setTokenIds1","tokenIds2","setTokenIds2","setInitDone","updating","setUpdating","update","a","contractNft1","contractNft2","contractMixer","balanceOf","toNumber","tokenOfOwnerByIndex","tokenId","console","error","blockNumber","setBlockNumber","time","setTime","useEffect","on","Date","now","intervalId","setInterval","clearInterval","heroesTokenId","setHeroesTokenId","doTx","promiseTx","tx","toast","info","hash","wait","success","cubeLoaded","setCubeLoaded","cubeCells","setCubeCells","onLoadCube","getCubeCells","onSelectCell","e","name","log","mix","title","as","Content","Subheader","address","displayType","thousandSeparator","token","fixedDecimalScale","decimalScale","join","Input","label","type","required","onChange","primary","onClick","inverted","color","placeholder","options","description","meta","children","isMobile","useMediaPredicate","mobileBreakpoint","style","minHeight","ScrollToTopOnMount","window","scrollTo","metaDescription","defaultTitle","appName","htmlAttributes","lang","titleTemplate","undefined","content","property","concat","triedEager","openWalletConnectModal","useModal","open","openWalletAccountModal","accountShort","substring","length","fixed","size","Item","header","Link","to","routerPaths","main","NavLink","heroes","items","mixer","marketplace","lottery","staking","farming","position","appChain","sidebarOpened","setSidebarOpened","Pushable","Menu","animation","onHide","vertical","visible","Pusher","dimmed","textAlign","pointing","divided","stackable","Row","Column","width","link","contacts","faq","LinkExternal","href","projectTwitter","section","getFullYear","horizontal","projectEmail","terms","privacy","EtherscanLink","props"],"mappings":"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","file":"static/js/13.c695b317.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport {\n  Container, Header, Button, Form, Divider, List, Select, Segment,\n} from 'semantic-ui-react';\nimport Number from 'react-number-format';\nimport { Contract, utils, BigNumber } from 'ethers';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport Page from '../components/Page';\nimport LinkExternal from '../components/Link/LinkExternal';\nimport EtherscanLink from '../components/Link/EtherscanLink';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as S from '../store/selectors';\nimport * as A from '../store/actions';\n\nimport {\n  FancyNftHeroesS1Address,\n  FancyNftCubeFacetsAddress,\n  FancyNftCubeMixerAddress,\n  nullAddress,\n} from '../constants';\nimport nftHeroesAbi from '../abis/FancyNftHeroesS1Abi.json';\nimport FancyNftCubeFacetsAbi from '../abis/FancyNftCubeFacetsAbi.json';\nimport FancyNftCubeMixerAbi from '../abis/FancyNftCubeMixerAbi.json';\n\n\nconst totalColors = 4; // values: 1-4\nconst totalFacets = 3; // values: 0-2\nconst totalPlaces = 9; // values: 0-8\nconst totalCells = 27; // values: 0-26\n\n\nfunction getCellId(itemTokenId) {\n  return itemTokenId % totalCells;\n}\n\nfunction getPlaceId(itemTokenId) {\n  return itemTokenId % totalPlaces;\n}\n\nfunction getFacetId(itemTokenId) {\n  if (itemTokenId % totalCells < totalPlaces) return 0;\n  else if (itemTokenId % totalCells < totalPlaces * 2) return 1;\n  else return 2;\n}\n\nfunction getColorId(itemTokenId) {\n  return itemTokenId % totalColors + 1;\n}\n\nfunction getColor(itemTokenId) {\n  switch (getColorId(itemTokenId)) {\n    case 1: return 'red';\n    case 2: return 'green';\n    case 3: return 'blue';\n    case 4: return 'purple';\n    case 0:\n    default: return 'grey';\n  }\n}\nfunction getColorCell(value) {\n  switch (value) {\n    case 1: return 'red';\n    case 2: return 'green';\n    case 3: return 'blue';\n    case 4: return 'purple';\n    case 0:\n    default: return 'grey';\n  }\n}\n\nfunction filterTokensForCell(list, cellId) {\n  const newList = [{ key: 'Select', value: 'Select', text: 'Select' }];\n  for (let i in list) {\n    if (getCellId(list[i]) === cellId) {\n      newList.push(\n        { key: list[i], value: list[i], text: `${list[i]} (${getColor(list[i])})` },\n      );\n    }\n  }\n  return newList;\n}\n\nfunction NftMixerPage() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { library, chainId, account, active } = context;\n\n  const getNft1Contract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyNftHeroesS1Address, nftHeroesAbi, provider);\n  }\n  const getNft2Contract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyNftCubeFacetsAddress, FancyNftCubeFacetsAbi, provider);\n  }\n  const getMixerContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyNftCubeMixerAddress, FancyNftCubeMixerAbi, provider);\n  }\n\n\n  const [owner, setOwner] = useState(nullAddress);\n\n\n  const [balanceNft1, setBalanceNft1] = useState(0);\n  const [balanceNft2, setBalanceNft2] = useState(0);\n  const [tokenIds1, setTokenIds1] = useState([]);\n  const [tokenIds2, setTokenIds2] = useState([]);\n\n\n  // update\n  const [initDone, setInitDone] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const update = async () => {\n    if (updating) return;\n    setUpdating(true);\n    try {\n      const contractNft1 = getNft1Contract();\n      const contractNft2 = getNft2Contract();\n      const contractMixer = getMixerContract();\n\n\n      // address\n      const owner = await contractMixer.owner();\n      setOwner(owner);\n\n      if (account) {\n        let balanceNft2 = await contractNft2.balanceOf(account);\n        balanceNft2 = balanceNft2.toNumber();\n        setBalanceNft2(balanceNft2);\n        let balanceNft1 = await contractNft1.balanceOf(account);\n        balanceNft1 = balanceNft1.toNumber();\n        setBalanceNft1(balanceNft1);\n\n        const tokenIds2 = [];\n        for (let i = 0; i < balanceNft2; i++) {\n          let tokenId = await contractNft2.tokenOfOwnerByIndex(account, i);\n          tokenIds2.push(tokenId);\n        }\n        setTokenIds2(tokenIds2);\n        const tokenIds1 = [];\n        for (let i = 0; i < balanceNft1; i++) {\n          let tokenId = await contractNft1.tokenOfOwnerByIndex(account, i);\n          tokenIds1.push(tokenId);\n        }\n        setTokenIds1(tokenIds1);\n\n\n      } else {\n        setBalanceNft1(0);\n        setBalanceNft2(0);\n        setTokenIds1([]);\n        setTokenIds2([]);\n      }\n\n    } catch (error) { console.error(error); }\n    setInitDone(true);\n    setUpdating(false);\n  }\n\n  const [blockNumber, setBlockNumber] = useState(-1);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if (library) {\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n    }\n\n    setTime(Date.now());\n    const intervalId = setInterval(() => {\n      setTime(Date.now());\n    }, 1 * 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  useEffect(() => {\n    if (library) {\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n    }\n  }, [library]);\n\n  useEffect(() => {\n  }, [time]);\n\n\n\n  const [heroesTokenId, setHeroesTokenId] = useState('');\n  const onChangeValue = (e, { name, value }) => {\n    switch (name) {\n      case 'heroesTokenId': setHeroesTokenId(value); break;\n      default: break;\n    }\n  }\n\n\n  const doTx = async (promiseTx) => {\n    try {\n      const tx = await promiseTx;\n      if (!tx) return;\n      toast.info('Pending tx doTx', tx.hash);\n      await tx.wait(1);\n      toast.success('Done tx doTx', tx.hash);\n    } catch (error) {\n      console.error(error);\n      toast.error('Error doTx');\n    }\n  }\n\n  const [cubeLoaded, setCubeLoaded] = useState(false);\n  const [cubeCells, setCubeCells] = useState([\n    0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0\n  ]);\n  const onLoadCube = async () => {\n    const contractMixer = getMixerContract();\n    const cubeCells = await contractMixer.getCubeCells(heroesTokenId);\n    setCubeCells(cubeCells);\n    setCubeLoaded(true);\n  }\n\n  const onSelectCell = async (e, { name, value }) => {\n    console.log(name, value);\n    if (value === 'Select') return;\n    const contractMixer = getMixerContract(true);\n    await doTx(contractMixer.mix(heroesTokenId, value));\n    await onLoadCube();\n  }\n\n  //mix(uint256 heroTokenId, uint256 itemTokenId)\n\n  return (\n    <Page title={'NFT Mixer'}>\n      <Container>\n        <br />\n        <Segment>\n          <Header as='h1'>\n            <Header.Content>\n              NFT Mixer\n              <Header.Subheader>\n                <div>Smart Contract: <EtherscanLink address={FancyNftCubeMixerAddress}>{FancyNftCubeMixerAddress}</EtherscanLink></div>\n                <div>Owner: <EtherscanLink address={owner}>{owner}</EtherscanLink></div>\n                <div>Last Block: <Number value={blockNumber} displayType='text' thousandSeparator /></div>\n              </Header.Subheader>\n            </Header.Content>\n          </Header>\n        </Segment>\n\n        <Segment>\n          <div>Address: <EtherscanLink address={account}>{account}</EtherscanLink></div>\n          <div>Balance NFT (Heroes): <EtherscanLink token={`${FancyNftHeroesS1Address}?a=${account}`}><Number value={balanceNft1} displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /></EtherscanLink></div>\n          <div>tokenIds: {tokenIds1.join(', ')}</div>\n          <div>Balance NFT (Items): <EtherscanLink token={`${FancyNftCubeFacetsAddress}?a=${account}`}><Number value={balanceNft2} displayType='text' thousandSeparator fixedDecimalScale decimalScale={0} /></EtherscanLink></div>\n          <div>tokenIds: {tokenIds2.join(', ')}</div>\n        </Segment>\n\n\n\n        {!cubeLoaded && <Segment>\n          <Header>Select Heroes tokenId</Header>\n          <Form>\n            <Form.Input\n              name='heroesTokenId' label={'TokenId'} type='number' required\n              value={heroesTokenId} onChange={onChangeValue}\n            />\n            <Button primary onClick={onLoadCube}>Load Cube</Button>\n          </Form>\n        </Segment>}\n\n\n        {cubeLoaded && <Segment>\n          <Header>Cube #{heroesTokenId} Cells:</Header>\n          {cubeCells.join(', ')}\n\n          <Segment>\n            <Header>Facet 1</Header>\n            <Segment inverted color={getColorCell(cubeCells[0])}>\n              <Header>Cell 1</Header>\n              {cubeCells[0] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 0)}\n                name='cell0'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[1])}>\n              <Header>Cell 2</Header>\n              {cubeCells[1] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 1)}\n                name='cell1'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[2])}>\n              <Header>Cell 3</Header>\n              {cubeCells[2] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 2)}\n                name='cell2'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[3])}>\n              <Header>Cell 4</Header>\n              {cubeCells[3] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 3)}\n                name='cell3'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[4])}>\n              <Header>Cell 5</Header>\n              {cubeCells[4] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 4)}\n                name='cell4'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[5])}>\n              <Header>Cell 6</Header>\n              {cubeCells[5] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 5)}\n                name='cell5'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[6])}>\n              <Header>Cell 7</Header>\n              {cubeCells[6] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 6)}\n                name='cell6'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[7])}>\n              <Header>Cell 8</Header>\n              {cubeCells[7] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 7)}\n                name='cell7'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[8])}>\n              <Header>Cell 9</Header>\n              {cubeCells[8] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 8)}\n                name='cell8'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n          </Segment>\n\n\n          <Segment>\n            <Header>Facet 2</Header>\n            <Segment inverted color={getColorCell(cubeCells[9])}>\n              <Header>Cell 10</Header>\n              {cubeCells[9] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 9)}\n                name='cell9'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[10])}>\n              <Header>Cell 11</Header>\n              {cubeCells[10] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 10)}\n                name='cell10'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[11])}>\n              <Header>Cell 12</Header>\n              {cubeCells[11] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 11)}\n                name='cell11'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[12])}>\n              <Header>Cell 13</Header>\n              {cubeCells[12] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 12)}\n                name='cell12'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[13])}>\n              <Header>Cell 14</Header>\n              {cubeCells[13] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 13)}\n                name='cell13'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[14])}>\n              <Header>Cell 15</Header>\n              {cubeCells[14] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 14)}\n                name='cell14'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[15])}>\n              <Header>Cell 16</Header>\n              {cubeCells[15] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 15)}\n                name='cell15'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[16])}>\n              <Header>Cell 17</Header>\n              {cubeCells[16] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 16)}\n                name='cell16'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[17])}>\n              <Header>Cell 18</Header>\n              {cubeCells[17] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 17)}\n                name='cell17'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n          </Segment>\n\n\n          <Segment>\n            <Header>Facet 3</Header>\n            <Segment inverted color={getColorCell(cubeCells[18])}>\n              <Header>Cell 19</Header>\n              {cubeCells[18] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 18)}\n                name='cell18'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[19])}>\n              <Header>Cell 20</Header>\n              {cubeCells[19] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 19)}\n                name='cell19'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[20])}>\n              <Header>Cell 21</Header>\n              {cubeCells[20] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 20)}\n                name='cell20'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[21])}>\n              <Header>Cell 22</Header>\n              {cubeCells[21] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 21)}\n                name='cell21'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[22])}>\n              <Header>Cell 23</Header>\n              {cubeCells[22] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 22)}\n                name='cell22'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[23])}>\n              <Header>Cell 24</Header>\n              {cubeCells[23] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 23)}\n                name='cell23'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[24])}>\n              <Header>Cell 25</Header>\n              {cubeCells[24] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 24)}\n                name='cell24'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[25])}>\n              <Header>Cell 26</Header>\n              {cubeCells[25] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 25)}\n                name='cell25'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n            <Segment inverted color={getColorCell(cubeCells[26])}>\n              <Header>Cell 27</Header>\n              {cubeCells[26] === 0 && <Select\n                placeholder='Select' options={filterTokensForCell(tokenIds2, 26)}\n                name='cell26'\n                onChange={onSelectCell}\n              />}\n            </Segment>\n          </Segment>\n\n        </Segment>}\n\n      </Container>\n    </Page>\n  );\n};\n\nexport default hot(module)(NftMixerPage);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { useMediaPredicate } from 'react-media-hook';\nimport { mobileBreakpoint } from '../helpers/Media';\n\nimport ScrollToTopOnMount from './ScrollToTopOnMount';\nimport Seo from './Seo';\nimport HeaderDesktop from './HeaderDesktop';\nimport HeaderMobile from './HeaderMobile';\nimport Footer from './Footer';\n\n\n\nfunction Page({ title, description, meta, children }) {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <Seo\n        title={title}\n        description={description}\n        meta={meta ? meta : []}\n      />\n\n      {!isMobile && <>\n        <HeaderDesktop />\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </>}\n\n      {isMobile && <HeaderMobile>\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </HeaderMobile>}\n      <Footer />\n    </>\n  );\n};\n\nexport default hot(module)(Page);\n","export const mobileBreakpoint = '(max-width: 768px)';\n\nexport const getAdaptiveClassName = (mainClass: string, isMobile: boolean): string =>\n  isMobile ? `${mainClass} ${mainClass}-mobile` : mainClass;\n","import { useEffect } from 'react';\n\n\n\nexport default function ScrollToTopOnMount() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return null;\n}\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Helmet } from 'react-helmet';\nimport { appName } from '../constants';\n\n\n\nfunction Seo({ title, description, meta, }) {\n  const metaDescription = description;\n  const defaultTitle = appName;\n  const twitter = null;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: 'en',\n      }}\n\n      title={title}\n      defaultTitle={defaultTitle}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: twitter || '',\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n    </Helmet>\n  )\n}\n\nexport default hot(module)(Seo);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Segment, Container, Menu } from 'semantic-ui-react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\n\n\nfunction HeaderDesktop() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n  return (\n    <Segment as={'header'}>\n      <Menu fixed='top' size='large' inverted>\n        <Container>\n          <Menu.Item header as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n          <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n\n          <Menu.Item\n            position='right'\n            style={{ color: chainId === appChain ? 'green' : 'red' }}\n            onClick={(triedEager && active && account)\n              ? openWalletAccountModal\n              : openWalletConnectModal\n            }\n          >\n            {accountShort}\n          </Menu.Item>\n        </Container>\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default hot(module)(HeaderDesktop);\n","import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\nimport { Container, Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\n\n\n\nfunction HeaderMobile({ children }) {\n  const [sidebarOpened, setSidebarOpened] = useState(false);\n\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        as={Menu}\n        animation='overlay'\n        inverted\n        onHide={() => setSidebarOpened(false)}\n        vertical\n        visible={sidebarOpened}\n      >\n        <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n        <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n      </Sidebar>\n\n      <Sidebar.Pusher dimmed={sidebarOpened}>\n        <Segment\n          as={'header'}\n          inverted\n          textAlign='center'\n          vertical\n        >\n          <Menu fixed='top' size='large' pointing inverted>\n            <Container>\n              <Menu.Item onClick={() => setSidebarOpened(true)}>\n                <Icon name='sidebar' />\n              </Menu.Item>\n              <Menu.Item as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n\n              <Menu.Item\n                position='right'\n                style={{ color: chainId === appChain ? 'green' : 'red' }}\n                onClick={(triedEager && active && account)\n                  ? openWalletAccountModal\n                  : openWalletConnectModal\n                }\n              >{accountShort}</Menu.Item>\n            </Container>\n          </Menu>\n        </Segment>\n\n        {children}\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nexport default hot(module)(HeaderMobile);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Link } from 'react-router-dom';\nimport { Segment, Container, List, Grid, Header, Divider } from 'semantic-ui-react';\nimport { routerPaths } from '../router/helper';\nimport { appName, projectEmail, projectTwitter } from '../constants';\nimport LinkExternal from './Link/LinkExternal';\n\n\n\nfunction Footer() {\n  return (\n    <Segment as={'footer'} inverted vertical>\n      <Container textAlign='center'>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.heroes}>Heroes NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.items}>Items NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.mixer}>NFT Mixer</List.Item>\n                <List.Item as={Link} to={routerPaths.marketplace}>Marketplace NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.lottery}>Lottery NFT Owners</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Token Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.staking}>NFT Staking</List.Item>\n                <List.Item as={Link} to={routerPaths.farming}>Token Farming</List.Item>\n                <List.Item as={Link} to={routerPaths.contacts}>Smart Contracts</List.Item>\n                <List.Item as={Link} to={routerPaths.faq}>FAQ</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Follow Us</Header>\n              <List link inverted>\n                <List.Item as={LinkExternal} href={projectTwitter}>Twitter</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={7}>\n              <Header as='h4' inverted>Footer Header</Header>\n              <p>Extra space for a call to action inside the footer that could help re-engage users.</p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Divider inverted section />\n        <div>{appName} © {new Date().getFullYear()}.</div>\n        <List horizontal inverted divided link size='small'>\n          <List.Item as={LinkExternal} href={`mailto:${projectEmail}`}>\n            Contact Us\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.terms}>\n            Terms and Conditions\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.privacy}>\n            Privacy Policy\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  );\n};\n\nexport default hot(module)(Footer);\n","import React from 'react';\nimport LinkExternal from './LinkExternal';\nimport { EtherscanLinkProps } from './types';\nimport { appChain } from '../../constants';\n\n\n\nconst EtherscanLink: React.FC<EtherscanLinkProps> = ({ address, token, tx, children, ...props }) => {\n  let href = '';\n  switch (appChain) {\n    case 4: href = 'https://rinkeby.etherscan.io'; break;\n    case 56: href = 'https://bscscan.com'; break;\n    default: break;\n  }\n\n  if (address) {\n    href += `/address/${address}`;\n  } else if (token) {\n    href += `/token/${token}`;\n  } else if (tx) {\n    href += `/tx/${tx}`;\n  }\n\n  return (\n    <LinkExternal href={href} {...props}>\n      {children}\n    </LinkExternal>\n  );\n};\n\nexport default EtherscanLink;\n","import * as rehydrate from './rehydrate/selectors';\nimport * as ref from './ref/selectors';\n\n\n\nexport {\n  rehydrate,\n  ref,\n};\n","import * as rehydrate from './rehydrate/actions';\nimport * as ref from './ref/actions';\n\n\n\nexport {\n  rehydrate,\n  ref,\n};\n"],"sourceRoot":""}