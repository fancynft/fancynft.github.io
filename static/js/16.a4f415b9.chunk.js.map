{"version":3,"sources":["pages/LotteryPage.js","components/Page.js","helpers/Media.ts","components/ScrollToTopOnMount.js","components/Seo.js","components/HeaderDesktop.js","components/HeaderMobile.js","components/Footer.js","components/Link/EtherscanLink.tsx"],"names":["hot","module","useEagerConnect","context","useActiveWeb3React","library","account","chainId","getContract","active","withSigner","provider","getSigner","Contract","LotteryPoolAddress","LotteryPoolAbi","useState","nullAddress","owner","setOwner","lotteryPool","setLotteryPool","lotteryIsActivated","setLotteryIsActivated","nextLotteryNumber","setNextLotteryNumber","lotteryInterval","setNextLotteryInterval","nextLotteryTime","setNextLotteryTime","lotteryMaxAmount","setNextLotteryMaxAmount","nextLotteryAmount","setNextLotteryAmount","won","setWon","wonTotal","setWonTotal","lotteryWinners","setLotteryWinners","setSharesTotal","shares","setShares","logs","setLogs","setInitDone","updating","setUpdating","update","a","contract","getBalance","utils","formatEther","sharesTotal","toNumber","i","share","push","console","error","blockNumber","setBlockNumber","time","setTime","useEffect","on","queryFilter","then","data","Date","now","intervalId","setInterval","clearInterval","length","doTx","promiseTx","tx","toast","info","hash","wait","success","runLottery","estimateGas","startLottery","estimation","gasLimit","mul","div","title","as","Content","Subheader","address","value","displayType","thousandSeparator","suffix","join","moment","fromNow","primary","onClick","map","item","index","amount","args","tokenId","toString","tokenIdLink","FancyNftHeroesS1Address","Item","lottery","place","token","substring","transactionHash","description","meta","children","isMobile","useMediaPredicate","mobileBreakpoint","style","minHeight","ScrollToTopOnMount","window","scrollTo","metaDescription","defaultTitle","appName","htmlAttributes","lang","titleTemplate","undefined","name","content","property","concat","triedEager","openWalletConnectModal","useModal","open","openWalletAccountModal","accountShort","fixed","size","inverted","header","Link","to","routerPaths","main","NavLink","heroes","items","mixer","marketplace","staking","farming","position","color","appChain","sidebarOpened","setSidebarOpened","Pushable","Menu","animation","onHide","vertical","visible","Pusher","dimmed","textAlign","pointing","divided","stackable","Row","Column","width","link","contacts","faq","LinkExternal","href","projectTwitter","section","getFullYear","horizontal","projectEmail","terms","privacy","EtherscanLink","props"],"mappings":"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","file":"static/js/16.a4f415b9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport {\n  Container, Header, Button, Segment, List,\n} from 'semantic-ui-react';\nimport Number from 'react-number-format';\nimport { Contract, utils, ethers } from 'ethers';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport Page from '../components/Page';\nimport EtherscanLink from '../components/Link/EtherscanLink';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\nimport {\n  FancyNftHeroesS1Address,\n  LotteryPoolAddress,\n  nullAddress,\n} from '../constants';\nimport LotteryPoolAbi from '../abis/LotteryPoolAbi.json';\n\n\n\nfunction LotteryPage() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { library, chainId, account, active } = context;\n\n  const getContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(LotteryPoolAddress, LotteryPoolAbi, provider);\n  }\n  // address\n  const [owner, setOwner] = useState(nullAddress);\n  const [lotteryPool, setLotteryPool] = useState('0');\n  const [lotteryIsActivated, setLotteryIsActivated] = useState(false);\n  const [nextLotteryNumber, setNextLotteryNumber] = useState(0);\n  const [lotteryInterval, setNextLotteryInterval] = useState(0);\n  const [nextLotteryTime, setNextLotteryTime] = useState(0);\n  const [lotteryMaxAmount, setNextLotteryMaxAmount] = useState('0');\n  const [nextLotteryAmount, setNextLotteryAmount] = useState('0');\n  const [won, setWon] = useState('0');\n  const [wonTotal, setWonTotal] = useState('0');\n  const [lotteryWinners, setLotteryWinners] = useState('0');\n  const [sharesTotal, setSharesTotal] = useState('0');\n  const [shares, setShares] = useState([]);\n\n  const [logs, setLogs] = useState([]);\n\n  // update\n  const [initDone, setInitDone] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const update = async () => {\n    if (updating) return;\n    setUpdating(true);\n    try {\n      const contract = getContract();\n\n      // address\n      const owner = await contract.owner();\n      setOwner(owner);\n\n      let lotteryPool = await library.getBalance(LotteryPoolAddress);\n      lotteryPool = utils.formatEther(lotteryPool);\n      setLotteryPool(lotteryPool);\n      let lotteryIsActivated = await contract.lotteryIsActivated();\n      setLotteryIsActivated(lotteryIsActivated);\n      let nextLotteryNumber = await contract.nextLotteryNumber();\n      setNextLotteryNumber(nextLotteryNumber);\n      let lotteryInterval = await contract.lotteryInterval();\n      setNextLotteryInterval(lotteryInterval);\n      let nextLotteryTime = await contract.nextLotteryTime();\n      setNextLotteryTime(nextLotteryTime);\n      let lotteryMaxAmount = await contract.lotteryMaxAmount();\n      setNextLotteryMaxAmount(utils.formatEther(lotteryMaxAmount));\n      let nextLotteryAmount = await contract.nextLotteryAmount();\n      setNextLotteryAmount(utils.formatEther(nextLotteryAmount));\n\n      let wonTotal = await contract.wonTotal();\n      setWonTotal(utils.formatEther(wonTotal));\n\n      let sharesTotal = await contract.sharesTotal();\n      setSharesTotal(utils.formatEther(sharesTotal));\n      let lotteryWinners = await contract.lotteryWinners();\n      setLotteryWinners(lotteryWinners.toNumber());\n      const shares = [];\n      for (let i = 0; i < lotteryWinners; i++) {\n        const share = await contract.shares(i);\n        shares.push(share.toNumber());\n      }\n      setShares(shares);\n\n      if (account) {\n        let won = await contract.won(account);\n        setWon(utils.formatEther(won));\n      } else {\n        setWon('0');\n      }\n\n    } catch (error) { console.error(error); }\n    setInitDone(true);\n    setUpdating(false);\n  }\n\n  const [blockNumber, setBlockNumber] = useState(-1);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if (library) {\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n      const contract = getContract();\n      contract.queryFilter('Winner').then((data) => {\n        setLogs(data);\n      });\n    }\n\n    setTime(Date.now());\n    const intervalId = setInterval(() => {\n      setTime(Date.now());\n    }, 1 * 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  useEffect(() => {\n    if (library) {\n      if (logs.length === 0) {\n        const contract = getContract();\n        contract.queryFilter('Winner').then((data) => {\n          setLogs(data);\n        });\n      }\n\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n    }\n  }, [library]);\n\n  useEffect(() => {\n  }, [time]);\n  // update end\n\n\n  // checks\n  const isOwner = () => {\n    if (account === owner) {\n      return true;\n    }\n    return false;\n  }\n  const onlyOwner = () => {\n    if (!isOwner()) {\n      toast.error('Not Owner');\n      throw new Error('Not Owner');\n    }\n  }\n  // checks end\n\n\n  const doTx = async (promiseTx) => {\n    try {\n      const tx = await promiseTx;\n      if (!tx) return;\n      toast.info('Pending tx doTx', tx.hash);\n      await tx.wait(1);\n      toast.success('Done tx doTx', tx.hash);\n    } catch (error) {\n      console.error(error);\n      toast.error('Error doTx');\n    }\n  }\n\n  const runLottery = async () => {\n    const contract = getContract(true);\n    const estimation = await contract.estimateGas.startLottery();\n    await doTx(contract.startLottery({ gasLimit: estimation.mul(120).div(100) }));\n  }\n  //setLotteryMaxAmount\n\n\n  return (\n    <Page title={'Lottery'}>\n      <Container>\n        <br />\n        <Segment>\n          <Header as='h1'>\n            <Header.Content>\n              Lottery\n              <Header.Subheader>\n                <div>Smart Contract: <EtherscanLink address={LotteryPoolAddress}>{LotteryPoolAddress}</EtherscanLink></div>\n                <div>Owner: <EtherscanLink address={owner}>{owner}</EtherscanLink></div>\n                <div>Last Block: <Number value={blockNumber}\n                  displayType='text' thousandSeparator />\n                </div>\n              </Header.Subheader>\n            </Header.Content>\n          </Header>\n        </Segment>\n\n        <Segment>\n          <div>Status: {lotteryIsActivated ? 'Is Active' : 'Not Active'}</div>\n          <div>Pool: <EtherscanLink address={LotteryPoolAddress}><Number value={lotteryPool} suffix=' BNB' displayType='text' thousandSeparator /></EtherscanLink></div>\n          <div>Won Total: <Number value={wonTotal} suffix=' BNB' displayType='text' thousandSeparator /></div>\n          <div>Max Lottery Amount: <Number value={lotteryMaxAmount} suffix=' BNB' displayType='text' thousandSeparator /></div>\n          <div>Winners: {lotteryWinners}</div>\n          <div>Winners Shares: ({shares.join('%, ')}%)</div>\n          <div>Interval: {lotteryInterval} seconds</div>\n          <div>Next Number: {nextLotteryNumber}</div>\n          <div>Next Time: {nextLotteryTime} ({moment(nextLotteryTime, 'X').fromNow()})</div>\n          <div>Next Amount: <Number value={nextLotteryAmount} suffix=' BNB' displayType='text' thousandSeparator /></div>\n        </Segment>\n\n        <Segment>\n          <div>Address: <EtherscanLink address={account}>{account}</EtherscanLink></div>\n          <div>Won Total: <Number value={won} suffix=' BNB' displayType='text' thousandSeparator /></div>\n\n          <Button primary onClick={runLottery}>Run Lottery</Button>\n        </Segment>\n\n\n        <Segment>\n          <div>Winners:</div>\n          <List>\n            {logs.map((item, index) => {\n              let amount = utils.formatEther(item.args.amount);\n              let tokenId = item.args.tokenId.toString();\n              let tokenIdLink = `${FancyNftHeroesS1Address}?a=${tokenId}#inventory`;\n              return (<List.Item key={index}>\n                <Segment>\n                  <div>\n                    Lottery: {item.args.lottery.toString()}{' '}\n                    Place: {item.args.place.toString()}{' '}\n                    Amount: <Number value={amount} suffix=' BNB' displayType='text' thousandSeparator />{' '}\n                  </div>\n                  <div>\n                    Winner tokenId: <EtherscanLink token={tokenIdLink}>{tokenId}</EtherscanLink>{' '}\n                    Winner Address: <EtherscanLink address={item.args.account}>{item.args.account.substring(0, 6)}</EtherscanLink>{' '}\n                  </div>\n\n                  <div>\n                    BlockNumber: {item.blockNumber},{' '}\n                    TX: <EtherscanLink tx={item.transactionHash}>{item.transactionHash.substring(0, 6)}</EtherscanLink>\n                  </div>\n                </Segment>\n              </List.Item>);\n            })}\n          </List>\n        </Segment>\n      </Container>\n    </Page>\n  );\n};\n\nexport default hot(module)(LotteryPage);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { useMediaPredicate } from 'react-media-hook';\nimport { mobileBreakpoint } from '../helpers/Media';\n\nimport ScrollToTopOnMount from './ScrollToTopOnMount';\nimport Seo from './Seo';\nimport HeaderDesktop from './HeaderDesktop';\nimport HeaderMobile from './HeaderMobile';\nimport Footer from './Footer';\n\n\n\nfunction Page({ title, description, meta, children }) {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <Seo\n        title={title}\n        description={description}\n        meta={meta ? meta : []}\n      />\n\n      {!isMobile && <>\n        <HeaderDesktop />\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </>}\n\n      {isMobile && <HeaderMobile>\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </HeaderMobile>}\n      <Footer />\n    </>\n  );\n};\n\nexport default hot(module)(Page);\n","export const mobileBreakpoint = '(max-width: 768px)';\n\nexport const getAdaptiveClassName = (mainClass: string, isMobile: boolean): string =>\n  isMobile ? `${mainClass} ${mainClass}-mobile` : mainClass;\n","import { useEffect } from 'react';\n\n\n\nexport default function ScrollToTopOnMount() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return null;\n}\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Helmet } from 'react-helmet';\nimport { appName } from '../constants';\n\n\n\nfunction Seo({ title, description, meta, }) {\n  const metaDescription = description;\n  const defaultTitle = appName;\n  const twitter = null;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: 'en',\n      }}\n\n      title={title}\n      defaultTitle={defaultTitle}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: twitter || '',\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n    </Helmet>\n  )\n}\n\nexport default hot(module)(Seo);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Segment, Container, Menu } from 'semantic-ui-react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\n\n\nfunction HeaderDesktop() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n  return (\n    <Segment as={'header'}>\n      <Menu fixed='top' size='large' inverted>\n        <Container>\n          <Menu.Item header as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n          <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n\n          <Menu.Item\n            position='right'\n            style={{ color: chainId === appChain ? 'green' : 'red' }}\n            onClick={(triedEager && active && account)\n              ? openWalletAccountModal\n              : openWalletConnectModal\n            }\n          >\n            {accountShort}\n          </Menu.Item>\n        </Container>\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default hot(module)(HeaderDesktop);\n","import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\nimport { Container, Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\n\n\n\nfunction HeaderMobile({ children }) {\n  const [sidebarOpened, setSidebarOpened] = useState(false);\n\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        as={Menu}\n        animation='overlay'\n        inverted\n        onHide={() => setSidebarOpened(false)}\n        vertical\n        visible={sidebarOpened}\n      >\n        <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n        <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n      </Sidebar>\n\n      <Sidebar.Pusher dimmed={sidebarOpened}>\n        <Segment\n          as={'header'}\n          inverted\n          textAlign='center'\n          vertical\n        >\n          <Menu fixed='top' size='large' pointing inverted>\n            <Container>\n              <Menu.Item onClick={() => setSidebarOpened(true)}>\n                <Icon name='sidebar' />\n              </Menu.Item>\n              <Menu.Item as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n\n              <Menu.Item\n                position='right'\n                style={{ color: chainId === appChain ? 'green' : 'red' }}\n                onClick={(triedEager && active && account)\n                  ? openWalletAccountModal\n                  : openWalletConnectModal\n                }\n              >{accountShort}</Menu.Item>\n            </Container>\n          </Menu>\n        </Segment>\n\n        {children}\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nexport default hot(module)(HeaderMobile);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Link } from 'react-router-dom';\nimport { Segment, Container, List, Grid, Header, Divider } from 'semantic-ui-react';\nimport { routerPaths } from '../router/helper';\nimport { appName, projectEmail, projectTwitter } from '../constants';\nimport LinkExternal from './Link/LinkExternal';\n\n\n\nfunction Footer() {\n  return (\n    <Segment as={'footer'} inverted vertical>\n      <Container textAlign='center'>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.heroes}>Heroes NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.items}>Items NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.mixer}>NFT Mixer</List.Item>\n                <List.Item as={Link} to={routerPaths.marketplace}>Marketplace NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.lottery}>Lottery NFT Owners</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Token Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.staking}>NFT Staking</List.Item>\n                <List.Item as={Link} to={routerPaths.farming}>Token Farming</List.Item>\n                <List.Item as={Link} to={routerPaths.contacts}>Smart Contracts</List.Item>\n                <List.Item as={Link} to={routerPaths.faq}>FAQ</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Follow Us</Header>\n              <List link inverted>\n                <List.Item as={LinkExternal} href={projectTwitter}>Twitter</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={7}>\n              <Header as='h4' inverted>Footer Header</Header>\n              <p>Extra space for a call to action inside the footer that could help re-engage users.</p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Divider inverted section />\n        <div>{appName} © {new Date().getFullYear()}.</div>\n        <List horizontal inverted divided link size='small'>\n          <List.Item as={LinkExternal} href={`mailto:${projectEmail}`}>\n            Contact Us\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.terms}>\n            Terms and Conditions\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.privacy}>\n            Privacy Policy\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  );\n};\n\nexport default hot(module)(Footer);\n","import React from 'react';\nimport LinkExternal from './LinkExternal';\nimport { EtherscanLinkProps } from './types';\nimport { appChain } from '../../constants';\n\n\n\nconst EtherscanLink: React.FC<EtherscanLinkProps> = ({ address, token, tx, children, ...props }) => {\n  let href = '';\n  switch (appChain) {\n    case 4: href = 'https://rinkeby.etherscan.io'; break;\n    case 56: href = 'https://bscscan.com'; break;\n    default: break;\n  }\n\n  if (address) {\n    href += `/address/${address}`;\n  } else if (token) {\n    href += `/token/${token}`;\n  } else if (tx) {\n    href += `/tx/${tx}`;\n  }\n\n  return (\n    <LinkExternal href={href} {...props}>\n      {children}\n    </LinkExternal>\n  );\n};\n\nexport default EtherscanLink;\n"],"sourceRoot":""}