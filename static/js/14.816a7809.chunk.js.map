{"version":3,"sources":["../../src.ts/index.ts","pages/NftItemsPage.js","components/Page.js","helpers/Media.ts","components/ScrollToTopOnMount.js","components/Seo.js","components/HeaderDesktop.js","components/HeaderMobile.js","components/Footer.js","components/Link/EtherscanLink.tsx"],"names":["hot","module","useEagerConnect","context","useActiveWeb3React","library","account","chainId","getNftContract","active","withSigner","provider","getSigner","Contract","FancyNftCubeFacetsAddress","FancyNftCubeFacetsAbi","getTokenContract","FancyTokenAddress","FancyTokenAbi","getTokenAllowance","a","contractToken","allowance","makeTokenApprove","amountBn","lt","approve","ethers","constants","MaxUint256","useState","nullAddress","owner","setOwner","maxSupply","setMaxSupply","totalSupply","setTotalSupply","airdropMintsTotalLimit","setAirdropMintsTotalLimit","presaleMintsTotalLimit","setPresaleMintsTotalLimit","privsaleMintsTotalLimit","setPrivsaleMintsTotalLimit","airdropMintsTotal","setAirdropMintsTotal","presaleMintsTotal","setPresaleMintsTotal","privsaleMintsTotal","setPrivsaleMintsTotal","saleMintsTotal","setSaleMintsTotal","airdropMintsLimit","setAirdropMintsLimit","presaleMintsLimit","setPresaleMintsLimit","privsaleMintsLimit","setPrivsaleMintsLimit","saleMintsLimit","setSaleMintsLimit","balance","setBalance","balanceToken","setBalanceToken","airdropMints","setAirdropMints","presaleMints","setPresaleMints","privsaleMints","setPrivsaleMints","saleMints","setSaleMints","isAirdropWhitelisted","setAirdropWhitelisted","isPresaleWhitelisted","setPresaleWhitelisted","isPrivsaleWhitelisted","setPrivsaleWhitelisted","isAirdropActive","setAirdropActive","isPresaleActive","setPresaleActive","isPrivsaleActive","setPrivsaleActive","isSaleActive","setSaleActive","airdropStartTime","setAirdropStartTime","presaleStartTime","setPresaleStartTime","privsaleStartTime","setPrivsaleStartTime","saleStartTime","setSaleStartTime","presalePrice","setPresalePrice","privsalePrice","setPrivsalePrice","salePrice","setSalePrice","setInitDone","updating","setUpdating","update","contract","MAX_SUPPLY","parseInt","toString","toNumber","presaleValue","utils","formatEther","privsaleValue","saleValue","balanceOf","airdropWhitelist","presaleWhitelist","privsaleWhitelist","console","error","blockNumber","setBlockNumber","time","setTime","useEffect","on","Date","now","intervalId","setInterval","clearInterval","isOwner","onlyOwner","toast","Error","setAirdropWhitelist","setPresaleWhitelist","setPrivsaleWhitelist","onChangeWhitelist","e","name","value","stringToList","string","list","temp","split","i","addr","trim","push","doTx","promiseTx","tx","info","hash","wait","success","addToAirdropWhitelist","addToPresaleWhitelist","addToPrivsaleWhitelist","airdropStartTimeValue","setAirdropStartTimeValue","presaleStartTimeValue","setPresaleStartTimeValue","privsaleStartTimeValue","setPrivsaleStartTimeValue","saleStartTimeValue","setSaleStartTimeValue","onChangeStartTimeValue","setupAirdropStartTime","setupPresaleStartTime","setupPrivsaleStartTime","setupSaleStartTime","airdropMintTotalLimitValue","setAirdropMintTotalLimitValue","presaleMintTotalLimitValue","setPresaleMintTotalLimitValue","privsaleMintTotalLimitValue","setPrivsaleMintTotalLimitValue","onChangeMintTotalLimitValue","setupAirdropMintTotalLimit","setupPresaleMintTotalLimit","setupPrivsaleMintTotalLimit","airdropMintLimitValue","setAirdropMintLimitValue","presaleMintLimitValue","setPresaleMintLimitValue","privsaleMintLimitValue","setPrivsaleMintLimitValue","saleMintLimitValue","setSaleMintLimitValue","onChangeMintLimitValue","setupAirdropMintLimit","setupPresaleMintLimit","setupPrivsaleMintLimit","setupSaleMintLimit","presalePriceValue","setPresalePriceValue","privsalePriceValue","setPrivsalePriceValue","salePriceValue","setSalePriceValue","onChangePriceValue","setupPresalePrice","parseEther","setupPrivsalePrice","setupSalePrice","mintAirdropCount","setMintAirdropCount","mintPresaleCount","setMintPresaleCount","mintPrivsaleCount","setMintPrivsaleCount","mintSaleCount","setMintSaleCount","onChangeMintCount","mintAirdrop","estimateGas","estimation","gasLimit","mul","div","mintPresale","mintPrivsale","mintSale","title","as","Content","displayType","thousandSeparator","Subheader","address","id","token","moment","fromNow","Input","label","type","required","onChange","disabled","primary","onClick","min","step","suffix","description","meta","children","isMobile","useMediaPredicate","mobileBreakpoint","style","minHeight","ScrollToTopOnMount","window","scrollTo","metaDescription","defaultTitle","appName","htmlAttributes","lang","titleTemplate","undefined","content","property","concat","triedEager","openWalletConnectModal","useModal","open","openWalletAccountModal","accountShort","substring","length","fixed","size","inverted","Item","header","Link","to","routerPaths","main","NavLink","heroes","items","mixer","marketplace","lottery","staking","farming","position","color","appChain","sidebarOpened","setSidebarOpened","Pushable","Menu","animation","onHide","vertical","visible","Pusher","dimmed","textAlign","pointing","divided","stackable","Row","Column","width","link","contacts","faq","LinkExternal","href","projectTwitter","section","getFullYear","horizontal","projectEmail","terms","privacy","EtherscanLink","props"],"mappings":"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","file":"static/js/14.816a7809.chunk.js","sourcesContent":["\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map","import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport {\n  Container, Header, Button, Form, Divider, Segment,\n} from 'semantic-ui-react';\nimport Number from 'react-number-format';\nimport { Contract, utils, ethers } from 'ethers';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport Page from '../components/Page';\nimport EtherscanLink from '../components/Link/EtherscanLink';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\nimport {\n  FancyNftCubeFacetsAddress,\n  FancyTokenAddress,\n  nullAddress,\n} from '../constants';\nimport FancyNftCubeFacetsAbi from '../abis/FancyNftCubeFacetsAbi.json';\nimport FancyTokenAbi from '../abis/FancyTokenAbi.json';\n\n\n\nfunction NftItemsPage() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { library, chainId, account, active } = context;\n\n  const getNftContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyNftCubeFacetsAddress, FancyNftCubeFacetsAbi, provider);\n  }\n  const getTokenContract = (withSigner = false) => {\n    let provider = library;\n    if (withSigner) provider = library.getSigner();\n    return new Contract(FancyTokenAddress, FancyTokenAbi, provider);\n  }\n  const getTokenAllowance = async () => {\n    const contractToken = getTokenContract();\n    return await contractToken.allowance(account, FancyNftCubeFacetsAddress);\n  }\n  const makeTokenApprove = async (amountBn) => {\n    const contractToken = getTokenContract(true);\n    const allowance = await getTokenAllowance();\n    if (allowance.lt(amountBn))\n      return await contractToken.approve(FancyNftCubeFacetsAddress, ethers.constants.MaxUint256);\n  }\n\n  // address\n  const [owner, setOwner] = useState(nullAddress);\n\n  // supply\n  const [maxSupply, setMaxSupply] = useState('0');\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  // mints total limit\n  const [airdropMintsTotalLimit, setAirdropMintsTotalLimit] = useState('0');\n  const [presaleMintsTotalLimit, setPresaleMintsTotalLimit] = useState('0');\n  const [privsaleMintsTotalLimit, setPrivsaleMintsTotalLimit] = useState('0');\n\n  // mints total\n  const [airdropMintsTotal, setAirdropMintsTotal] = useState('0');\n  const [presaleMintsTotal, setPresaleMintsTotal] = useState('0');\n  const [privsaleMintsTotal, setPrivsaleMintsTotal] = useState('0');\n  const [saleMintsTotal, setSaleMintsTotal] = useState('0');\n\n  // mints limit\n  const [airdropMintsLimit, setAirdropMintsLimit] = useState('0');\n  const [presaleMintsLimit, setPresaleMintsLimit] = useState('0');\n  const [privsaleMintsLimit, setPrivsaleMintsLimit] = useState('0');\n  const [saleMintsLimit, setSaleMintsLimit] = useState('0');\n\n  // mints\n  const [balance, setBalance] = useState('0');\n  const [balanceToken, setBalanceToken] = useState('0');\n  const [airdropMints, setAirdropMints] = useState('0');\n  const [presaleMints, setPresaleMints] = useState('0');\n  const [privsaleMints, setPrivsaleMints] = useState('0');\n  const [saleMints, setSaleMints] = useState('0');\n\n  // isWhitelisted\n  const [isAirdropWhitelisted, setAirdropWhitelisted] = useState(false);\n  const [isPresaleWhitelisted, setPresaleWhitelisted] = useState(false);\n  const [isPrivsaleWhitelisted, setPrivsaleWhitelisted] = useState(false);\n\n  // status\n  const [isAirdropActive, setAirdropActive] = useState(false);\n  const [isPresaleActive, setPresaleActive] = useState(false);\n  const [isPrivsaleActive, setPrivsaleActive] = useState(false);\n  const [isSaleActive, setSaleActive] = useState(false);\n\n  // startTime\n  const [airdropStartTime, setAirdropStartTime] = useState(0);\n  const [presaleStartTime, setPresaleStartTime] = useState(0);\n  const [privsaleStartTime, setPrivsaleStartTime] = useState(0);\n  const [saleStartTime, setSaleStartTime] = useState(0);\n\n  // price\n  const [presalePrice, setPresalePrice] = useState('0');\n  const [privsalePrice, setPrivsalePrice] = useState('0');\n  const [salePrice, setSalePrice] = useState('0');\n\n\n  // update\n  const [initDone, setInitDone] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const update = async () => {\n    if (updating) return;\n    setUpdating(true);\n    try {\n      const contract = getNftContract();\n      const contractToken = getTokenContract();\n\n      // address\n      const owner = await contract.owner();\n      setOwner(owner);\n\n      // supply\n      const maxSupply = await contract.MAX_SUPPLY();\n      setMaxSupply(parseInt(maxSupply.toString()));\n      const totalSupply = await contract.totalSupply();\n      setTotalSupply(parseInt(totalSupply.toString()));\n\n      // mints total limit\n      const airdropMintsTotalLimit = await contract.airdropMintsTotalLimit();\n      setAirdropMintsTotalLimit(parseInt(airdropMintsTotalLimit.toString()));\n      const presaleMintsTotalLimit = await contract.presaleMintsTotalLimit();\n      setPresaleMintsTotalLimit(parseInt(presaleMintsTotalLimit.toString()));\n      const privsaleMintsTotalLimit = await contract.privsaleMintsTotalLimit();\n      setPrivsaleMintsTotalLimit(parseInt(privsaleMintsTotalLimit.toString()));\n\n      // mints total\n      const airdropMintsTotal = await contract.airdropMintsTotal();\n      setAirdropMintsTotal(parseInt(airdropMintsTotal.toString()));\n      const presaleMintsTotal = await contract.presaleMintsTotal();\n      setPresaleMintsTotal(parseInt(presaleMintsTotal.toString()));\n      const privsaleMintsTotal = await contract.privsaleMintsTotal();\n      setPrivsaleMintsTotal(parseInt(privsaleMintsTotal.toString()));\n      const saleMintsTotal = await contract.saleMintsTotal();\n      setSaleMintsTotal(parseInt(saleMintsTotal.toString()));\n\n      // mints limit\n      const airdropMintsLimit = await contract.airdropMintsLimit();\n      setAirdropMintsLimit(parseInt(airdropMintsLimit.toString()));\n      const presaleMintsLimit = await contract.presaleMintsLimit();\n      setPresaleMintsLimit(parseInt(presaleMintsLimit.toString()));\n      const privsaleMintsLimit = await contract.privsaleMintsLimit();\n      setPrivsaleMintsLimit(parseInt(privsaleMintsLimit.toString()));\n      const saleMintsLimit = await contract.saleMintsLimit();\n      setSaleMintsLimit(parseInt(saleMintsLimit.toString()));\n\n      // status\n      const isAirdropActive = await contract.isAirdropActive();\n      setAirdropActive(isAirdropActive);\n      const isPresaleActive = await contract.isPresaleActive();\n      setPresaleActive(isPresaleActive);\n      const isPrivsaleActive = await contract.isPrivsaleActive();\n      setPrivsaleActive(isPrivsaleActive);\n      const isSaleActive = await contract.isSaleActive();\n      setSaleActive(isSaleActive);\n\n      // startTime\n      const airdropStartTime = await contract.airdropStartTime();\n      setAirdropStartTime(airdropStartTime.toNumber());\n      const presaleStartTime = await contract.presaleStartTime();\n      setPresaleStartTime(presaleStartTime.toNumber());\n      const privsaleStartTime = await contract.privsaleStartTime();\n      setPrivsaleStartTime(privsaleStartTime.toNumber());\n      const saleStartTime = await contract.saleStartTime();\n      setSaleStartTime(saleStartTime.toNumber());\n\n      // price\n      const presalePrice = await contract.presaleValue(1);\n      setPresalePrice(\n        utils.formatEther(presalePrice.toString())\n      );\n      const privsalePrice = await contract.privsaleValue(1);\n      setPrivsalePrice(\n        utils.formatEther(privsalePrice.toString())\n      );\n      const salePrice = await contract.saleValue(1);\n      setSalePrice(\n        utils.formatEther(salePrice.toString())\n      );\n\n      if (account) {\n        // mints\n        const balance = await contract.balanceOf(account);\n        setBalance(parseInt(balance.toString()));\n        const balanceToken = await contractToken.balanceOf(account);\n        setBalanceToken(utils.formatEther(balanceToken));\n\n\n        const airdropMints = await contract.airdropMints(account);\n        setAirdropMints(parseInt(airdropMints.toString()));\n        const presaleMints = await contract.presaleMints(account);\n        setPresaleMints(parseInt(presaleMints.toString()));\n        const privsaleMints = await contract.privsaleMints(account);\n        setPrivsaleMints(parseInt(privsaleMints.toString()));\n        const saleMints = await contract.saleMints(account);\n        setSaleMints(parseInt(saleMints.toString()));\n\n        // isWhitelisted\n        const isAirdropWhitelisted = await contract.airdropWhitelist(account);\n        setAirdropWhitelisted(isAirdropWhitelisted);\n        const isPresaleWhitelisted = await contract.presaleWhitelist(account);\n        setPresaleWhitelisted(isPresaleWhitelisted);\n        const isPrivsaleWhitelisted = await contract.privsaleWhitelist(account);\n        setPrivsaleWhitelisted(isPrivsaleWhitelisted);\n\n      } else {\n        setBalance(0);\n        setBalanceToken('0');\n\n        // mints\n        setAirdropMints('0');\n        setPresaleMints('0');\n        setPrivsaleMints('0');\n        setSaleMints('0');\n\n        // isWhitelisted\n        setAirdropWhitelisted(false);\n        setPresaleWhitelisted(false);\n        setPrivsaleWhitelisted(false);\n      }\n\n    } catch (error) { console.error(error); }\n    setInitDone(true);\n    setUpdating(false);\n  }\n\n  const [blockNumber, setBlockNumber] = useState(-1);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if (library) {\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n    }\n\n    setTime(Date.now());\n    const intervalId = setInterval(() => {\n      setTime(Date.now());\n    }, 1 * 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  useEffect(() => {\n    if (library) {\n      library.on('block', (blockNumber) => {\n        setBlockNumber(blockNumber);\n        update();\n      });\n    }\n  }, [library]);\n\n  useEffect(() => {\n  }, [time]);\n  // update end\n\n\n  // checks\n  const isOwner = () => {\n    if (account === owner) {\n      return true;\n    }\n    return false;\n  }\n  const onlyOwner = () => {\n    if (!isOwner()) {\n      toast.error('Not Owner');\n      throw new Error('Not Owner');\n    }\n  }\n  // checks end\n\n\n  // addToWhitelist\n  const [airdropWhitelist, setAirdropWhitelist] = useState('');\n  const [presaleWhitelist, setPresaleWhitelist] = useState('');\n  const [privsaleWhitelist, setPrivsaleWhitelist] = useState('');\n  const onChangeWhitelist = (e, { name, value }) => {\n    switch (name) {\n      case 'airdropWhitelist': setAirdropWhitelist(value); break;\n      case 'presaleWhitelist': setPresaleWhitelist(value); break;\n      case 'privsaleWhitelist': setPrivsaleWhitelist(value); break;\n      default: break;\n    }\n  }\n  const stringToList = (string) => {\n    const list = [];\n    const temp = string.split(',');\n    for (let i in temp) {\n      let addr = temp[i].trim();\n      if (addr && addr !== '')\n        list.push(addr);\n    }\n    return list;\n  }\n  const doTx = async (promiseTx) => {\n    try {\n      const tx = await promiseTx;\n      if (!tx) return;\n      toast.info('Pending tx doTx', tx.hash);\n      await tx.wait(1);\n      toast.success('Done tx doTx', tx.hash);\n    } catch (error) {\n      console.error(error);\n      toast.error('Error doTx');\n    }\n  }\n  const addToAirdropWhitelist = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.addToAirdropWhitelist(stringToList(airdropWhitelist)));\n  }\n  const addToPresaleWhitelist = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.addToPresaleWhitelist(stringToList(presaleWhitelist)));\n  }\n  const addToPrivsaleWhitelist = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.addToPrivsaleWhitelist(stringToList(privsaleWhitelist)));\n  }\n  // addToWhitelist end\n\n\n  // startTime\n  const [airdropStartTimeValue, setAirdropStartTimeValue] = useState('0');\n  const [presaleStartTimeValue, setPresaleStartTimeValue] = useState('0');\n  const [privsaleStartTimeValue, setPrivsaleStartTimeValue] = useState('0');\n  const [saleStartTimeValue, setSaleStartTimeValue] = useState('0');\n  const onChangeStartTimeValue = (e, { name, value }) => {\n    switch (name) {\n      case 'airdropStartTimeValue': setAirdropStartTimeValue(value); break;\n      case 'presaleStartTimeValue': setPresaleStartTimeValue(value); break;\n      case 'privsaleStartTimeValue': setPrivsaleStartTimeValue(value); break;\n      case 'saleStartTimeValue': setSaleStartTimeValue(value); break;\n      default: break;\n    }\n  }\n  const setupAirdropStartTime = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setAirdropStartTime(airdropStartTimeValue));\n  }\n\n  const setupPresaleStartTime = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPresaleStartTime(presaleStartTimeValue));\n  }\n\n  const setupPrivsaleStartTime = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPrivsaleStartTime(privsaleStartTimeValue));\n  }\n\n  const setupSaleStartTime = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setSaleStartTime(saleStartTimeValue));\n  }\n  // startTime End\n\n\n  // mint total limit\n  const [airdropMintTotalLimitValue, setAirdropMintTotalLimitValue] = useState('0');\n  const [presaleMintTotalLimitValue, setPresaleMintTotalLimitValue] = useState('0');\n  const [privsaleMintTotalLimitValue, setPrivsaleMintTotalLimitValue] = useState('0');\n  const onChangeMintTotalLimitValue = (e, { name, value }) => {\n    switch (name) {\n      case 'airdropMintTotalLimitValue': setAirdropMintTotalLimitValue(value); break;\n      case 'presaleMintTotalLimitValue': setPresaleMintTotalLimitValue(value); break;\n      case 'privsaleMintTotalLimitValue': setPrivsaleMintTotalLimitValue(value); break;\n      default: break;\n    }\n  }\n  const setupAirdropMintTotalLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setAirdropMintsTotalLimit(airdropMintTotalLimitValue));\n    setAirdropMintTotalLimitValue('0');\n  }\n  const setupPresaleMintTotalLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPresaleMintsTotalLimit(presaleMintTotalLimitValue));\n    setPresaleMintTotalLimitValue('0');\n  }\n  const setupPrivsaleMintTotalLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPrivsaleMintsTotalLimit(privsaleMintTotalLimitValue));\n    setPrivsaleMintTotalLimitValue('0');\n  }\n  // mint total end\n\n\n  // mint limit\n  const [airdropMintLimitValue, setAirdropMintLimitValue] = useState('0');\n  const [presaleMintLimitValue, setPresaleMintLimitValue] = useState('0');\n  const [privsaleMintLimitValue, setPrivsaleMintLimitValue] = useState('0');\n  const [saleMintLimitValue, setSaleMintLimitValue] = useState('0');\n  const onChangeMintLimitValue = (e, { name, value }) => {\n    switch (name) {\n      case 'airdropMintLimitValue': setAirdropMintLimitValue(value); break;\n      case 'presaleMintLimitValue': setPresaleMintLimitValue(value); break;\n      case 'privsaleMintLimitValue': setPrivsaleMintLimitValue(value); break;\n      case 'saleMintLimitValue': setSaleMintLimitValue(value); break;\n      default: break;\n    }\n  }\n  const setupAirdropMintLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setAirdropMintsLimit(airdropMintLimitValue));\n    setAirdropMintLimitValue('0');\n  }\n  const setupPresaleMintLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPresaleMintsLimit(presaleMintLimitValue));\n    setPresaleMintLimitValue('0');\n  }\n  const setupPrivsaleMintLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPrivsaleMintsLimit(privsaleMintLimitValue));\n    setPrivsaleMintLimitValue('0');\n  }\n  const setupSaleMintLimit = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setSaleMintsLimit(saleMintLimitValue));\n    setSaleMintLimitValue('0');\n  }\n  // mint limit end\n\n\n  // price\n  const [presalePriceValue, setPresalePriceValue] = useState('0');\n  const [privsalePriceValue, setPrivsalePriceValue] = useState('0');\n  const [salePriceValue, setSalePriceValue] = useState('0');\n  const onChangePriceValue = (e, { name, value }) => {\n    switch (name) {\n      case 'presalePriceValue': setPresalePriceValue(value); break;\n      case 'privsalePriceValue': setPrivsalePriceValue(value); break;\n      case 'salePriceValue': setSalePriceValue(value); break;\n      default: break;\n    }\n  }\n  const setupPresalePrice = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPresalePrice(utils.parseEther(presalePriceValue)));\n    setPresalePriceValue('0');\n  }\n  const setupPrivsalePrice = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setPrivsalePrice(utils.parseEther(privsalePriceValue)));\n    setPrivsalePriceValue('0');\n  }\n  const setupSalePrice = async () => {\n    onlyOwner();\n    const contract = getNftContract(true);\n    doTx(contract.setSalePrice(utils.parseEther(salePriceValue)));\n    setSalePriceValue('0');\n  }\n  // price end\n\n\n  // mint\n  const [mintAirdropCount, setMintAirdropCount] = useState('0');\n  const [mintPresaleCount, setMintPresaleCount] = useState('0');\n  const [mintPrivsaleCount, setMintPrivsaleCount] = useState('0');\n  const [mintSaleCount, setMintSaleCount] = useState('0');\n  const onChangeMintCount = (e, { name, value }) => {\n    switch (name) {\n      case 'mintAirdropCount': setMintAirdropCount(value); break;\n      case 'mintPresaleCount': setMintPresaleCount(value); break;\n      case 'mintPrivsaleCount': setMintPrivsaleCount(value); break;\n      case 'mintSaleCount': setMintSaleCount(value); break;\n      default: break;\n    }\n  }\n  const mintAirdrop = async () => {\n    const contract = getNftContract(true);\n    const estimation = await contract.estimateGas.mintAirdrop(mintAirdropCount);\n    await doTx(contract.mintAirdrop(mintAirdropCount, { gasLimit: estimation.mul(120).div(100) }));\n    //setMintAirdropCount('0');\n  }\n\n  const mintPresale = async () => {\n    const contract = getNftContract(true);\n    const value = await contract.presaleValue(mintPresaleCount);\n    await doTx(makeTokenApprove(value));\n    const estimation = await contract.estimateGas.mintPresale(mintPresaleCount);\n    await doTx(contract.mintPresale(mintPresaleCount, { gasLimit: estimation.mul(120).div(100) }));\n    //setMintPresaleCount('0');\n  }\n\n  const mintPrivsale = async () => {\n    const contract = getNftContract(true);\n    const value = await contract.privsaleValue(mintPrivsaleCount);\n    await doTx(makeTokenApprove(value));\n    const estimation = await contract.estimateGas.mintPrivsale(mintPrivsaleCount);\n    await doTx(contract.mintPrivsale(mintPrivsaleCount, { gasLimit: estimation.mul(120).div(100) }));\n    //setMintPrivsaleCount('0');\n  }\n\n  const mintSale = async () => {\n    const contract = getNftContract(true);\n    const value = await contract.saleValue(mintSaleCount);\n    await doTx(makeTokenApprove(value));\n    const estimation = await contract.estimateGas.mintSale(mintSaleCount);\n    await doTx(contract.mintSale(mintSaleCount, { gasLimit: estimation.mul(120).div(100) }));\n    //setMintSaleCount('0');\n  }\n  // mint End\n\n  return (\n    <Page title={'Items'}>\n      <Container>\n        <Header as='h1'>\n          <Header.Content>\n            Items (<Number value={totalSupply}\n              displayType='text' thousandSeparator />/<Number value={maxSupply}\n                displayType='text' thousandSeparator />)\n            <Header.Subheader>\n              <div>Smart Contract: <EtherscanLink address={FancyNftCubeFacetsAddress}>{FancyNftCubeFacetsAddress}</EtherscanLink></div>\n              <div>Owner: <EtherscanLink address={owner}>{owner}</EtherscanLink></div>\n              <div>Last Block: <Number value={blockNumber}\n                displayType='text' thousandSeparator />\n              </div>\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n        <Divider />\n        <Divider />\n\n\n        <section id='account'>\n          <Header as='h2'>Your</Header>\n          <div>Address: <EtherscanLink address={account}>{account}</EtherscanLink></div>\n          <div>Balance NFT: <EtherscanLink token={`${FancyNftCubeFacetsAddress}?a=${account}`}><Number value={balance} displayType='text' thousandSeparator /></EtherscanLink></div>\n          <div>Balance Token: <EtherscanLink token={`${FancyTokenAddress}?a=${account}`}><Number value={balanceToken} displayType='text' thousandSeparator /></EtherscanLink></div>\n        </section>\n        <Divider />\n        <Divider />\n\n\n        <section id='airdrop'>\n          <Header as='h2'>\n            Airdrop ({isAirdropActive ? 'Is live' : 'Done'})\n            <Header.Subheader>\n              <div>{isAirdropWhitelisted ? 'Whitelisted' : 'Not Whitelisted'}</div>\n              <div>Start time: {airdropStartTime} ({moment(airdropStartTime, 'X').fromNow()})</div>\n              <div>Mints Total: <Number value={airdropMintsTotal} displayType='text' thousandSeparator /></div>\n              <div>Mints Total Limit: <Number value={airdropMintsTotalLimit} displayType='text' thousandSeparator /></div>\n              <div>Mints: <Number value={airdropMints} displayType='text' thousandSeparator /></div>\n              <div>Mints Limit: <Number value={airdropMintsLimit} displayType='text' thousandSeparator /></div>\n            </Header.Subheader>\n          </Header>\n          <Form>\n            <Form.Input\n              name='airdropWhitelist' label={'Address list'} type='text' required\n              value={airdropWhitelist} onChange={onChangeWhitelist}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={addToAirdropWhitelist}\n              disabled={!isOwner()}\n            >Add to Whitelist</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='airdropStartTimeValue' label={'Start time'} type='number' required\n              value={airdropStartTimeValue} onChange={onChangeStartTimeValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupAirdropStartTime}\n              disabled={!isOwner()}\n            >Set Start time</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='airdropMintTotalLimitValue' label={'Mint Total Limit'} type='number' required\n              value={airdropMintTotalLimitValue} onChange={onChangeMintTotalLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupAirdropMintTotalLimit}\n              disabled={!isOwner()}\n            >Set Mint Total Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='airdropMintLimitValue' label={'Mint Limit'} type='number' required\n              value={airdropMintLimitValue} onChange={onChangeMintLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupAirdropMintLimit}\n              disabled={!isOwner()}\n            >Set Mint Limit</Button>\n          </Form>\n          <Divider />\n\n\n          <Form>\n            <Form.Input\n              name='mintAirdropCount' label={'Count'} type='number' min='0' step='1' required\n              value={mintAirdropCount} onChange={onChangeMintCount}\n              disabled={!isAirdropActive || !isAirdropWhitelisted}\n            />\n            <Button\n              primary onClick={mintAirdrop}\n              disabled={!isAirdropActive || !isAirdropWhitelisted || parseInt(mintAirdropCount) === 0}\n            >Mint</Button>\n          </Form>\n        </section>\n        <Divider />\n        <Divider />\n\n\n        <section id='presale'>\n          <Header as='h2'>\n            Presale ({isPresaleActive ? 'Is live' : 'Done'})\n            <Header.Subheader>\n              <div>{isPresaleWhitelisted ? 'Whitelisted' : 'Not Whitelisted'}</div>\n              <div>Start time: {presaleStartTime} ({moment(presaleStartTime, 'X').fromNow()})</div>\n              <div>Mints Total: <Number value={presaleMintsTotal} displayType='text' thousandSeparator /></div>\n              <div>Mints Total Limit: <Number value={presaleMintsTotalLimit} displayType='text' thousandSeparator /></div>\n              <div>Mints: <Number value={presaleMints} displayType='text' thousandSeparator /></div>\n              <div>Mints Limit: <Number value={presaleMintsLimit} displayType='text' thousandSeparator /></div>\n              <div>Price: <Number value={presalePrice} suffix=' TOKEN' displayType='text' thousandSeparator /></div>\n            </Header.Subheader>\n          </Header>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presaleWhitelist' label={'Address list'} type='text' required\n              value={presaleWhitelist} onChange={onChangeWhitelist}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={addToPresaleWhitelist}\n              disabled={!isOwner()}\n            >Add to Whitelist</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presaleStartTimeValue' label={'Start time'} type='number' required\n              value={presaleStartTimeValue} onChange={onChangeStartTimeValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPresaleStartTime}\n              disabled={!isOwner()}\n            >Set Start time</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presaleMintTotalLimitValue' label={'Mint Total Limit'} type='number' required\n              value={presaleMintTotalLimitValue} onChange={onChangeMintTotalLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPresaleMintTotalLimit}\n              disabled={!isOwner()}\n            >Set Mint Total Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presaleMintLimitValue' label={'Mint Limit'} type='number' required\n              value={presaleMintLimitValue} onChange={onChangeMintLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPresaleMintLimit}\n              disabled={!isOwner()}\n            >Set Mint Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='presalePriceValue' label={'Price TOKEN'} type='number' required\n              value={presalePriceValue} onChange={onChangePriceValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPresalePrice}\n              disabled={!isOwner()}\n            >Set Price</Button>\n          </Form>\n          <Divider />\n\n\n          <Form>\n            <Form.Input\n              name='mintPresaleCount' label={'Count'} type='number' min='0' step='1' required\n              value={mintPresaleCount} onChange={onChangeMintCount}\n              disabled={!isPresaleActive || !isPresaleWhitelisted}\n            />\n            <Button\n              primary onClick={mintPresale}\n              disabled={!isPresaleActive || !isPresaleWhitelisted || parseInt(mintPresaleCount) === 0}\n            >Mint</Button>\n          </Form>\n        </section>\n        <Divider />\n        <Divider />\n\n\n        <section id='privsale'>\n          <Header as='h2'>\n            Privsale ({isPrivsaleActive ? 'Is live' : 'Done'})\n            <Header.Subheader>\n              <div>{isPrivsaleWhitelisted ? 'Whitelisted' : 'Not Whitelisted'}</div>\n              <div>Start time: {privsaleStartTime} ({moment(privsaleStartTime, 'X').fromNow()})</div>\n              <div>Mints Total: <Number value={privsaleMintsTotal} displayType='text' thousandSeparator /></div>\n              <div>Mints Total Limit: <Number value={privsaleMintsTotalLimit} displayType='text' thousandSeparator /></div>\n              <div>Mints: <Number value={privsaleMints} displayType='text' thousandSeparator /></div>\n              <div>Mints Limit: <Number value={privsaleMintsLimit} displayType='text' thousandSeparator /></div>\n              <div>Price: <Number value={privsalePrice} suffix=' TOKEN' displayType='text' thousandSeparator /></div>\n            </Header.Subheader>\n          </Header>\n          <Form>\n            <Form.Input\n              name='privsaleWhitelist' label={'Address list'} type='text' required\n              value={privsaleWhitelist} onChange={onChangeWhitelist}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={addToPrivsaleWhitelist}\n              disabled={!isOwner()}\n            >Add to Whitelist</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='privsaleStartTimeValue' label={'Start time'} type='number' required\n              value={privsaleStartTimeValue} onChange={onChangeStartTimeValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPrivsaleStartTime}\n              disabled={!isOwner()}\n            >Set Start time</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='privsaleMintTotalLimitValue' label={'Mint Total Limit'} type='number' required\n              value={privsaleMintTotalLimitValue} onChange={onChangeMintTotalLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPrivsaleMintTotalLimit}\n              disabled={!isOwner()}\n            >Set Mint Total Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='privsaleMintLimitValue' label={'Mint Limit'} type='number' required\n              value={privsaleMintLimitValue} onChange={onChangeMintLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPrivsaleMintLimit}\n              disabled={!isOwner()}\n            >Set Mint Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='privsalePriceValue' label={'Price TOKEN'} type='number' required\n              value={privsalePriceValue} onChange={onChangePriceValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupPrivsalePrice}\n              disabled={!isOwner()}\n            >Set Price</Button>\n          </Form>\n          <Divider />\n\n\n          <Form>\n            <Form.Input\n              name='mintPrivsaleCount' label={'Count'} type='number' min='0' step='1' required\n              value={mintPrivsaleCount} onChange={onChangeMintCount}\n              disabled={!isPrivsaleActive || !isPrivsaleWhitelisted}\n            />\n            <Button\n              primary onClick={mintPrivsale}\n              disabled={!isPrivsaleActive || !isPrivsaleWhitelisted || parseInt(mintPrivsaleCount) === 0}\n            >Mint</Button>\n          </Form>\n        </section>\n        <Divider />\n        <Divider />\n\n\n        <section id='sale'>\n          <Header as='h2'>\n            Sale ({isSaleActive ? 'Is live' : 'Done'})\n            <Header.Subheader>\n              <div>Start time: {saleStartTime} ({moment(saleStartTime, 'X').fromNow()})</div>\n              <div>Mints Total: <Number value={saleMintsTotal} displayType='text' thousandSeparator /></div>\n              <div>Mints: <Number value={saleMints} displayType='text' thousandSeparator /></div>\n              <div>Mints Limit: <Number value={saleMintsLimit} displayType='text' thousandSeparator /></div>\n              <div>Price: <Number value={salePrice} suffix=' TOKEN' displayType='text' thousandSeparator /></div>\n            </Header.Subheader>\n          </Header>\n          <Form>\n            <Form.Input\n              name='saleStartTimeValue' label={'Start time'} type='number' required\n              value={saleStartTimeValue} onChange={onChangeStartTimeValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupSaleStartTime}\n              disabled={!isOwner()}\n            >Set Start time</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='saleMintLimitValue' label={'Mint Limit'} type='number' required\n              value={saleMintLimitValue} onChange={onChangeMintLimitValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupSaleMintLimit}\n              disabled={!isOwner()}\n            >Set Mint Limit</Button>\n          </Form>\n          <Divider />\n          <Form>\n            <Form.Input\n              name='salePriceValue' label={'Price TOKEN'} type='number' required\n              value={salePriceValue} onChange={onChangePriceValue}\n              disabled={!isOwner()}\n            />\n            <Button\n              primary onClick={setupSalePrice}\n              disabled={!isOwner()}\n            >Set Price</Button>\n          </Form>\n          <Divider />\n\n\n          <Form>\n            <Form.Input\n              name='mintSaleCount' label={'Count'} type='number' min='0' step='1' required\n              value={mintSaleCount} onChange={onChangeMintCount}\n              disabled={!isSaleActive}\n            />\n            <Button\n              primary onClick={mintSale}\n              disabled={!isSaleActive || parseInt(mintSaleCount) === 0}\n            >Mint</Button>\n          </Form>\n        </section>\n        <Divider />\n        <Divider />\n\n      </Container>\n    </Page >\n  );\n};\n\nexport default hot(module)(NftItemsPage);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { useMediaPredicate } from 'react-media-hook';\nimport { mobileBreakpoint } from '../helpers/Media';\n\nimport ScrollToTopOnMount from './ScrollToTopOnMount';\nimport Seo from './Seo';\nimport HeaderDesktop from './HeaderDesktop';\nimport HeaderMobile from './HeaderMobile';\nimport Footer from './Footer';\n\n\n\nfunction Page({ title, description, meta, children }) {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <Seo\n        title={title}\n        description={description}\n        meta={meta ? meta : []}\n      />\n\n      {!isMobile && <>\n        <HeaderDesktop />\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </>}\n\n      {isMobile && <HeaderMobile>\n        <main style={{ minHeight: '100vh', }}>\n          {children}\n        </main>\n      </HeaderMobile>}\n      <Footer />\n    </>\n  );\n};\n\nexport default hot(module)(Page);\n","export const mobileBreakpoint = '(max-width: 768px)';\n\nexport const getAdaptiveClassName = (mainClass: string, isMobile: boolean): string =>\n  isMobile ? `${mainClass} ${mainClass}-mobile` : mainClass;\n","import { useEffect } from 'react';\n\n\n\nexport default function ScrollToTopOnMount() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return null;\n}\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Helmet } from 'react-helmet';\nimport { appName } from '../constants';\n\n\n\nfunction Seo({ title, description, meta, }) {\n  const metaDescription = description;\n  const defaultTitle = appName;\n  const twitter = null;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: 'en',\n      }}\n\n      title={title}\n      defaultTitle={defaultTitle}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: twitter || '',\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n    </Helmet>\n  )\n}\n\nexport default hot(module)(Seo);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Segment, Container, Menu } from 'semantic-ui-react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\n\n\n\nfunction HeaderDesktop() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n  return (\n    <Segment as={'header'}>\n      <Menu fixed='top' size='large' inverted>\n        <Container>\n          <Menu.Item header as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n          <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n          <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n\n          <Menu.Item\n            position='right'\n            style={{ color: chainId === appChain ? 'green' : 'red' }}\n            onClick={(triedEager && active && account)\n              ? openWalletAccountModal\n              : openWalletConnectModal\n            }\n          >\n            {accountShort}\n          </Menu.Item>\n        </Container>\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default hot(module)(HeaderDesktop);\n","import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useModal } from 'react-simple-modal-provider';\nimport { routerPaths } from '../router/helper';\nimport { appName, appChain } from '../constants';\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\nimport { Container, Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\n\n\n\nfunction HeaderMobile({ children }) {\n  const [sidebarOpened, setSidebarOpened] = useState(false);\n\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { chainId, account, active } = context;\n\n  const { open: openWalletConnectModal } = useModal('WalletConnectModal');\n  const { open: openWalletAccountModal } = useModal('WalletAccountModal');\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        as={Menu}\n        animation='overlay'\n        inverted\n        onHide={() => setSidebarOpened(false)}\n        vertical\n        visible={sidebarOpened}\n      >\n        <Menu.Item as={NavLink} to={routerPaths.heroes}>Heroes</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.items}>Items</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.mixer}>Mixer</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.marketplace}>Marketplace</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.lottery}>Lottery</Menu.Item>\n\n        <Menu.Item as={NavLink} to={routerPaths.staking}>Staking</Menu.Item>\n        <Menu.Item as={NavLink} to={routerPaths.farming}>Farming</Menu.Item>\n      </Sidebar>\n\n      <Sidebar.Pusher dimmed={sidebarOpened}>\n        <Segment\n          as={'header'}\n          inverted\n          textAlign='center'\n          vertical\n        >\n          <Menu fixed='top' size='large' pointing inverted>\n            <Container>\n              <Menu.Item onClick={() => setSidebarOpened(true)}>\n                <Icon name='sidebar' />\n              </Menu.Item>\n              <Menu.Item as={Link} to={routerPaths.main}>{appName}</Menu.Item>\n\n              <Menu.Item\n                position='right'\n                style={{ color: chainId === appChain ? 'green' : 'red' }}\n                onClick={(triedEager && active && account)\n                  ? openWalletAccountModal\n                  : openWalletConnectModal\n                }\n              >{accountShort}</Menu.Item>\n            </Container>\n          </Menu>\n        </Segment>\n\n        {children}\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nexport default hot(module)(HeaderMobile);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Link } from 'react-router-dom';\nimport { Segment, Container, List, Grid, Header, Divider } from 'semantic-ui-react';\nimport { routerPaths } from '../router/helper';\nimport { appName, projectEmail, projectTwitter } from '../constants';\nimport LinkExternal from './Link/LinkExternal';\n\n\n\nfunction Footer() {\n  return (\n    <Segment as={'footer'} inverted vertical>\n      <Container textAlign='center'>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.heroes}>Heroes NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.items}>Items NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.mixer}>NFT Mixer</List.Item>\n                <List.Item as={Link} to={routerPaths.marketplace}>Marketplace NFT</List.Item>\n                <List.Item as={Link} to={routerPaths.lottery}>Lottery NFT Owners</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Token Menu</Header>\n              <List link inverted>\n                <List.Item as={Link} to={routerPaths.staking}>NFT Staking</List.Item>\n                <List.Item as={Link} to={routerPaths.farming}>Token Farming</List.Item>\n                <List.Item as={Link} to={routerPaths.contacts}>Smart Contracts</List.Item>\n                <List.Item as={Link} to={routerPaths.faq}>FAQ</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as='h4'>Follow Us</Header>\n              <List link inverted>\n                <List.Item as={LinkExternal} href={projectTwitter}>Twitter</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={7}>\n              <Header as='h4' inverted>Footer Header</Header>\n              <p>Extra space for a call to action inside the footer that could help re-engage users.</p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Divider inverted section />\n        <div>{appName} © {new Date().getFullYear()}.</div>\n        <List horizontal inverted divided link size='small'>\n          <List.Item as={LinkExternal} href={`mailto:${projectEmail}`}>\n            Contact Us\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.terms}>\n            Terms and Conditions\n          </List.Item>\n          <List.Item as={Link} to={routerPaths.privacy}>\n            Privacy Policy\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  );\n};\n\nexport default hot(module)(Footer);\n","import React from 'react';\nimport LinkExternal from './LinkExternal';\nimport { EtherscanLinkProps } from './types';\nimport { appChain } from '../../constants';\n\n\n\nconst EtherscanLink: React.FC<EtherscanLinkProps> = ({ address, token, tx, children, ...props }) => {\n  let href = '';\n  switch (appChain) {\n    case 4: href = 'https://rinkeby.etherscan.io'; break;\n    case 56: href = 'https://bscscan.com'; break;\n    default: break;\n  }\n\n  if (address) {\n    href += `/address/${address}`;\n  } else if (token) {\n    href += `/token/${token}`;\n  } else if (tx) {\n    href += `/tx/${tx}`;\n  }\n\n  return (\n    <LinkExternal href={href} {...props}>\n      {children}\n    </LinkExternal>\n  );\n};\n\nexport default EtherscanLink;\n"],"sourceRoot":""}